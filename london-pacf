{
 "cells": [
  {
   "cell_type": "code",
   "id": "b6a5477a",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:48:56.338585Z",
     "start_time": "2024-08-05T19:48:56.321307Z"
    }
   },
   "source": [
    "import os\n",
    "import pandas as pd\n",
    "import numpy as np \n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.impute import KNNImputer\n",
    "from sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer\n",
    "from sklearn.cluster import KMeans\n",
    "from sklearn.pipeline import Pipeline\n",
    "from wordcloud import WordCloud\n",
    "import missingno as msno\n",
    "from xgboost import XGBRegressor\n",
    "from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "from statsmodels.tsa.stattools import adfuller\n",
    "pd.set_option('display.max_columns', None)"
   ],
   "outputs": [],
   "execution_count": 198
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:52:46.699850Z",
     "start_time": "2024-08-05T19:52:46.692097Z"
    }
   },
   "cell_type": "code",
   "source": [
    "def load_data(path):\n",
    "    df = pd.read_csv(path, parse_dates=['datetime'])\n",
    "    df = df.sort_index()\n",
    "    columns_to_drop = ['Unnamed: 0', 'sunrise', 'sunset']\n",
    "    df = df.drop(columns=columns_to_drop)\n",
    "    df['datetime'] = pd.to_datetime(df['datetime'])\n",
    "\n",
    "    last_year = df['datetime'].max() - pd.DateOffset(years=1)\n",
    "    df_last_year = df[df['datetime'] >= last_year]\n",
    "    df = df.sort_values('datetime')\n",
    "    \n",
    "    return df, df_last_year\n"
   ],
   "id": "51f84fb7ac2fd96",
   "outputs": [],
   "execution_count": 202
  },
  {
   "cell_type": "code",
   "id": "f0a3e833",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:52:47.514135Z",
     "start_time": "2024-08-05T19:52:47.473461Z"
    }
   },
   "source": [
    "df_london, df_last_year_london = load_data('london_weather_2014-2024.csv')\n",
    "df_manila, df_last_year_manila = load_data('manila_weather_2014-2024.csv')\n"
   ],
   "outputs": [],
   "execution_count": 203
  },
  {
   "cell_type": "code",
   "id": "e8382f20-ebd2-4d48-86e6-a2551dacca1e",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:52:48.135906Z",
     "start_time": "2024-08-05T19:52:48.123821Z"
    }
   },
   "source": "df_london",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "                                 name   datetime  tempmax  tempmin  temp  \\\n",
       "0     London, England, United Kingdom 2014-01-01     11.6      6.7   9.1   \n",
       "1     London, England, United Kingdom 2014-01-02     11.0      6.6   9.1   \n",
       "2     London, England, United Kingdom 2014-01-03     10.6      7.3   9.0   \n",
       "3     London, England, United Kingdom 2014-01-04     10.1      4.5   8.0   \n",
       "4     London, England, United Kingdom 2014-01-05     12.0      1.8   6.0   \n",
       "...                               ...        ...      ...      ...   ...   \n",
       "3788  London, England, United Kingdom 2024-05-16     16.5     12.3  14.2   \n",
       "3789  London, England, United Kingdom 2024-05-17     21.6     10.0  16.4   \n",
       "3790  London, England, United Kingdom 2024-05-18     19.2     13.0  15.8   \n",
       "3791  London, England, United Kingdom 2024-05-19     22.7     10.9  16.6   \n",
       "3792  London, England, United Kingdom 2024-05-20     20.2     10.0  15.1   \n",
       "\n",
       "      feelslikemax  feelslikemin  feelslike   dew  humidity  precip  \\\n",
       "0             11.6           3.6        7.0   6.7      84.8  11.857   \n",
       "1             11.0           3.6        7.2   6.0      81.0   5.394   \n",
       "2             10.6           3.2        6.5   5.1      76.8   6.030   \n",
       "3             10.1           2.0        5.1   5.2      82.4   5.239   \n",
       "4             12.0          -0.9        3.6   3.9      85.9   0.201   \n",
       "...            ...           ...        ...   ...       ...     ...   \n",
       "3788          16.5          12.3       14.2  12.4      89.1  10.126   \n",
       "3789          21.6          10.0       16.4  10.3      70.2   0.000   \n",
       "3790          19.2          13.0       15.8  11.7      77.5   2.000   \n",
       "3791          22.7          10.9       16.6   9.3      63.9   0.000   \n",
       "3792          20.2           8.5       14.9   9.2      69.8   0.100   \n",
       "\n",
       "      precipprob  precipcover preciptype  snow  snowdepth  windgust  \\\n",
       "0            100        16.67       rain   0.0        0.0      72.4   \n",
       "1            100        12.50       rain   0.0        0.0      51.8   \n",
       "2            100        16.67       rain   0.0        0.0      77.4   \n",
       "3            100        16.67       rain   0.0        0.0      62.1   \n",
       "4            100         8.33       rain   0.0        0.0      55.6   \n",
       "...          ...          ...        ...   ...        ...       ...   \n",
       "3788         100        20.83       rain   0.0        0.0      18.4   \n",
       "3789           0         0.00       rain   0.0        0.0      17.4   \n",
       "3790         100        25.00       rain   0.0        0.0      22.7   \n",
       "3791           0         0.00        NaN   0.0        0.0      34.2   \n",
       "3792         100         4.17       rain   0.0        0.0      32.0   \n",
       "\n",
       "      windspeed  winddir  sealevelpressure  cloudcover  visibility  \\\n",
       "0          38.4    190.5             993.1        67.4        14.2   \n",
       "1          29.8    216.2             993.4        47.4        26.7   \n",
       "2          33.5    218.4             994.5        52.8        17.9   \n",
       "3          29.2    206.0             993.6        67.6        22.0   \n",
       "4          30.4    192.5            1000.0        66.5        25.5   \n",
       "...         ...      ...               ...         ...         ...   \n",
       "3788       10.1    213.9            1005.2        58.3        15.8   \n",
       "3789        9.4    194.8            1009.3        41.4        21.7   \n",
       "3790       13.4      5.8            1012.8        83.7         9.7   \n",
       "3791       20.3     38.3            1013.8        53.5        10.0   \n",
       "3792       19.5     43.4            1013.6        36.8        10.0   \n",
       "\n",
       "      solarradiation  solarenergy  uvindex  severerisk  moonphase  \\\n",
       "0                6.9          0.5        0         NaN       0.00   \n",
       "1               38.3          3.3        2         NaN       0.03   \n",
       "2               30.3          2.8        2         NaN       0.07   \n",
       "3               17.4          1.4        1         NaN       0.10   \n",
       "4               30.4          2.6        2         NaN       0.14   \n",
       "...              ...          ...      ...         ...        ...   \n",
       "3788            74.5          6.5        3        10.0       0.27   \n",
       "3789           177.8         15.5       10        10.0       0.30   \n",
       "3790            76.1          6.7        3        10.0       0.33   \n",
       "3791           225.0         19.3        9        10.0       0.37   \n",
       "3792           217.3         18.7        8        10.0       0.40   \n",
       "\n",
       "                  conditions  \\\n",
       "0     Rain, Partially cloudy   \n",
       "1     Rain, Partially cloudy   \n",
       "2     Rain, Partially cloudy   \n",
       "3     Rain, Partially cloudy   \n",
       "4     Rain, Partially cloudy   \n",
       "...                      ...   \n",
       "3788  Rain, Partially cloudy   \n",
       "3789        Partially cloudy   \n",
       "3790  Rain, Partially cloudy   \n",
       "3791        Partially cloudy   \n",
       "3792  Rain, Partially cloudy   \n",
       "\n",
       "                                                                     description  \\\n",
       "0     Partly cloudy throughout the day with a chance of rain throughout the day.   \n",
       "1                                    Partly cloudy throughout the day with rain.   \n",
       "2     Partly cloudy throughout the day with a chance of rain throughout the day.   \n",
       "3     Partly cloudy throughout the day with a chance of rain throughout the day.   \n",
       "4                                    Partly cloudy throughout the day with rain.   \n",
       "...                                                                          ...   \n",
       "3788                                 Partly cloudy throughout the day with rain.   \n",
       "3789                                           Partly cloudy throughout the day.   \n",
       "3790                                 Partly cloudy throughout the day with rain.   \n",
       "3791                                           Partly cloudy throughout the day.   \n",
       "3792                  Partly cloudy throughout the day with late afternoon rain.   \n",
       "\n",
       "                   icon  \\\n",
       "0                  rain   \n",
       "1                  rain   \n",
       "2                  rain   \n",
       "3                  rain   \n",
       "4                  rain   \n",
       "...                 ...   \n",
       "3788               rain   \n",
       "3789  partly-cloudy-day   \n",
       "3790               rain   \n",
       "3791  partly-cloudy-day   \n",
       "3792               rain   \n",
       "\n",
       "                                                                                                       stations  \n",
       "0     03769099999,EGWU,03680099999,03768399999,03672099999,03781099999,03761099999,EGLC,03772099999,03770099999  \n",
       "1                                       03769099999,03680099999,03672099999,03781099999,03772099999,03770099999  \n",
       "2                                       03769099999,03680099999,03672099999,03781099999,03772099999,03770099999  \n",
       "3                                       03769099999,03680099999,03672099999,03781099999,03772099999,03770099999  \n",
       "4                                       03769099999,03680099999,03672099999,03781099999,03772099999,03770099999  \n",
       "...                                                                                                         ...  \n",
       "3788                  03769099999,03680099999,D5621,03781099999,03672099999,03684099999,03772099999,03770099999  \n",
       "3789        03769099999,EGWU,03680099999,D5621,03781099999,03672099999,03684099999,EGLC,03772099999,03770099999  \n",
       "3790                                                                                            EGWU,D5621,EGLC  \n",
       "3791                                                                                            EGWU,D5621,EGLC  \n",
       "3792                                                                                            EGWU,D5621,EGLC  \n",
       "\n",
       "[3793 rows x 31 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>datetime</th>\n",
       "      <th>tempmax</th>\n",
       "      <th>tempmin</th>\n",
       "      <th>temp</th>\n",
       "      <th>feelslikemax</th>\n",
       "      <th>feelslikemin</th>\n",
       "      <th>feelslike</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>preciptype</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>conditions</th>\n",
       "      <th>description</th>\n",
       "      <th>icon</th>\n",
       "      <th>stations</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>London, England, United Kingdom</td>\n",
       "      <td>2014-01-01</td>\n",
       "      <td>11.6</td>\n",
       "      <td>6.7</td>\n",
       "      <td>9.1</td>\n",
       "      <td>11.6</td>\n",
       "      <td>3.6</td>\n",
       "      <td>7.0</td>\n",
       "      <td>6.7</td>\n",
       "      <td>84.8</td>\n",
       "      <td>11.857</td>\n",
       "      <td>100</td>\n",
       "      <td>16.67</td>\n",
       "      <td>rain</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>72.4</td>\n",
       "      <td>38.4</td>\n",
       "      <td>190.5</td>\n",
       "      <td>993.1</td>\n",
       "      <td>67.4</td>\n",
       "      <td>14.2</td>\n",
       "      <td>6.9</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.00</td>\n",
       "      <td>Rain, Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day with a chance of rain throughout the day.</td>\n",
       "      <td>rain</td>\n",
       "      <td>03769099999,EGWU,03680099999,03768399999,03672099999,03781099999,03761099999,EGLC,03772099999,03770099999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>London, England, United Kingdom</td>\n",
       "      <td>2014-01-02</td>\n",
       "      <td>11.0</td>\n",
       "      <td>6.6</td>\n",
       "      <td>9.1</td>\n",
       "      <td>11.0</td>\n",
       "      <td>3.6</td>\n",
       "      <td>7.2</td>\n",
       "      <td>6.0</td>\n",
       "      <td>81.0</td>\n",
       "      <td>5.394</td>\n",
       "      <td>100</td>\n",
       "      <td>12.50</td>\n",
       "      <td>rain</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>51.8</td>\n",
       "      <td>29.8</td>\n",
       "      <td>216.2</td>\n",
       "      <td>993.4</td>\n",
       "      <td>47.4</td>\n",
       "      <td>26.7</td>\n",
       "      <td>38.3</td>\n",
       "      <td>3.3</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.03</td>\n",
       "      <td>Rain, Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day with rain.</td>\n",
       "      <td>rain</td>\n",
       "      <td>03769099999,03680099999,03672099999,03781099999,03772099999,03770099999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>London, England, United Kingdom</td>\n",
       "      <td>2014-01-03</td>\n",
       "      <td>10.6</td>\n",
       "      <td>7.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.6</td>\n",
       "      <td>3.2</td>\n",
       "      <td>6.5</td>\n",
       "      <td>5.1</td>\n",
       "      <td>76.8</td>\n",
       "      <td>6.030</td>\n",
       "      <td>100</td>\n",
       "      <td>16.67</td>\n",
       "      <td>rain</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>77.4</td>\n",
       "      <td>33.5</td>\n",
       "      <td>218.4</td>\n",
       "      <td>994.5</td>\n",
       "      <td>52.8</td>\n",
       "      <td>17.9</td>\n",
       "      <td>30.3</td>\n",
       "      <td>2.8</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.07</td>\n",
       "      <td>Rain, Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day with a chance of rain throughout the day.</td>\n",
       "      <td>rain</td>\n",
       "      <td>03769099999,03680099999,03672099999,03781099999,03772099999,03770099999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>London, England, United Kingdom</td>\n",
       "      <td>2014-01-04</td>\n",
       "      <td>10.1</td>\n",
       "      <td>4.5</td>\n",
       "      <td>8.0</td>\n",
       "      <td>10.1</td>\n",
       "      <td>2.0</td>\n",
       "      <td>5.1</td>\n",
       "      <td>5.2</td>\n",
       "      <td>82.4</td>\n",
       "      <td>5.239</td>\n",
       "      <td>100</td>\n",
       "      <td>16.67</td>\n",
       "      <td>rain</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>62.1</td>\n",
       "      <td>29.2</td>\n",
       "      <td>206.0</td>\n",
       "      <td>993.6</td>\n",
       "      <td>67.6</td>\n",
       "      <td>22.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>1.4</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.10</td>\n",
       "      <td>Rain, Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day with a chance of rain throughout the day.</td>\n",
       "      <td>rain</td>\n",
       "      <td>03769099999,03680099999,03672099999,03781099999,03772099999,03770099999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>London, England, United Kingdom</td>\n",
       "      <td>2014-01-05</td>\n",
       "      <td>12.0</td>\n",
       "      <td>1.8</td>\n",
       "      <td>6.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>-0.9</td>\n",
       "      <td>3.6</td>\n",
       "      <td>3.9</td>\n",
       "      <td>85.9</td>\n",
       "      <td>0.201</td>\n",
       "      <td>100</td>\n",
       "      <td>8.33</td>\n",
       "      <td>rain</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>55.6</td>\n",
       "      <td>30.4</td>\n",
       "      <td>192.5</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>66.5</td>\n",
       "      <td>25.5</td>\n",
       "      <td>30.4</td>\n",
       "      <td>2.6</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.14</td>\n",
       "      <td>Rain, Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day with rain.</td>\n",
       "      <td>rain</td>\n",
       "      <td>03769099999,03680099999,03672099999,03781099999,03772099999,03770099999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3788</th>\n",
       "      <td>London, England, United Kingdom</td>\n",
       "      <td>2024-05-16</td>\n",
       "      <td>16.5</td>\n",
       "      <td>12.3</td>\n",
       "      <td>14.2</td>\n",
       "      <td>16.5</td>\n",
       "      <td>12.3</td>\n",
       "      <td>14.2</td>\n",
       "      <td>12.4</td>\n",
       "      <td>89.1</td>\n",
       "      <td>10.126</td>\n",
       "      <td>100</td>\n",
       "      <td>20.83</td>\n",
       "      <td>rain</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.4</td>\n",
       "      <td>10.1</td>\n",
       "      <td>213.9</td>\n",
       "      <td>1005.2</td>\n",
       "      <td>58.3</td>\n",
       "      <td>15.8</td>\n",
       "      <td>74.5</td>\n",
       "      <td>6.5</td>\n",
       "      <td>3</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.27</td>\n",
       "      <td>Rain, Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day with rain.</td>\n",
       "      <td>rain</td>\n",
       "      <td>03769099999,03680099999,D5621,03781099999,03672099999,03684099999,03772099999,03770099999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3789</th>\n",
       "      <td>London, England, United Kingdom</td>\n",
       "      <td>2024-05-17</td>\n",
       "      <td>21.6</td>\n",
       "      <td>10.0</td>\n",
       "      <td>16.4</td>\n",
       "      <td>21.6</td>\n",
       "      <td>10.0</td>\n",
       "      <td>16.4</td>\n",
       "      <td>10.3</td>\n",
       "      <td>70.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>rain</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>9.4</td>\n",
       "      <td>194.8</td>\n",
       "      <td>1009.3</td>\n",
       "      <td>41.4</td>\n",
       "      <td>21.7</td>\n",
       "      <td>177.8</td>\n",
       "      <td>15.5</td>\n",
       "      <td>10</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.30</td>\n",
       "      <td>Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day.</td>\n",
       "      <td>partly-cloudy-day</td>\n",
       "      <td>03769099999,EGWU,03680099999,D5621,03781099999,03672099999,03684099999,EGLC,03772099999,03770099999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3790</th>\n",
       "      <td>London, England, United Kingdom</td>\n",
       "      <td>2024-05-18</td>\n",
       "      <td>19.2</td>\n",
       "      <td>13.0</td>\n",
       "      <td>15.8</td>\n",
       "      <td>19.2</td>\n",
       "      <td>13.0</td>\n",
       "      <td>15.8</td>\n",
       "      <td>11.7</td>\n",
       "      <td>77.5</td>\n",
       "      <td>2.000</td>\n",
       "      <td>100</td>\n",
       "      <td>25.00</td>\n",
       "      <td>rain</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>22.7</td>\n",
       "      <td>13.4</td>\n",
       "      <td>5.8</td>\n",
       "      <td>1012.8</td>\n",
       "      <td>83.7</td>\n",
       "      <td>9.7</td>\n",
       "      <td>76.1</td>\n",
       "      <td>6.7</td>\n",
       "      <td>3</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.33</td>\n",
       "      <td>Rain, Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day with rain.</td>\n",
       "      <td>rain</td>\n",
       "      <td>EGWU,D5621,EGLC</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3791</th>\n",
       "      <td>London, England, United Kingdom</td>\n",
       "      <td>2024-05-19</td>\n",
       "      <td>22.7</td>\n",
       "      <td>10.9</td>\n",
       "      <td>16.6</td>\n",
       "      <td>22.7</td>\n",
       "      <td>10.9</td>\n",
       "      <td>16.6</td>\n",
       "      <td>9.3</td>\n",
       "      <td>63.9</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>34.2</td>\n",
       "      <td>20.3</td>\n",
       "      <td>38.3</td>\n",
       "      <td>1013.8</td>\n",
       "      <td>53.5</td>\n",
       "      <td>10.0</td>\n",
       "      <td>225.0</td>\n",
       "      <td>19.3</td>\n",
       "      <td>9</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.37</td>\n",
       "      <td>Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day.</td>\n",
       "      <td>partly-cloudy-day</td>\n",
       "      <td>EGWU,D5621,EGLC</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3792</th>\n",
       "      <td>London, England, United Kingdom</td>\n",
       "      <td>2024-05-20</td>\n",
       "      <td>20.2</td>\n",
       "      <td>10.0</td>\n",
       "      <td>15.1</td>\n",
       "      <td>20.2</td>\n",
       "      <td>8.5</td>\n",
       "      <td>14.9</td>\n",
       "      <td>9.2</td>\n",
       "      <td>69.8</td>\n",
       "      <td>0.100</td>\n",
       "      <td>100</td>\n",
       "      <td>4.17</td>\n",
       "      <td>rain</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>19.5</td>\n",
       "      <td>43.4</td>\n",
       "      <td>1013.6</td>\n",
       "      <td>36.8</td>\n",
       "      <td>10.0</td>\n",
       "      <td>217.3</td>\n",
       "      <td>18.7</td>\n",
       "      <td>8</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.40</td>\n",
       "      <td>Rain, Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day with late afternoon rain.</td>\n",
       "      <td>rain</td>\n",
       "      <td>EGWU,D5621,EGLC</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3793 rows × 31 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 204,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 204
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:52:48.772524Z",
     "start_time": "2024-08-05T19:52:48.770244Z"
    }
   },
   "cell_type": "code",
   "source": [
    "def test_stationarity(df):\n",
    "    result = adfuller(df)\n",
    "    print('ADF Statistic:', result[0])\n",
    "    print('p-value:', result[1])\n",
    "    if result[1] < 0.05:\n",
    "        print('TS is stationary')\n",
    "    else:\n",
    "        print('TS not stationary')\n",
    "\n",
    "    \n",
    "    "
   ],
   "id": "addfb5beef02942b",
   "outputs": [],
   "execution_count": 205
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:52:50.223012Z",
     "start_time": "2024-08-05T19:52:49.237290Z"
    }
   },
   "cell_type": "code",
   "source": "test_stationarity(df_manila['temp'])",
   "id": "b6d2a41f7ef9c85b",
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ADF Statistic: -6.139003242410833\n",
      "p-value: 8.056116534413131e-08\n",
      "TS is stationary\n"
     ]
    }
   ],
   "execution_count": 206
  },
  {
   "cell_type": "markdown",
   "id": "29954e51-e8c7-432d-b67c-f8cfc7e8bde9",
   "metadata": {},
   "source": [
    "## Descriptive statistics and EDA"
   ]
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:22.255342Z",
     "start_time": "2024-08-05T19:27:22.253204Z"
    }
   },
   "cell_type": "code",
   "source": [
    "def descriptive_stats(df):\n",
    "    print(\"shape: \", df.shape)\n",
    "    print(\"column headers: \", df.columns)\n",
    "    print(\"first date in series: \", df_london['datetime'].min())\n",
    "    print(\"last date in series: \", df_london['datetime'].max())\n",
    "    print(\"minimum temperature: \", df_london['temp'].min())\n",
    "    print(\"maximum temperature: \", df_london['temp'].max())\n",
    "    print(\"missing data: \", df_london.isna().sum())\n",
    "    print(\"descriptive statistics: \", df_london.describe())\n",
    "    print(\"df info: \", df_london.info())\n",
    "    print(\"number of missing values per column: \", df_london.isnull().sum())\n",
    "    "
   ],
   "id": "c9ef3993aa706498",
   "outputs": [],
   "execution_count": 50
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:22.355800Z",
     "start_time": "2024-08-05T19:27:22.351792Z"
    }
   },
   "cell_type": "code",
   "source": "descriptive_stats(df_london)",
   "id": "79acc7450faa4a92",
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "shape:  (3793, 31)\n",
      "column headers:  Index(['name', 'datetime', 'tempmax', 'tempmin', 'temp', 'feelslikemax',\n",
      "       'feelslikemin', 'feelslike', 'dew', 'humidity', 'precip', 'precipprob',\n",
      "       'precipcover', 'preciptype', 'snow', 'snowdepth', 'windgust',\n",
      "       'windspeed', 'winddir', 'sealevelpressure', 'cloudcover', 'visibility',\n",
      "       'solarradiation', 'solarenergy', 'uvindex', 'severerisk', 'moonphase',\n",
      "       'conditions', 'description', 'icon', 'stations'],\n",
      "      dtype='object')\n",
      "first date in series:  2014-01-01 00:00:00\n",
      "last date in series:  2024-05-20 00:00:00\n",
      "minimum temperature:  -3.2\n",
      "maximum temperature:  30.3\n",
      "missing data:  name                   0\n",
      "datetime               0\n",
      "tempmax                0\n",
      "tempmin                0\n",
      "temp                   0\n",
      "feelslikemax           0\n",
      "feelslikemin           0\n",
      "feelslike              0\n",
      "dew                    0\n",
      "humidity               0\n",
      "precip                 0\n",
      "precipprob             0\n",
      "precipcover            0\n",
      "preciptype          1426\n",
      "snow                   0\n",
      "snowdepth              0\n",
      "windgust             175\n",
      "windspeed              0\n",
      "winddir                0\n",
      "sealevelpressure       0\n",
      "cloudcover             0\n",
      "visibility             0\n",
      "solarradiation         0\n",
      "solarenergy            0\n",
      "uvindex                0\n",
      "severerisk          2931\n",
      "moonphase              0\n",
      "conditions             0\n",
      "description            0\n",
      "icon                   0\n",
      "stations               0\n",
      "dtype: int64\n"
     ]
    }
   ],
   "execution_count": 51
  },
  {
   "cell_type": "code",
   "id": "bc3a7283-23f2-4ed1-8ec8-85277ef76d77",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:23.450101Z",
     "start_time": "2024-08-05T19:27:22.894602Z"
    }
   },
   "source": [
    "\n",
    "\n",
    "msno.matrix(df_last_year, color=(1.0, 0.5, 0.0))\n",
    "plt.title('Missing Values Matrix for the Last Year - London, United Kingdom')\n",
    "plt.show()"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 2500x1000 with 2 Axes>"
      ],
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "execution_count": 55
  },
  {
   "cell_type": "code",
   "id": "c3ccc160-4faf-43de-abda-a8da5b7149d7",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:25.107281Z",
     "start_time": "2024-08-05T19:27:23.456516Z"
    }
   },
   "source": [
    "df_london.hist(figsize=(10, 8))\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 1000x800 with 25 Axes>"
      ],
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "execution_count": 56
  },
  {
   "cell_type": "code",
   "id": "0353395c-8e05-4fed-9db9-d71ba0242dea",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:25.311714Z",
     "start_time": "2024-08-05T19:27:25.108509Z"
    }
   },
   "source": [
    "df_london.boxplot(figsize=(10, 8))\n",
    "plt.xticks(rotation=90)\n",
    "plt.title('Boxplot for data distribution - London, United Kingdom')\n",
    "plt.show()"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 1000x800 with 1 Axes>"
      ],
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "execution_count": 57
  },
  {
   "cell_type": "code",
   "id": "4b372684-9cbf-4ab6-86b0-6f5c72079c8c",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:25.317322Z",
     "start_time": "2024-08-05T19:27:25.314014Z"
    }
   },
   "source": [
    "df_london_for_corr = df_london.drop(['name', 'preciptype', 'conditions','description','icon', 'stations'],axis=1)"
   ],
   "outputs": [],
   "execution_count": 58
  },
  {
   "cell_type": "code",
   "id": "1c4ef65c-1f2c-4ae5-9a17-9d1258065d92",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:25.330562Z",
     "start_time": "2024-08-05T19:27:25.319020Z"
    }
   },
   "source": [
    "df_london_for_corr.head()"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "    datetime  tempmax  tempmin  temp  feelslikemax  feelslikemin  feelslike  \\\n",
       "0 2014-01-01     11.6      6.7   9.1          11.6           3.6        7.0   \n",
       "1 2014-01-02     11.0      6.6   9.1          11.0           3.6        7.2   \n",
       "2 2014-01-03     10.6      7.3   9.0          10.6           3.2        6.5   \n",
       "3 2014-01-04     10.1      4.5   8.0          10.1           2.0        5.1   \n",
       "4 2014-01-05     12.0      1.8   6.0          12.0          -0.9        3.6   \n",
       "\n",
       "   dew  humidity  precip  precipprob  precipcover  snow  snowdepth  windgust  \\\n",
       "0  6.7      84.8  11.857         100        16.67   0.0        0.0      72.4   \n",
       "1  6.0      81.0   5.394         100        12.50   0.0        0.0      51.8   \n",
       "2  5.1      76.8   6.030         100        16.67   0.0        0.0      77.4   \n",
       "3  5.2      82.4   5.239         100        16.67   0.0        0.0      62.1   \n",
       "4  3.9      85.9   0.201         100         8.33   0.0        0.0      55.6   \n",
       "\n",
       "   windspeed  winddir  sealevelpressure  cloudcover  visibility  \\\n",
       "0       38.4    190.5             993.1        67.4        14.2   \n",
       "1       29.8    216.2             993.4        47.4        26.7   \n",
       "2       33.5    218.4             994.5        52.8        17.9   \n",
       "3       29.2    206.0             993.6        67.6        22.0   \n",
       "4       30.4    192.5            1000.0        66.5        25.5   \n",
       "\n",
       "   solarradiation  solarenergy  uvindex  severerisk  moonphase  \n",
       "0             6.9          0.5        0         NaN       0.00  \n",
       "1            38.3          3.3        2         NaN       0.03  \n",
       "2            30.3          2.8        2         NaN       0.07  \n",
       "3            17.4          1.4        1         NaN       0.10  \n",
       "4            30.4          2.6        2         NaN       0.14  "
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>datetime</th>\n",
       "      <th>tempmax</th>\n",
       "      <th>tempmin</th>\n",
       "      <th>temp</th>\n",
       "      <th>feelslikemax</th>\n",
       "      <th>feelslikemin</th>\n",
       "      <th>feelslike</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2014-01-01</td>\n",
       "      <td>11.6</td>\n",
       "      <td>6.7</td>\n",
       "      <td>9.1</td>\n",
       "      <td>11.6</td>\n",
       "      <td>3.6</td>\n",
       "      <td>7.0</td>\n",
       "      <td>6.7</td>\n",
       "      <td>84.8</td>\n",
       "      <td>11.857</td>\n",
       "      <td>100</td>\n",
       "      <td>16.67</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>72.4</td>\n",
       "      <td>38.4</td>\n",
       "      <td>190.5</td>\n",
       "      <td>993.1</td>\n",
       "      <td>67.4</td>\n",
       "      <td>14.2</td>\n",
       "      <td>6.9</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2014-01-02</td>\n",
       "      <td>11.0</td>\n",
       "      <td>6.6</td>\n",
       "      <td>9.1</td>\n",
       "      <td>11.0</td>\n",
       "      <td>3.6</td>\n",
       "      <td>7.2</td>\n",
       "      <td>6.0</td>\n",
       "      <td>81.0</td>\n",
       "      <td>5.394</td>\n",
       "      <td>100</td>\n",
       "      <td>12.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>51.8</td>\n",
       "      <td>29.8</td>\n",
       "      <td>216.2</td>\n",
       "      <td>993.4</td>\n",
       "      <td>47.4</td>\n",
       "      <td>26.7</td>\n",
       "      <td>38.3</td>\n",
       "      <td>3.3</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2014-01-03</td>\n",
       "      <td>10.6</td>\n",
       "      <td>7.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.6</td>\n",
       "      <td>3.2</td>\n",
       "      <td>6.5</td>\n",
       "      <td>5.1</td>\n",
       "      <td>76.8</td>\n",
       "      <td>6.030</td>\n",
       "      <td>100</td>\n",
       "      <td>16.67</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>77.4</td>\n",
       "      <td>33.5</td>\n",
       "      <td>218.4</td>\n",
       "      <td>994.5</td>\n",
       "      <td>52.8</td>\n",
       "      <td>17.9</td>\n",
       "      <td>30.3</td>\n",
       "      <td>2.8</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2014-01-04</td>\n",
       "      <td>10.1</td>\n",
       "      <td>4.5</td>\n",
       "      <td>8.0</td>\n",
       "      <td>10.1</td>\n",
       "      <td>2.0</td>\n",
       "      <td>5.1</td>\n",
       "      <td>5.2</td>\n",
       "      <td>82.4</td>\n",
       "      <td>5.239</td>\n",
       "      <td>100</td>\n",
       "      <td>16.67</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>62.1</td>\n",
       "      <td>29.2</td>\n",
       "      <td>206.0</td>\n",
       "      <td>993.6</td>\n",
       "      <td>67.6</td>\n",
       "      <td>22.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>1.4</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2014-01-05</td>\n",
       "      <td>12.0</td>\n",
       "      <td>1.8</td>\n",
       "      <td>6.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>-0.9</td>\n",
       "      <td>3.6</td>\n",
       "      <td>3.9</td>\n",
       "      <td>85.9</td>\n",
       "      <td>0.201</td>\n",
       "      <td>100</td>\n",
       "      <td>8.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>55.6</td>\n",
       "      <td>30.4</td>\n",
       "      <td>192.5</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>66.5</td>\n",
       "      <td>25.5</td>\n",
       "      <td>30.4</td>\n",
       "      <td>2.6</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.14</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 59
  },
  {
   "cell_type": "code",
   "id": "83b2351b-d28f-441f-b7e7-8dd25920028d",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:25.342885Z",
     "start_time": "2024-08-05T19:27:25.331917Z"
    }
   },
   "source": [
    "corr_matrix = df_london_for_corr.corr()\n",
    "print(corr_matrix) "
   ],
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                  datetime   tempmax   tempmin      temp  feelslikemax  \\\n",
      "datetime          1.000000  0.008865  0.010205  0.007740      0.012812   \n",
      "tempmax           0.008865  1.000000  0.880739  0.973772      0.992570   \n",
      "tempmin           0.010205  0.880739  1.000000  0.956810      0.882454   \n",
      "temp              0.007740  0.973772  0.956810  1.000000      0.970469   \n",
      "feelslikemax      0.012812  0.992570  0.882454  0.970469      1.000000   \n",
      "feelslikemin      0.010829  0.892497  0.984158  0.957931      0.897502   \n",
      "feelslike         0.011530  0.966945  0.950490  0.992946      0.972603   \n",
      "dew               0.025422  0.815229  0.919002  0.888771      0.826023   \n",
      "humidity          0.047910 -0.510786 -0.295188 -0.433604     -0.484854   \n",
      "precip            0.019130 -0.079772  0.028707 -0.037742     -0.072548   \n",
      "precipprob       -0.058845 -0.235622 -0.062457 -0.167136     -0.222448   \n",
      "precipcover       0.236525 -0.163003 -0.025887 -0.107080     -0.148046   \n",
      "snow              0.007829 -0.115714 -0.108447 -0.118596     -0.124238   \n",
      "snowdepth         0.019366 -0.177240 -0.176767 -0.182708     -0.194563   \n",
      "windgust         -0.198616 -0.141738 -0.027750 -0.090177     -0.142146   \n",
      "windspeed         0.001177 -0.096423 -0.001235 -0.050556     -0.095812   \n",
      "winddir          -0.009777 -0.022316 -0.014665 -0.010638     -0.015939   \n",
      "sealevelpressure -0.021886  0.106132 -0.022162  0.052831      0.109776   \n",
      "cloudcover       -0.027860 -0.292068  0.029376 -0.148914     -0.266052   \n",
      "visibility       -0.203237  0.273288  0.184571  0.250305      0.255253   \n",
      "solarradiation   -0.351261  0.632668  0.460838  0.574225      0.621971   \n",
      "solarenergy      -0.351152  0.632299  0.460777  0.573984      0.621631   \n",
      "uvindex          -0.177565  0.665023  0.453220  0.585185      0.653277   \n",
      "severerisk       -0.019831  0.074542  0.073337  0.076037      0.070612   \n",
      "moonphase         0.002581  0.004467 -0.008361 -0.000610      0.004421   \n",
      "\n",
      "                  feelslikemin  feelslike       dew  humidity    precip  \\\n",
      "datetime              0.010829   0.011530  0.025422  0.047910  0.019130   \n",
      "tempmax               0.892497   0.966945  0.815229 -0.510786 -0.079772   \n",
      "tempmin               0.984158   0.950490  0.919002 -0.295188  0.028707   \n",
      "temp                  0.957931   0.992946  0.888771 -0.433604 -0.037742   \n",
      "feelslikemax          0.897502   0.972603  0.826023 -0.484854 -0.072548   \n",
      "feelslikemin          1.000000   0.965720  0.920149 -0.290831  0.004912   \n",
      "feelslike             0.965720   1.000000  0.895069 -0.405523 -0.042290   \n",
      "dew                   0.920149   0.895069  1.000000  0.022188  0.120593   \n",
      "humidity             -0.290831  -0.405523  0.022188  1.000000  0.334167   \n",
      "precip                0.004912  -0.042290  0.120593  0.334167  1.000000   \n",
      "precipprob           -0.089557  -0.167384  0.056024  0.472033  0.350867   \n",
      "precipcover          -0.054078  -0.106689  0.084547  0.410420  0.448334   \n",
      "snow                 -0.118233  -0.128469 -0.104779  0.063881  0.075329   \n",
      "snowdepth            -0.188560  -0.198587 -0.186224  0.035748 -0.001454   \n",
      "windgust             -0.113135  -0.129945 -0.049318  0.061888  0.202626   \n",
      "windspeed            -0.087421  -0.090674 -0.039185 -0.005709  0.159572   \n",
      "winddir              -0.018911  -0.009638  0.008096  0.032223  0.019344   \n",
      "sealevelpressure      0.031488   0.078043 -0.076479 -0.263210 -0.376686   \n",
      "cloudcover           -0.004090  -0.138702  0.116413  0.522749  0.208375   \n",
      "visibility            0.168759   0.225206 -0.004321 -0.588489 -0.162026   \n",
      "solarradiation        0.480696   0.569022  0.312248 -0.640815 -0.170113   \n",
      "solarenergy           0.480573   0.568779  0.312328 -0.640182 -0.170174   \n",
      "uvindex               0.477476   0.580656  0.289772 -0.705945 -0.204604   \n",
      "severerisk            0.073165   0.073705  0.086763 -0.001289  0.095708   \n",
      "moonphase            -0.009260  -0.000592 -0.001632  0.002380 -0.003756   \n",
      "\n",
      "                  precipprob  precipcover      snow  snowdepth  windgust  \\\n",
      "datetime           -0.058845     0.236525  0.007829   0.019366 -0.198616   \n",
      "tempmax            -0.235622    -0.163003 -0.115714  -0.177240 -0.141738   \n",
      "tempmin            -0.062457    -0.025887 -0.108447  -0.176767 -0.027750   \n",
      "temp               -0.167136    -0.107080 -0.118596  -0.182708 -0.090177   \n",
      "feelslikemax       -0.222448    -0.148046 -0.124238  -0.194563 -0.142146   \n",
      "feelslikemin       -0.089557    -0.054078 -0.118233  -0.188560 -0.113135   \n",
      "feelslike          -0.167384    -0.106689 -0.128469  -0.198587 -0.129945   \n",
      "dew                 0.056024     0.084547 -0.104779  -0.186224 -0.049318   \n",
      "humidity            0.472033     0.410420  0.063881   0.035748  0.061888   \n",
      "precip              0.350867     0.448334  0.075329  -0.001454  0.202626   \n",
      "precipprob          1.000000     0.549595  0.016756  -0.024184  0.321966   \n",
      "precipcover         0.549595     1.000000  0.043621  -0.014752  0.211164   \n",
      "snow                0.016756     0.043621  1.000000   0.147048  0.039873   \n",
      "snowdepth          -0.024184    -0.014752  0.147048   1.000000  0.019645   \n",
      "windgust            0.321966     0.211164  0.039873   0.019645  1.000000   \n",
      "windspeed           0.263885     0.248471  0.005662   0.019758  0.892051   \n",
      "winddir             0.141102     0.076868 -0.044367  -0.056395  0.107414   \n",
      "sealevelpressure   -0.442319    -0.458900 -0.099546  -0.044776 -0.424703   \n",
      "cloudcover          0.342333     0.313980  0.051907   0.034150  0.199854   \n",
      "visibility         -0.186970    -0.277746 -0.071970  -0.054017  0.149995   \n",
      "solarradiation     -0.290663    -0.281870 -0.060816  -0.080342 -0.141683   \n",
      "solarenergy        -0.290295    -0.281499 -0.061151  -0.080933 -0.141509   \n",
      "uvindex            -0.331283    -0.305431 -0.073526  -0.087399 -0.179422   \n",
      "severerisk          0.053217     0.034881 -0.004456  -0.008094 -0.020389   \n",
      "moonphase          -0.003568     0.003800  0.013924   0.028870 -0.004513   \n",
      "\n",
      "                  windspeed   winddir  sealevelpressure  cloudcover  \\\n",
      "datetime           0.001177 -0.009777         -0.021886   -0.027860   \n",
      "tempmax           -0.096423 -0.022316          0.106132   -0.292068   \n",
      "tempmin           -0.001235 -0.014665         -0.022162    0.029376   \n",
      "temp              -0.050556 -0.010638          0.052831   -0.148914   \n",
      "feelslikemax      -0.095812 -0.015939          0.109776   -0.266052   \n",
      "feelslikemin      -0.087421 -0.018911          0.031488   -0.004090   \n",
      "feelslike         -0.090674 -0.009638          0.078043   -0.138702   \n",
      "dew               -0.039185  0.008096         -0.076479    0.116413   \n",
      "humidity          -0.005709  0.032223         -0.263210    0.522749   \n",
      "precip             0.159572  0.019344         -0.376686    0.208375   \n",
      "precipprob         0.263885  0.141102         -0.442319    0.342333   \n",
      "precipcover        0.248471  0.076868         -0.458900    0.313980   \n",
      "snow               0.005662 -0.044367         -0.099546    0.051907   \n",
      "snowdepth          0.019758 -0.056395         -0.044776    0.034150   \n",
      "windgust           0.892051  0.107414         -0.424703    0.199854   \n",
      "windspeed          1.000000  0.140585         -0.417260    0.162215   \n",
      "winddir            0.140585  1.000000         -0.116015    0.006704   \n",
      "sealevelpressure  -0.417260 -0.116015          1.000000   -0.223523   \n",
      "cloudcover         0.162215  0.006704         -0.223523    1.000000   \n",
      "visibility         0.143291  0.215538          0.071118   -0.250045   \n",
      "solarradiation    -0.133577 -0.037392          0.187277   -0.371298   \n",
      "solarenergy       -0.133140 -0.036865          0.187191   -0.371213   \n",
      "uvindex           -0.136196 -0.039544          0.203275   -0.473590   \n",
      "severerisk         0.002325 -0.054690         -0.023469   -0.017731   \n",
      "moonphase         -0.014784 -0.030333         -0.017184   -0.016666   \n",
      "\n",
      "                  visibility  solarradiation  solarenergy   uvindex  \\\n",
      "datetime           -0.203237       -0.351261    -0.351152 -0.177565   \n",
      "tempmax             0.273288        0.632668     0.632299  0.665023   \n",
      "tempmin             0.184571        0.460838     0.460777  0.453220   \n",
      "temp                0.250305        0.574225     0.573984  0.585185   \n",
      "feelslikemax        0.255253        0.621971     0.621631  0.653277   \n",
      "feelslikemin        0.168759        0.480696     0.480573  0.477476   \n",
      "feelslike           0.225206        0.569022     0.568779  0.580656   \n",
      "dew                -0.004321        0.312248     0.312328  0.289772   \n",
      "humidity           -0.588489       -0.640815    -0.640182 -0.705945   \n",
      "precip             -0.162026       -0.170113    -0.170174 -0.204604   \n",
      "precipprob         -0.186970       -0.290663    -0.290295 -0.331283   \n",
      "precipcover        -0.277746       -0.281870    -0.281499 -0.305431   \n",
      "snow               -0.071970       -0.060816    -0.061151 -0.073526   \n",
      "snowdepth          -0.054017       -0.080342    -0.080933 -0.087399   \n",
      "windgust            0.149995       -0.141683    -0.141509 -0.179422   \n",
      "windspeed           0.143291       -0.133577    -0.133140 -0.136196   \n",
      "winddir             0.215538       -0.037392    -0.036865 -0.039544   \n",
      "sealevelpressure    0.071118        0.187277     0.187191  0.203275   \n",
      "cloudcover         -0.250045       -0.371298    -0.371213 -0.473590   \n",
      "visibility          1.000000        0.396948     0.396694  0.400389   \n",
      "solarradiation      0.396948        1.000000     0.999880  0.907911   \n",
      "solarenergy         0.396694        0.999880     1.000000  0.907553   \n",
      "uvindex             0.400389        0.907911     0.907553  1.000000   \n",
      "severerisk          0.011253        0.024618     0.024773 -0.000934   \n",
      "moonphase          -0.013896        0.002059     0.001846  0.004587   \n",
      "\n",
      "                  severerisk  moonphase  \n",
      "datetime           -0.019831   0.002581  \n",
      "tempmax             0.074542   0.004467  \n",
      "tempmin             0.073337  -0.008361  \n",
      "temp                0.076037  -0.000610  \n",
      "feelslikemax        0.070612   0.004421  \n",
      "feelslikemin        0.073165  -0.009260  \n",
      "feelslike           0.073705  -0.000592  \n",
      "dew                 0.086763  -0.001632  \n",
      "humidity           -0.001289   0.002380  \n",
      "precip              0.095708  -0.003756  \n",
      "precipprob          0.053217  -0.003568  \n",
      "precipcover         0.034881   0.003800  \n",
      "snow               -0.004456   0.013924  \n",
      "snowdepth          -0.008094   0.028870  \n",
      "windgust           -0.020389  -0.004513  \n",
      "windspeed           0.002325  -0.014784  \n",
      "winddir            -0.054690  -0.030333  \n",
      "sealevelpressure   -0.023469  -0.017184  \n",
      "cloudcover         -0.017731  -0.016666  \n",
      "visibility          0.011253  -0.013896  \n",
      "solarradiation      0.024618   0.002059  \n",
      "solarenergy         0.024773   0.001846  \n",
      "uvindex            -0.000934   0.004587  \n",
      "severerisk          1.000000   0.039774  \n",
      "moonphase           0.039774   1.000000  \n"
     ]
    }
   ],
   "execution_count": 60
  },
  {
   "cell_type": "code",
   "id": "6db1f7c5-7317-4aa0-957f-f334f44b5270",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:26.231555Z",
     "start_time": "2024-08-05T19:27:25.344058Z"
    }
   },
   "source": [
    "import seaborn as sns\n",
    "plt.figure(figsize=(20, 10))\n",
    "sns.heatmap(corr_matrix, annot=True, cmap='coolwarm')\n",
    "plt.title(\"Correlation heatmap - London, United Kingdom\")\n",
    "plt.show()"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 2000x1000 with 2 Axes>"
      ],
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "execution_count": 61
  },
  {
   "cell_type": "markdown",
   "id": "595aa1ea-8245-4df1-ad7a-023c74aeed2e",
   "metadata": {},
   "source": [
    "look into the correlation that humidity has with temp (-0.43) + solarradiation, solarenergy or uvindex\n",
    "look into multicolinearity - multiple feature that are roughly the same as the target, which need to be removed (first 5 after the first one)"
   ]
  },
  {
   "cell_type": "code",
   "id": "cae763f2-3e85-4fb6-94b3-cb74dde55432",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:26.384496Z",
     "start_time": "2024-08-05T19:27:26.232792Z"
    }
   },
   "source": [
    "plt.figure(figsize=(10, 6))\n",
    "sns.boxplot(data=df_london[['temp', 'humidity', 'windgust', 'solarradiation', 'uvindex']])\n",
    "plt.title(\"Outlier Detection\")\n",
    "plt.show()"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ],
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "execution_count": 62
  },
  {
   "cell_type": "code",
   "id": "29c914bd-8133-4e53-bdca-40eae12ebb3a",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:26.390497Z",
     "start_time": "2024-08-05T19:27:26.387453Z"
    }
   },
   "source": [
    "# look into how each of these are measured \n",
    "# for example temp is the average at 18 \n",
    "#first run the models with outliers and then see the results "
   ],
   "outputs": [],
   "execution_count": 63
  },
  {
   "cell_type": "code",
   "id": "b573e497",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:26.398734Z",
     "start_time": "2024-08-05T19:27:26.394733Z"
    }
   },
   "source": [
    "df_london.set_index(\"datetime\", inplace = True)\n",
    "df_london.sort_index(inplace = True)"
   ],
   "outputs": [],
   "execution_count": 64
  },
  {
   "cell_type": "code",
   "id": "d9f851c2",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:26.418211Z",
     "start_time": "2024-08-05T19:27:26.399998Z"
    }
   },
   "source": [
    "df_london"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "                                       name  tempmax  tempmin  temp  \\\n",
       "datetime                                                              \n",
       "2014-01-01  London, England, United Kingdom     11.6      6.7   9.1   \n",
       "2014-01-02  London, England, United Kingdom     11.0      6.6   9.1   \n",
       "2014-01-03  London, England, United Kingdom     10.6      7.3   9.0   \n",
       "2014-01-04  London, England, United Kingdom     10.1      4.5   8.0   \n",
       "2014-01-05  London, England, United Kingdom     12.0      1.8   6.0   \n",
       "...                                     ...      ...      ...   ...   \n",
       "2024-05-16  London, England, United Kingdom     16.5     12.3  14.2   \n",
       "2024-05-17  London, England, United Kingdom     21.6     10.0  16.4   \n",
       "2024-05-18  London, England, United Kingdom     19.2     13.0  15.8   \n",
       "2024-05-19  London, England, United Kingdom     22.7     10.9  16.6   \n",
       "2024-05-20  London, England, United Kingdom     20.2     10.0  15.1   \n",
       "\n",
       "            feelslikemax  feelslikemin  feelslike   dew  humidity  precip  \\\n",
       "datetime                                                                    \n",
       "2014-01-01          11.6           3.6        7.0   6.7      84.8  11.857   \n",
       "2014-01-02          11.0           3.6        7.2   6.0      81.0   5.394   \n",
       "2014-01-03          10.6           3.2        6.5   5.1      76.8   6.030   \n",
       "2014-01-04          10.1           2.0        5.1   5.2      82.4   5.239   \n",
       "2014-01-05          12.0          -0.9        3.6   3.9      85.9   0.201   \n",
       "...                  ...           ...        ...   ...       ...     ...   \n",
       "2024-05-16          16.5          12.3       14.2  12.4      89.1  10.126   \n",
       "2024-05-17          21.6          10.0       16.4  10.3      70.2   0.000   \n",
       "2024-05-18          19.2          13.0       15.8  11.7      77.5   2.000   \n",
       "2024-05-19          22.7          10.9       16.6   9.3      63.9   0.000   \n",
       "2024-05-20          20.2           8.5       14.9   9.2      69.8   0.100   \n",
       "\n",
       "            precipprob  precipcover preciptype  snow  snowdepth  windgust  \\\n",
       "datetime                                                                    \n",
       "2014-01-01         100        16.67       rain   0.0        0.0      72.4   \n",
       "2014-01-02         100        12.50       rain   0.0        0.0      51.8   \n",
       "2014-01-03         100        16.67       rain   0.0        0.0      77.4   \n",
       "2014-01-04         100        16.67       rain   0.0        0.0      62.1   \n",
       "2014-01-05         100         8.33       rain   0.0        0.0      55.6   \n",
       "...                ...          ...        ...   ...        ...       ...   \n",
       "2024-05-16         100        20.83       rain   0.0        0.0      18.4   \n",
       "2024-05-17           0         0.00       rain   0.0        0.0      17.4   \n",
       "2024-05-18         100        25.00       rain   0.0        0.0      22.7   \n",
       "2024-05-19           0         0.00        NaN   0.0        0.0      34.2   \n",
       "2024-05-20         100         4.17       rain   0.0        0.0      32.0   \n",
       "\n",
       "            windspeed  winddir  sealevelpressure  cloudcover  visibility  \\\n",
       "datetime                                                                   \n",
       "2014-01-01       38.4    190.5             993.1        67.4        14.2   \n",
       "2014-01-02       29.8    216.2             993.4        47.4        26.7   \n",
       "2014-01-03       33.5    218.4             994.5        52.8        17.9   \n",
       "2014-01-04       29.2    206.0             993.6        67.6        22.0   \n",
       "2014-01-05       30.4    192.5            1000.0        66.5        25.5   \n",
       "...               ...      ...               ...         ...         ...   \n",
       "2024-05-16       10.1    213.9            1005.2        58.3        15.8   \n",
       "2024-05-17        9.4    194.8            1009.3        41.4        21.7   \n",
       "2024-05-18       13.4      5.8            1012.8        83.7         9.7   \n",
       "2024-05-19       20.3     38.3            1013.8        53.5        10.0   \n",
       "2024-05-20       19.5     43.4            1013.6        36.8        10.0   \n",
       "\n",
       "            solarradiation  solarenergy  uvindex  severerisk  moonphase  \\\n",
       "datetime                                                                  \n",
       "2014-01-01             6.9          0.5        0         NaN       0.00   \n",
       "2014-01-02            38.3          3.3        2         NaN       0.03   \n",
       "2014-01-03            30.3          2.8        2         NaN       0.07   \n",
       "2014-01-04            17.4          1.4        1         NaN       0.10   \n",
       "2014-01-05            30.4          2.6        2         NaN       0.14   \n",
       "...                    ...          ...      ...         ...        ...   \n",
       "2024-05-16            74.5          6.5        3        10.0       0.27   \n",
       "2024-05-17           177.8         15.5       10        10.0       0.30   \n",
       "2024-05-18            76.1          6.7        3        10.0       0.33   \n",
       "2024-05-19           225.0         19.3        9        10.0       0.37   \n",
       "2024-05-20           217.3         18.7        8        10.0       0.40   \n",
       "\n",
       "                        conditions  \\\n",
       "datetime                             \n",
       "2014-01-01  Rain, Partially cloudy   \n",
       "2014-01-02  Rain, Partially cloudy   \n",
       "2014-01-03  Rain, Partially cloudy   \n",
       "2014-01-04  Rain, Partially cloudy   \n",
       "2014-01-05  Rain, Partially cloudy   \n",
       "...                            ...   \n",
       "2024-05-16  Rain, Partially cloudy   \n",
       "2024-05-17        Partially cloudy   \n",
       "2024-05-18  Rain, Partially cloudy   \n",
       "2024-05-19        Partially cloudy   \n",
       "2024-05-20  Rain, Partially cloudy   \n",
       "\n",
       "                                                                           description  \\\n",
       "datetime                                                                                 \n",
       "2014-01-01  Partly cloudy throughout the day with a chance of rain throughout the day.   \n",
       "2014-01-02                                 Partly cloudy throughout the day with rain.   \n",
       "2014-01-03  Partly cloudy throughout the day with a chance of rain throughout the day.   \n",
       "2014-01-04  Partly cloudy throughout the day with a chance of rain throughout the day.   \n",
       "2014-01-05                                 Partly cloudy throughout the day with rain.   \n",
       "...                                                                                ...   \n",
       "2024-05-16                                 Partly cloudy throughout the day with rain.   \n",
       "2024-05-17                                           Partly cloudy throughout the day.   \n",
       "2024-05-18                                 Partly cloudy throughout the day with rain.   \n",
       "2024-05-19                                           Partly cloudy throughout the day.   \n",
       "2024-05-20                  Partly cloudy throughout the day with late afternoon rain.   \n",
       "\n",
       "                         icon  \\\n",
       "datetime                        \n",
       "2014-01-01               rain   \n",
       "2014-01-02               rain   \n",
       "2014-01-03               rain   \n",
       "2014-01-04               rain   \n",
       "2014-01-05               rain   \n",
       "...                       ...   \n",
       "2024-05-16               rain   \n",
       "2024-05-17  partly-cloudy-day   \n",
       "2024-05-18               rain   \n",
       "2024-05-19  partly-cloudy-day   \n",
       "2024-05-20               rain   \n",
       "\n",
       "                                                                                                             stations  \n",
       "datetime                                                                                                               \n",
       "2014-01-01  03769099999,EGWU,03680099999,03768399999,03672099999,03781099999,03761099999,EGLC,03772099999,03770099999  \n",
       "2014-01-02                                    03769099999,03680099999,03672099999,03781099999,03772099999,03770099999  \n",
       "2014-01-03                                    03769099999,03680099999,03672099999,03781099999,03772099999,03770099999  \n",
       "2014-01-04                                    03769099999,03680099999,03672099999,03781099999,03772099999,03770099999  \n",
       "2014-01-05                                    03769099999,03680099999,03672099999,03781099999,03772099999,03770099999  \n",
       "...                                                                                                               ...  \n",
       "2024-05-16                  03769099999,03680099999,D5621,03781099999,03672099999,03684099999,03772099999,03770099999  \n",
       "2024-05-17        03769099999,EGWU,03680099999,D5621,03781099999,03672099999,03684099999,EGLC,03772099999,03770099999  \n",
       "2024-05-18                                                                                            EGWU,D5621,EGLC  \n",
       "2024-05-19                                                                                            EGWU,D5621,EGLC  \n",
       "2024-05-20                                                                                            EGWU,D5621,EGLC  \n",
       "\n",
       "[3793 rows x 30 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>tempmax</th>\n",
       "      <th>tempmin</th>\n",
       "      <th>temp</th>\n",
       "      <th>feelslikemax</th>\n",
       "      <th>feelslikemin</th>\n",
       "      <th>feelslike</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>preciptype</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>conditions</th>\n",
       "      <th>description</th>\n",
       "      <th>icon</th>\n",
       "      <th>stations</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>datetime</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2014-01-01</th>\n",
       "      <td>London, England, United Kingdom</td>\n",
       "      <td>11.6</td>\n",
       "      <td>6.7</td>\n",
       "      <td>9.1</td>\n",
       "      <td>11.6</td>\n",
       "      <td>3.6</td>\n",
       "      <td>7.0</td>\n",
       "      <td>6.7</td>\n",
       "      <td>84.8</td>\n",
       "      <td>11.857</td>\n",
       "      <td>100</td>\n",
       "      <td>16.67</td>\n",
       "      <td>rain</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>72.4</td>\n",
       "      <td>38.4</td>\n",
       "      <td>190.5</td>\n",
       "      <td>993.1</td>\n",
       "      <td>67.4</td>\n",
       "      <td>14.2</td>\n",
       "      <td>6.9</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.00</td>\n",
       "      <td>Rain, Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day with a chance of rain throughout the day.</td>\n",
       "      <td>rain</td>\n",
       "      <td>03769099999,EGWU,03680099999,03768399999,03672099999,03781099999,03761099999,EGLC,03772099999,03770099999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-02</th>\n",
       "      <td>London, England, United Kingdom</td>\n",
       "      <td>11.0</td>\n",
       "      <td>6.6</td>\n",
       "      <td>9.1</td>\n",
       "      <td>11.0</td>\n",
       "      <td>3.6</td>\n",
       "      <td>7.2</td>\n",
       "      <td>6.0</td>\n",
       "      <td>81.0</td>\n",
       "      <td>5.394</td>\n",
       "      <td>100</td>\n",
       "      <td>12.50</td>\n",
       "      <td>rain</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>51.8</td>\n",
       "      <td>29.8</td>\n",
       "      <td>216.2</td>\n",
       "      <td>993.4</td>\n",
       "      <td>47.4</td>\n",
       "      <td>26.7</td>\n",
       "      <td>38.3</td>\n",
       "      <td>3.3</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.03</td>\n",
       "      <td>Rain, Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day with rain.</td>\n",
       "      <td>rain</td>\n",
       "      <td>03769099999,03680099999,03672099999,03781099999,03772099999,03770099999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-03</th>\n",
       "      <td>London, England, United Kingdom</td>\n",
       "      <td>10.6</td>\n",
       "      <td>7.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.6</td>\n",
       "      <td>3.2</td>\n",
       "      <td>6.5</td>\n",
       "      <td>5.1</td>\n",
       "      <td>76.8</td>\n",
       "      <td>6.030</td>\n",
       "      <td>100</td>\n",
       "      <td>16.67</td>\n",
       "      <td>rain</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>77.4</td>\n",
       "      <td>33.5</td>\n",
       "      <td>218.4</td>\n",
       "      <td>994.5</td>\n",
       "      <td>52.8</td>\n",
       "      <td>17.9</td>\n",
       "      <td>30.3</td>\n",
       "      <td>2.8</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.07</td>\n",
       "      <td>Rain, Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day with a chance of rain throughout the day.</td>\n",
       "      <td>rain</td>\n",
       "      <td>03769099999,03680099999,03672099999,03781099999,03772099999,03770099999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-04</th>\n",
       "      <td>London, England, United Kingdom</td>\n",
       "      <td>10.1</td>\n",
       "      <td>4.5</td>\n",
       "      <td>8.0</td>\n",
       "      <td>10.1</td>\n",
       "      <td>2.0</td>\n",
       "      <td>5.1</td>\n",
       "      <td>5.2</td>\n",
       "      <td>82.4</td>\n",
       "      <td>5.239</td>\n",
       "      <td>100</td>\n",
       "      <td>16.67</td>\n",
       "      <td>rain</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>62.1</td>\n",
       "      <td>29.2</td>\n",
       "      <td>206.0</td>\n",
       "      <td>993.6</td>\n",
       "      <td>67.6</td>\n",
       "      <td>22.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>1.4</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.10</td>\n",
       "      <td>Rain, Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day with a chance of rain throughout the day.</td>\n",
       "      <td>rain</td>\n",
       "      <td>03769099999,03680099999,03672099999,03781099999,03772099999,03770099999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-05</th>\n",
       "      <td>London, England, United Kingdom</td>\n",
       "      <td>12.0</td>\n",
       "      <td>1.8</td>\n",
       "      <td>6.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>-0.9</td>\n",
       "      <td>3.6</td>\n",
       "      <td>3.9</td>\n",
       "      <td>85.9</td>\n",
       "      <td>0.201</td>\n",
       "      <td>100</td>\n",
       "      <td>8.33</td>\n",
       "      <td>rain</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>55.6</td>\n",
       "      <td>30.4</td>\n",
       "      <td>192.5</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>66.5</td>\n",
       "      <td>25.5</td>\n",
       "      <td>30.4</td>\n",
       "      <td>2.6</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.14</td>\n",
       "      <td>Rain, Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day with rain.</td>\n",
       "      <td>rain</td>\n",
       "      <td>03769099999,03680099999,03672099999,03781099999,03772099999,03770099999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-16</th>\n",
       "      <td>London, England, United Kingdom</td>\n",
       "      <td>16.5</td>\n",
       "      <td>12.3</td>\n",
       "      <td>14.2</td>\n",
       "      <td>16.5</td>\n",
       "      <td>12.3</td>\n",
       "      <td>14.2</td>\n",
       "      <td>12.4</td>\n",
       "      <td>89.1</td>\n",
       "      <td>10.126</td>\n",
       "      <td>100</td>\n",
       "      <td>20.83</td>\n",
       "      <td>rain</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.4</td>\n",
       "      <td>10.1</td>\n",
       "      <td>213.9</td>\n",
       "      <td>1005.2</td>\n",
       "      <td>58.3</td>\n",
       "      <td>15.8</td>\n",
       "      <td>74.5</td>\n",
       "      <td>6.5</td>\n",
       "      <td>3</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.27</td>\n",
       "      <td>Rain, Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day with rain.</td>\n",
       "      <td>rain</td>\n",
       "      <td>03769099999,03680099999,D5621,03781099999,03672099999,03684099999,03772099999,03770099999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-17</th>\n",
       "      <td>London, England, United Kingdom</td>\n",
       "      <td>21.6</td>\n",
       "      <td>10.0</td>\n",
       "      <td>16.4</td>\n",
       "      <td>21.6</td>\n",
       "      <td>10.0</td>\n",
       "      <td>16.4</td>\n",
       "      <td>10.3</td>\n",
       "      <td>70.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>rain</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>9.4</td>\n",
       "      <td>194.8</td>\n",
       "      <td>1009.3</td>\n",
       "      <td>41.4</td>\n",
       "      <td>21.7</td>\n",
       "      <td>177.8</td>\n",
       "      <td>15.5</td>\n",
       "      <td>10</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.30</td>\n",
       "      <td>Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day.</td>\n",
       "      <td>partly-cloudy-day</td>\n",
       "      <td>03769099999,EGWU,03680099999,D5621,03781099999,03672099999,03684099999,EGLC,03772099999,03770099999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-18</th>\n",
       "      <td>London, England, United Kingdom</td>\n",
       "      <td>19.2</td>\n",
       "      <td>13.0</td>\n",
       "      <td>15.8</td>\n",
       "      <td>19.2</td>\n",
       "      <td>13.0</td>\n",
       "      <td>15.8</td>\n",
       "      <td>11.7</td>\n",
       "      <td>77.5</td>\n",
       "      <td>2.000</td>\n",
       "      <td>100</td>\n",
       "      <td>25.00</td>\n",
       "      <td>rain</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>22.7</td>\n",
       "      <td>13.4</td>\n",
       "      <td>5.8</td>\n",
       "      <td>1012.8</td>\n",
       "      <td>83.7</td>\n",
       "      <td>9.7</td>\n",
       "      <td>76.1</td>\n",
       "      <td>6.7</td>\n",
       "      <td>3</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.33</td>\n",
       "      <td>Rain, Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day with rain.</td>\n",
       "      <td>rain</td>\n",
       "      <td>EGWU,D5621,EGLC</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-19</th>\n",
       "      <td>London, England, United Kingdom</td>\n",
       "      <td>22.7</td>\n",
       "      <td>10.9</td>\n",
       "      <td>16.6</td>\n",
       "      <td>22.7</td>\n",
       "      <td>10.9</td>\n",
       "      <td>16.6</td>\n",
       "      <td>9.3</td>\n",
       "      <td>63.9</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>34.2</td>\n",
       "      <td>20.3</td>\n",
       "      <td>38.3</td>\n",
       "      <td>1013.8</td>\n",
       "      <td>53.5</td>\n",
       "      <td>10.0</td>\n",
       "      <td>225.0</td>\n",
       "      <td>19.3</td>\n",
       "      <td>9</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.37</td>\n",
       "      <td>Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day.</td>\n",
       "      <td>partly-cloudy-day</td>\n",
       "      <td>EGWU,D5621,EGLC</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-20</th>\n",
       "      <td>London, England, United Kingdom</td>\n",
       "      <td>20.2</td>\n",
       "      <td>10.0</td>\n",
       "      <td>15.1</td>\n",
       "      <td>20.2</td>\n",
       "      <td>8.5</td>\n",
       "      <td>14.9</td>\n",
       "      <td>9.2</td>\n",
       "      <td>69.8</td>\n",
       "      <td>0.100</td>\n",
       "      <td>100</td>\n",
       "      <td>4.17</td>\n",
       "      <td>rain</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>19.5</td>\n",
       "      <td>43.4</td>\n",
       "      <td>1013.6</td>\n",
       "      <td>36.8</td>\n",
       "      <td>10.0</td>\n",
       "      <td>217.3</td>\n",
       "      <td>18.7</td>\n",
       "      <td>8</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.40</td>\n",
       "      <td>Rain, Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day with late afternoon rain.</td>\n",
       "      <td>rain</td>\n",
       "      <td>EGWU,D5621,EGLC</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3793 rows × 30 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 65
  },
  {
   "cell_type": "code",
   "id": "71a2f358-f176-46eb-b76c-8e55a9c44364",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:26.561083Z",
     "start_time": "2024-08-05T19:27:26.420097Z"
    }
   },
   "source": [
    "df_london['month'] = df_london.index.month\n",
    "\n",
    "plt.figure(figsize=(12, 6))\n",
    "sns.boxplot(x='month', y='temp', data=df_london, color=\"purple\")\n",
    "plt.title('Monthly Temperature Distribution - London, United Kingdom')\n",
    "plt.xlabel('Month')\n",
    "plt.ylabel('Temperature (°C)')\n",
    "plt.grid(True)\n",
    "plt.show()"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ],
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "execution_count": 66
  },
  {
   "cell_type": "code",
   "id": "71935ac0-0ff6-469e-a9db-fe15ab6a2064",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:26.747378Z",
     "start_time": "2024-08-05T19:27:26.562809Z"
    }
   },
   "source": [
    "daily_solar_radiation = df_london['solarradiation'].resample('D').mean()\n",
    "\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.plot(daily_solar_radiation.index, daily_solar_radiation.values, linestyle='-', color='green')\n",
    "plt.title('Daily Mean Solar Radiation - London, United Kingdom')\n",
    "plt.xlabel('Date')\n",
    "plt.ylabel('Solar Radiation (W/m^2)')\n",
    "plt.grid(True)\n",
    "plt.show()"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ],
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "execution_count": 67
  },
  {
   "cell_type": "markdown",
   "id": "d5d7d1b5-32a2-4c51-b27f-9f98f2730b1d",
   "metadata": {},
   "source": [
    "## Missing values"
   ]
  },
  {
   "cell_type": "code",
   "id": "f90eb85c-cafc-467b-8352-9404ec05d7dd",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:26.756943Z",
     "start_time": "2024-08-05T19:27:26.749134Z"
    }
   },
   "source": [
    "df_london.isna().sum()"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "name                   0\n",
       "tempmax                0\n",
       "tempmin                0\n",
       "temp                   0\n",
       "feelslikemax           0\n",
       "feelslikemin           0\n",
       "feelslike              0\n",
       "dew                    0\n",
       "humidity               0\n",
       "precip                 0\n",
       "precipprob             0\n",
       "precipcover            0\n",
       "preciptype          1426\n",
       "snow                   0\n",
       "snowdepth              0\n",
       "windgust             175\n",
       "windspeed              0\n",
       "winddir                0\n",
       "sealevelpressure       0\n",
       "cloudcover             0\n",
       "visibility             0\n",
       "solarradiation         0\n",
       "solarenergy            0\n",
       "uvindex                0\n",
       "severerisk          2931\n",
       "moonphase              0\n",
       "conditions             0\n",
       "description            0\n",
       "icon                   0\n",
       "stations               0\n",
       "month                  0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 68
  },
  {
   "cell_type": "code",
   "id": "0a4ac1a9",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:27.441879Z",
     "start_time": "2024-08-05T19:27:26.758106Z"
    }
   },
   "source": [
    "#run k-nn to fill in the missing values with the k nearest neighbour \n",
    "#https://www.sciencedirect.com/science/article/abs/pii/S0164121212001586#:~:text=kNN%20imputation%20is%20designed%20to,or%20attribute)%20is%20categorical%2C%20referred\n",
    "\n",
    "imputer = KNNImputer(n_neighbors=5)\n",
    "df_london[['windgust', 'severerisk']] = imputer.fit_transform(df_london[['windgust', 'severerisk']])"
   ],
   "outputs": [],
   "execution_count": 69
  },
  {
   "cell_type": "code",
   "id": "74da3ee9",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:27.449008Z",
     "start_time": "2024-08-05T19:27:27.444581Z"
    }
   },
   "source": [
    "df_london['preciptype'].unique()"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['rain', nan, 'rain,snow', 'snow'], dtype=object)"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 70
  },
  {
   "cell_type": "code",
   "id": "14e396e4",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:27.453611Z",
     "start_time": "2024-08-05T19:27:27.449736Z"
    }
   },
   "source": [
    "df_london['preciptype'].value_counts()"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "preciptype\n",
       "rain         2320\n",
       "rain,snow      40\n",
       "snow            7\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 71
  },
  {
   "cell_type": "code",
   "id": "eaf20fda-19cc-4e4d-9e8b-900919811ded",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:27.459075Z",
     "start_time": "2024-08-05T19:27:27.454905Z"
    }
   },
   "source": [
    "df_london.isna().sum()"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "name                   0\n",
       "tempmax                0\n",
       "tempmin                0\n",
       "temp                   0\n",
       "feelslikemax           0\n",
       "feelslikemin           0\n",
       "feelslike              0\n",
       "dew                    0\n",
       "humidity               0\n",
       "precip                 0\n",
       "precipprob             0\n",
       "precipcover            0\n",
       "preciptype          1426\n",
       "snow                   0\n",
       "snowdepth              0\n",
       "windgust               0\n",
       "windspeed              0\n",
       "winddir                0\n",
       "sealevelpressure       0\n",
       "cloudcover             0\n",
       "visibility             0\n",
       "solarradiation         0\n",
       "solarenergy            0\n",
       "uvindex                0\n",
       "severerisk             0\n",
       "moonphase              0\n",
       "conditions             0\n",
       "description            0\n",
       "icon                   0\n",
       "stations               0\n",
       "month                  0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 72
  },
  {
   "cell_type": "code",
   "id": "eb677273-3392-4db4-8660-ba12871c0f6d",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:27.462736Z",
     "start_time": "2024-08-05T19:27:27.459791Z"
    }
   },
   "source": [
    "#filling in missing values from precipitation because if they are missing, it means there was no registration of precipitation that day\n",
    "df_london['preciptype'] = df_london['preciptype'].fillna(0)"
   ],
   "outputs": [],
   "execution_count": 73
  },
  {
   "cell_type": "code",
   "id": "8388f508-2637-4b4c-92a0-356e57de6d4b",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:27.471531Z",
     "start_time": "2024-08-05T19:27:27.464269Z"
    }
   },
   "source": [
    "df_london.isna().sum()"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "name                0\n",
       "tempmax             0\n",
       "tempmin             0\n",
       "temp                0\n",
       "feelslikemax        0\n",
       "feelslikemin        0\n",
       "feelslike           0\n",
       "dew                 0\n",
       "humidity            0\n",
       "precip              0\n",
       "precipprob          0\n",
       "precipcover         0\n",
       "preciptype          0\n",
       "snow                0\n",
       "snowdepth           0\n",
       "windgust            0\n",
       "windspeed           0\n",
       "winddir             0\n",
       "sealevelpressure    0\n",
       "cloudcover          0\n",
       "visibility          0\n",
       "solarradiation      0\n",
       "solarenergy         0\n",
       "uvindex             0\n",
       "severerisk          0\n",
       "moonphase           0\n",
       "conditions          0\n",
       "description         0\n",
       "icon                0\n",
       "stations            0\n",
       "month               0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 74
  },
  {
   "cell_type": "markdown",
   "id": "22c6db17-64d3-4e5b-b70f-856b63c5838a",
   "metadata": {},
   "source": [
    "## Droppping unnecessary columns"
   ]
  },
  {
   "cell_type": "code",
   "id": "845bd503-dbc9-45fe-af6b-da367745bf2b",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:27.477657Z",
     "start_time": "2024-08-05T19:27:27.473442Z"
    }
   },
   "source": [
    "# based on the heatmap, it seems that columns like tempmax, tempin, feelslikemax, feelslikemin and feelslike are too similar with the target variable and they are being dropped as to not create any data leakage in the models to follow"
   ],
   "outputs": [],
   "execution_count": 75
  },
  {
   "cell_type": "code",
   "id": "3c96ff29-22c3-4f0c-9f18-ad1ca302b11b",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:27.483583Z",
     "start_time": "2024-08-05T19:27:27.480622Z"
    }
   },
   "source": [
    "# reference multi colinearity"
   ],
   "outputs": [],
   "execution_count": 76
  },
  {
   "cell_type": "code",
   "id": "4c776662-4cee-476b-991c-d512561440cf",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:27.489338Z",
     "start_time": "2024-08-05T19:27:27.485260Z"
    }
   },
   "source": [
    "columns_to_drop = ['tempmax', 'tempmin', 'icon', 'stations', 'conditions', 'tempmin', 'feelslikemax', 'feelslikemin', 'feelslike', 'preciptype', 'name']\n",
    "df_london = df_london.drop(columns=columns_to_drop)"
   ],
   "outputs": [],
   "execution_count": 77
  },
  {
   "cell_type": "markdown",
   "id": "047979db-f8da-4741-b472-4c0aef559c28",
   "metadata": {
    "tags": []
   },
   "source": [
    "## Tokenization of the \"description\" column"
   ]
  },
  {
   "cell_type": "code",
   "id": "26d507db-6793-4eec-a54a-3b13cddd756c",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:27.492429Z",
     "start_time": "2024-08-05T19:27:27.490125Z"
    }
   },
   "source": [
    "# step 1: text processing\n",
    "tokenizer = CountVectorizer()\n",
    "hashingTF = TfidfTransformer(use_idf=False)\n",
    "idf = TfidfTransformer(use_idf=True)\n",
    "k = 3\n",
    "kmeans = KMeans(n_clusters=k, random_state=42)"
   ],
   "outputs": [],
   "execution_count": 78
  },
  {
   "cell_type": "code",
   "id": "f91ef88d-cec0-4b7e-bebe-893ba0bb8455",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:27.497038Z",
     "start_time": "2024-08-05T19:27:27.493496Z"
    }
   },
   "source": [
    "# pipeline that processes text and then clusters\n",
    "pipeline = Pipeline(steps=[\n",
    "    ('tokenizer', tokenizer),\n",
    "    ('hashingTF', hashingTF),\n",
    "    ('idf', idf),\n",
    "    ('kmeans', kmeans)\n",
    "])"
   ],
   "outputs": [],
   "execution_count": 79
  },
  {
   "cell_type": "code",
   "id": "219d19b3-fd45-4545-8f00-6eb68005a8a5",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:27.773290Z",
     "start_time": "2024-08-05T19:27:27.498702Z"
    }
   },
   "source": [
    "# fitting the model on the \"description\"column\n",
    "text_features = pipeline.fit_transform(df_london['description'])"
   ],
   "outputs": [],
   "execution_count": 80
  },
  {
   "cell_type": "code",
   "id": "ad8367b7-84e7-4c4f-aef6-325ac7e36352",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:27.783091Z",
     "start_time": "2024-08-05T19:27:27.779035Z"
    }
   },
   "source": [
    "kmeans.labels_\n",
    "df_london['clusters_description'] = kmeans.labels_"
   ],
   "outputs": [],
   "execution_count": 81
  },
  {
   "cell_type": "code",
   "id": "84838771-ad1e-4fb0-8db5-e248d1274821",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:27.799050Z",
     "start_time": "2024-08-05T19:27:27.794168Z"
    }
   },
   "source": [
    "df_london['clusters_description'].value_counts()"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "clusters_description\n",
       "1    2369\n",
       "2     784\n",
       "0     640\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 82
  },
  {
   "cell_type": "code",
   "id": "3a42a3d5-32a4-4fd3-87c0-00c64a4291fc",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.075126Z",
     "start_time": "2024-08-05T19:27:27.800505Z"
    }
   },
   "source": [
    "text = ' '.join(description for description in df_london[df_london['clusters_description']==0]['description'])\n",
    "wordcloud = WordCloud(background_color='white').generate(text)\n",
    "plt.figure(figsize=(8, 4))\n",
    "plt.imshow(wordcloud, interpolation='bilinear')\n",
    "plt.axis('off')\n",
    "plt.title('Word Cloud for Cluster 0')\n",
    "plt.show()"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 800x400 with 1 Axes>"
      ],
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "execution_count": 83
  },
  {
   "cell_type": "code",
   "id": "10c1b0d8-e0dc-4832-8226-e5d9cdafd36c",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.292628Z",
     "start_time": "2024-08-05T19:27:28.077332Z"
    }
   },
   "source": [
    "text = ' '.join(description for description in df_london[df_london['clusters_description']==1]['description'])\n",
    "wordcloud = WordCloud(background_color='white').generate(text)\n",
    "plt.figure(figsize=(8, 4))\n",
    "plt.imshow(wordcloud, interpolation='bilinear')\n",
    "plt.axis('off')\n",
    "plt.title('Word Cloud for Cluster 1')\n",
    "plt.show()"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 800x400 with 1 Axes>"
      ],
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "execution_count": 84
  },
  {
   "cell_type": "code",
   "id": "4d8062a2-5c55-4413-99d6-555d9eccb579",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.517798Z",
     "start_time": "2024-08-05T19:27:28.294214Z"
    }
   },
   "source": [
    "text = ' '.join(description for description in df_london[df_london['clusters_description']==2]['description'])\n",
    "wordcloud = WordCloud(background_color='white').generate(text)\n",
    "plt.figure(figsize=(8, 4))\n",
    "plt.imshow(wordcloud, interpolation='bilinear')\n",
    "plt.axis('off')\n",
    "plt.title('Word Cloud for Cluster 2')\n",
    "plt.show()"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 800x400 with 1 Axes>"
      ],
      "image/png": "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/MZv/Abvfve7ec973sMLL7xwxc+Uy2W++MUvsnfv3mV/vvKVrzA/P7/svZfPlavxqU99io985CM88MAD/I//8T/QNG3D5xUSEnLjCRW+kJA7iLe97W0cPXqU559/nnQ6zf79+zuvPfHEE8zOzvLCCy8wMzOzTOFLpVIsLi6u+L6FhQWAqypv6XR6xWd93181EeFSnnjiCTzP49lnn1319WKxyDd90zfxy7/8yyteW3L1LY1vCdu2KZVKy8Z7uRWx2Wwu+3smk1n13Mvl8lXHf6UxXek6XksBvpy3ve1tKIrCV7/61Su+58Mf/vAy9/rlXOvcRVHk/e9/P1/4whd47rnn+NVf/VUsy+InfuInrlgHL5FI8O53v5vPfe5zK/78/u///jrOMMD3fX7pl36JX/3VX+Xbvu3b+MQnPrHM0hwSEnJnECp8ISF3EI899hhvvvkmL774Io8++iiiePERPXToELFYjD/5kz8hk8lw3333dV576KGH+MpXvrLMkue6Ln/zN3/D/v37r1rn7dFHH+WZZ56h1Wp1jj377LMrCj1fzhNPPMHOnTv56Ec/SqlUWvH6b/7mb+I4Dt/+7d++4rWlJJK/+Zu/WXb8b/7mb3BdlwcffBCAeDy+wkp4aeYxBIrVkSNHmJub6xwbGRlZd4bowYMHUVWVv/7rv152/JVXXmF6epoHHnhgXd+XTCb57u/+bj772c9y/PjxFa//xV/8BadOneKf/tN/uurn13Lu733ve/mlX/olAHK5HN/5nd/J+9//fqrVamcuXDqHILj2IyMj7Nmzh/3797N//3727dvHpz71Kb70pS+t6xwBfuu3fos/+qM/4od+6If4jd/4jZtaUzAkJGTjhEkbISF3EA899BCWZfGVr3xlRfajoig8/PDDfPnLX+ZbvuVblmWx/viP/zjPPPMMP/ADP8CP/uiPoigKn/70p5mYmOCTn/zkVX/zX//rf83f//3f8yM/8iN86EMfolgs8t/+239bFtO3GrIs8+u//uv88A//MN/1Xd/VKbxcLBb5whe+wLPPPsvP/uzPcuDAgRWf3b59O9/xHd/Bxz72MVqtFg899BAnT57k6aef5pFHHum4sp988km+/OUv86u/+qs89dRTvPLKKys6i/zgD/4gn/vc5/iRH/kRfuInfgLXdTuZqushnU7zoz/6o3z84x9HURSefPJJ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"
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "execution_count": 85
  },
  {
   "cell_type": "code",
   "id": "824c4a17-6422-47f2-aee1-cf98a5693f1e",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.531192Z",
     "start_time": "2024-08-05T19:27:28.520220Z"
    }
   },
   "source": [
    "df_london = df_london.drop(columns=['description'])\n",
    "df_london.head(2)"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "            temp  dew  humidity  precip  precipprob  precipcover  snow  \\\n",
       "datetime                                                                 \n",
       "2014-01-01   9.1  6.7      84.8  11.857         100        16.67   0.0   \n",
       "2014-01-02   9.1  6.0      81.0   5.394         100        12.50   0.0   \n",
       "\n",
       "            snowdepth  windgust  windspeed  winddir  sealevelpressure  \\\n",
       "datetime                                                                \n",
       "2014-01-01        0.0      72.4       38.4    190.5             993.1   \n",
       "2014-01-02        0.0      51.8       29.8    216.2             993.4   \n",
       "\n",
       "            cloudcover  visibility  solarradiation  solarenergy  uvindex  \\\n",
       "datetime                                                                   \n",
       "2014-01-01        67.4        14.2             6.9          0.5        0   \n",
       "2014-01-02        47.4        26.7            38.3          3.3        2   \n",
       "\n",
       "            severerisk  moonphase  month  clusters_description  \n",
       "datetime                                                        \n",
       "2014-01-01        10.0       0.00      1                     1  \n",
       "2014-01-02        10.0       0.03      1                     1  "
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>month</th>\n",
       "      <th>clusters_description</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>datetime</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2014-01-01</th>\n",
       "      <td>9.1</td>\n",
       "      <td>6.7</td>\n",
       "      <td>84.8</td>\n",
       "      <td>11.857</td>\n",
       "      <td>100</td>\n",
       "      <td>16.67</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>72.4</td>\n",
       "      <td>38.4</td>\n",
       "      <td>190.5</td>\n",
       "      <td>993.1</td>\n",
       "      <td>67.4</td>\n",
       "      <td>14.2</td>\n",
       "      <td>6.9</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-02</th>\n",
       "      <td>9.1</td>\n",
       "      <td>6.0</td>\n",
       "      <td>81.0</td>\n",
       "      <td>5.394</td>\n",
       "      <td>100</td>\n",
       "      <td>12.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>51.8</td>\n",
       "      <td>29.8</td>\n",
       "      <td>216.2</td>\n",
       "      <td>993.4</td>\n",
       "      <td>47.4</td>\n",
       "      <td>26.7</td>\n",
       "      <td>38.3</td>\n",
       "      <td>3.3</td>\n",
       "      <td>2</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 86
  },
  {
   "cell_type": "markdown",
   "id": "bccd4a2c",
   "metadata": {},
   "source": [
    "## Feature engineering"
   ]
  },
  {
   "cell_type": "code",
   "id": "6b72de1c",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.548089Z",
     "start_time": "2024-08-05T19:27:28.532662Z"
    }
   },
   "source": [
    "df_london"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "            temp   dew  humidity  precip  precipprob  precipcover  snow  \\\n",
       "datetime                                                                  \n",
       "2014-01-01   9.1   6.7      84.8  11.857         100        16.67   0.0   \n",
       "2014-01-02   9.1   6.0      81.0   5.394         100        12.50   0.0   \n",
       "2014-01-03   9.0   5.1      76.8   6.030         100        16.67   0.0   \n",
       "2014-01-04   8.0   5.2      82.4   5.239         100        16.67   0.0   \n",
       "2014-01-05   6.0   3.9      85.9   0.201         100         8.33   0.0   \n",
       "...          ...   ...       ...     ...         ...          ...   ...   \n",
       "2024-05-16  14.2  12.4      89.1  10.126         100        20.83   0.0   \n",
       "2024-05-17  16.4  10.3      70.2   0.000           0         0.00   0.0   \n",
       "2024-05-18  15.8  11.7      77.5   2.000         100        25.00   0.0   \n",
       "2024-05-19  16.6   9.3      63.9   0.000           0         0.00   0.0   \n",
       "2024-05-20  15.1   9.2      69.8   0.100         100         4.17   0.0   \n",
       "\n",
       "            snowdepth  windgust  windspeed  winddir  sealevelpressure  \\\n",
       "datetime                                                                \n",
       "2014-01-01        0.0      72.4       38.4    190.5             993.1   \n",
       "2014-01-02        0.0      51.8       29.8    216.2             993.4   \n",
       "2014-01-03        0.0      77.4       33.5    218.4             994.5   \n",
       "2014-01-04        0.0      62.1       29.2    206.0             993.6   \n",
       "2014-01-05        0.0      55.6       30.4    192.5            1000.0   \n",
       "...               ...       ...        ...      ...               ...   \n",
       "2024-05-16        0.0      18.4       10.1    213.9            1005.2   \n",
       "2024-05-17        0.0      17.4        9.4    194.8            1009.3   \n",
       "2024-05-18        0.0      22.7       13.4      5.8            1012.8   \n",
       "2024-05-19        0.0      34.2       20.3     38.3            1013.8   \n",
       "2024-05-20        0.0      32.0       19.5     43.4            1013.6   \n",
       "\n",
       "            cloudcover  visibility  solarradiation  solarenergy  uvindex  \\\n",
       "datetime                                                                   \n",
       "2014-01-01        67.4        14.2             6.9          0.5        0   \n",
       "2014-01-02        47.4        26.7            38.3          3.3        2   \n",
       "2014-01-03        52.8        17.9            30.3          2.8        2   \n",
       "2014-01-04        67.6        22.0            17.4          1.4        1   \n",
       "2014-01-05        66.5        25.5            30.4          2.6        2   \n",
       "...                ...         ...             ...          ...      ...   \n",
       "2024-05-16        58.3        15.8            74.5          6.5        3   \n",
       "2024-05-17        41.4        21.7           177.8         15.5       10   \n",
       "2024-05-18        83.7         9.7            76.1          6.7        3   \n",
       "2024-05-19        53.5        10.0           225.0         19.3        9   \n",
       "2024-05-20        36.8        10.0           217.3         18.7        8   \n",
       "\n",
       "            severerisk  moonphase  month  clusters_description  \n",
       "datetime                                                        \n",
       "2014-01-01        10.0       0.00      1                     1  \n",
       "2014-01-02        10.0       0.03      1                     1  \n",
       "2014-01-03        10.0       0.07      1                     1  \n",
       "2014-01-04        10.0       0.10      1                     1  \n",
       "2014-01-05        10.0       0.14      1                     1  \n",
       "...                ...        ...    ...                   ...  \n",
       "2024-05-16        10.0       0.27      5                     1  \n",
       "2024-05-17        10.0       0.30      5                     1  \n",
       "2024-05-18        10.0       0.33      5                     1  \n",
       "2024-05-19        10.0       0.37      5                     1  \n",
       "2024-05-20        10.0       0.40      5                     2  \n",
       "\n",
       "[3793 rows x 21 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>month</th>\n",
       "      <th>clusters_description</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>datetime</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2014-01-01</th>\n",
       "      <td>9.1</td>\n",
       "      <td>6.7</td>\n",
       "      <td>84.8</td>\n",
       "      <td>11.857</td>\n",
       "      <td>100</td>\n",
       "      <td>16.67</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>72.4</td>\n",
       "      <td>38.4</td>\n",
       "      <td>190.5</td>\n",
       "      <td>993.1</td>\n",
       "      <td>67.4</td>\n",
       "      <td>14.2</td>\n",
       "      <td>6.9</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-02</th>\n",
       "      <td>9.1</td>\n",
       "      <td>6.0</td>\n",
       "      <td>81.0</td>\n",
       "      <td>5.394</td>\n",
       "      <td>100</td>\n",
       "      <td>12.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>51.8</td>\n",
       "      <td>29.8</td>\n",
       "      <td>216.2</td>\n",
       "      <td>993.4</td>\n",
       "      <td>47.4</td>\n",
       "      <td>26.7</td>\n",
       "      <td>38.3</td>\n",
       "      <td>3.3</td>\n",
       "      <td>2</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-03</th>\n",
       "      <td>9.0</td>\n",
       "      <td>5.1</td>\n",
       "      <td>76.8</td>\n",
       "      <td>6.030</td>\n",
       "      <td>100</td>\n",
       "      <td>16.67</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>77.4</td>\n",
       "      <td>33.5</td>\n",
       "      <td>218.4</td>\n",
       "      <td>994.5</td>\n",
       "      <td>52.8</td>\n",
       "      <td>17.9</td>\n",
       "      <td>30.3</td>\n",
       "      <td>2.8</td>\n",
       "      <td>2</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.07</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-04</th>\n",
       "      <td>8.0</td>\n",
       "      <td>5.2</td>\n",
       "      <td>82.4</td>\n",
       "      <td>5.239</td>\n",
       "      <td>100</td>\n",
       "      <td>16.67</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>62.1</td>\n",
       "      <td>29.2</td>\n",
       "      <td>206.0</td>\n",
       "      <td>993.6</td>\n",
       "      <td>67.6</td>\n",
       "      <td>22.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>1.4</td>\n",
       "      <td>1</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.10</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-05</th>\n",
       "      <td>6.0</td>\n",
       "      <td>3.9</td>\n",
       "      <td>85.9</td>\n",
       "      <td>0.201</td>\n",
       "      <td>100</td>\n",
       "      <td>8.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>55.6</td>\n",
       "      <td>30.4</td>\n",
       "      <td>192.5</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>66.5</td>\n",
       "      <td>25.5</td>\n",
       "      <td>30.4</td>\n",
       "      <td>2.6</td>\n",
       "      <td>2</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.14</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-16</th>\n",
       "      <td>14.2</td>\n",
       "      <td>12.4</td>\n",
       "      <td>89.1</td>\n",
       "      <td>10.126</td>\n",
       "      <td>100</td>\n",
       "      <td>20.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.4</td>\n",
       "      <td>10.1</td>\n",
       "      <td>213.9</td>\n",
       "      <td>1005.2</td>\n",
       "      <td>58.3</td>\n",
       "      <td>15.8</td>\n",
       "      <td>74.5</td>\n",
       "      <td>6.5</td>\n",
       "      <td>3</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.27</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-17</th>\n",
       "      <td>16.4</td>\n",
       "      <td>10.3</td>\n",
       "      <td>70.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>9.4</td>\n",
       "      <td>194.8</td>\n",
       "      <td>1009.3</td>\n",
       "      <td>41.4</td>\n",
       "      <td>21.7</td>\n",
       "      <td>177.8</td>\n",
       "      <td>15.5</td>\n",
       "      <td>10</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.30</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-18</th>\n",
       "      <td>15.8</td>\n",
       "      <td>11.7</td>\n",
       "      <td>77.5</td>\n",
       "      <td>2.000</td>\n",
       "      <td>100</td>\n",
       "      <td>25.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>22.7</td>\n",
       "      <td>13.4</td>\n",
       "      <td>5.8</td>\n",
       "      <td>1012.8</td>\n",
       "      <td>83.7</td>\n",
       "      <td>9.7</td>\n",
       "      <td>76.1</td>\n",
       "      <td>6.7</td>\n",
       "      <td>3</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.33</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-19</th>\n",
       "      <td>16.6</td>\n",
       "      <td>9.3</td>\n",
       "      <td>63.9</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>34.2</td>\n",
       "      <td>20.3</td>\n",
       "      <td>38.3</td>\n",
       "      <td>1013.8</td>\n",
       "      <td>53.5</td>\n",
       "      <td>10.0</td>\n",
       "      <td>225.0</td>\n",
       "      <td>19.3</td>\n",
       "      <td>9</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.37</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-20</th>\n",
       "      <td>15.1</td>\n",
       "      <td>9.2</td>\n",
       "      <td>69.8</td>\n",
       "      <td>0.100</td>\n",
       "      <td>100</td>\n",
       "      <td>4.17</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>19.5</td>\n",
       "      <td>43.4</td>\n",
       "      <td>1013.6</td>\n",
       "      <td>36.8</td>\n",
       "      <td>10.0</td>\n",
       "      <td>217.3</td>\n",
       "      <td>18.7</td>\n",
       "      <td>8</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.40</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3793 rows × 21 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 87
  },
  {
   "cell_type": "code",
   "id": "74f92dd6",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.553363Z",
     "start_time": "2024-08-05T19:27:28.550334Z"
    }
   },
   "source": [
    "# xgboost baseline with all features \n",
    "# xgboost with feature selection \n",
    "# sktime just for temperature prediction with no features\n",
    "# sktime lagged features "
   ],
   "outputs": [],
   "execution_count": 88
  },
  {
   "cell_type": "markdown",
   "id": "d210f94b",
   "metadata": {},
   "source": [
    "## Xgboost baseline with all features \n",
    "### Lagged features"
   ]
  },
  {
   "cell_type": "code",
   "id": "9098b665",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.557911Z",
     "start_time": "2024-08-05T19:27:28.554745Z"
    }
   },
   "source": [
    "#shifting the features by 3 days"
   ],
   "outputs": [],
   "execution_count": 89
  },
  {
   "cell_type": "code",
   "id": "97465968",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.566911Z",
     "start_time": "2024-08-05T19:27:28.561756Z"
    }
   },
   "source": [
    "# this shifts all features by three days except the temp, and then it merges them back togther\n",
    "df_london_shifted = df_london.drop('temp', axis=1).shift(3)"
   ],
   "outputs": [],
   "execution_count": 90
  },
  {
   "cell_type": "code",
   "id": "dbfece5b",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.572528Z",
     "start_time": "2024-08-05T19:27:28.568099Z"
    }
   },
   "source": [
    "df_london_eng = pd.concat([df_london['temp'], df_london_shifted], axis=1)"
   ],
   "outputs": [],
   "execution_count": 91
  },
  {
   "cell_type": "code",
   "id": "971c8dfb",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.592639Z",
     "start_time": "2024-08-05T19:27:28.573920Z"
    }
   },
   "source": [
    "df_london_eng"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "            temp   dew  humidity  precip  precipprob  precipcover  snow  \\\n",
       "datetime                                                                  \n",
       "2014-01-01   9.1   NaN       NaN     NaN         NaN          NaN   NaN   \n",
       "2014-01-02   9.1   NaN       NaN     NaN         NaN          NaN   NaN   \n",
       "2014-01-03   9.0   NaN       NaN     NaN         NaN          NaN   NaN   \n",
       "2014-01-04   8.0   6.7      84.8  11.857       100.0        16.67   0.0   \n",
       "2014-01-05   6.0   6.0      81.0   5.394       100.0        12.50   0.0   \n",
       "...          ...   ...       ...     ...         ...          ...   ...   \n",
       "2024-05-16  14.2  11.0      73.4   0.000         0.0         0.00   0.0   \n",
       "2024-05-17  16.4  11.7      77.8   3.598       100.0        33.33   0.0   \n",
       "2024-05-18  15.8  10.5      69.7   0.797       100.0         8.33   0.0   \n",
       "2024-05-19  16.6  12.4      89.1  10.126       100.0        20.83   0.0   \n",
       "2024-05-20  15.1  10.3      70.2   0.000         0.0         0.00   0.0   \n",
       "\n",
       "            snowdepth  windgust  windspeed  winddir  sealevelpressure  \\\n",
       "datetime                                                                \n",
       "2014-01-01        NaN       NaN        NaN      NaN               NaN   \n",
       "2014-01-02        NaN       NaN        NaN      NaN               NaN   \n",
       "2014-01-03        NaN       NaN        NaN      NaN               NaN   \n",
       "2014-01-04        0.0      72.4       38.4    190.5             993.1   \n",
       "2014-01-05        0.0      51.8       29.8    216.2             993.4   \n",
       "...               ...       ...        ...      ...               ...   \n",
       "2024-05-16        0.0      35.2       21.0    183.4            1007.1   \n",
       "2024-05-17        0.0      30.5       21.0    149.7            1001.1   \n",
       "2024-05-18        0.0      25.0       15.2    147.1            1004.2   \n",
       "2024-05-19        0.0      18.4       10.1    213.9            1005.2   \n",
       "2024-05-20        0.0      17.4        9.4    194.8            1009.3   \n",
       "\n",
       "            cloudcover  visibility  solarradiation  solarenergy  uvindex  \\\n",
       "datetime                                                                   \n",
       "2014-01-01         NaN         NaN             NaN          NaN      NaN   \n",
       "2014-01-02         NaN         NaN             NaN          NaN      NaN   \n",
       "2014-01-03         NaN         NaN             NaN          NaN      NaN   \n",
       "2014-01-04        67.4        14.2             6.9          0.5      0.0   \n",
       "2014-01-05        47.4        26.7            38.3          3.3      2.0   \n",
       "...                ...         ...             ...          ...      ...   \n",
       "2024-05-16        86.1        14.9            71.5          6.2      2.0   \n",
       "2024-05-17        85.6        15.4            76.1          6.5      4.0   \n",
       "2024-05-18        52.3        19.4           118.8         10.3      9.0   \n",
       "2024-05-19        58.3        15.8            74.5          6.5      3.0   \n",
       "2024-05-20        41.4        21.7           177.8         15.5     10.0   \n",
       "\n",
       "            severerisk  moonphase  month  clusters_description  \n",
       "datetime                                                        \n",
       "2014-01-01         NaN        NaN    NaN                   NaN  \n",
       "2014-01-02         NaN        NaN    NaN                   NaN  \n",
       "2014-01-03         NaN        NaN    NaN                   NaN  \n",
       "2014-01-04        10.0       0.00    1.0                   1.0  \n",
       "2014-01-05        10.0       0.03    1.0                   1.0  \n",
       "...                ...        ...    ...                   ...  \n",
       "2024-05-16        10.0       0.17    5.0                   1.0  \n",
       "2024-05-17        10.0       0.20    5.0                   1.0  \n",
       "2024-05-18        10.0       0.25    5.0                   0.0  \n",
       "2024-05-19        10.0       0.27    5.0                   1.0  \n",
       "2024-05-20        10.0       0.30    5.0                   1.0  \n",
       "\n",
       "[3793 rows x 21 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>month</th>\n",
       "      <th>clusters_description</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>datetime</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2014-01-01</th>\n",
       "      <td>9.1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-02</th>\n",
       "      <td>9.1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-03</th>\n",
       "      <td>9.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-04</th>\n",
       "      <td>8.0</td>\n",
       "      <td>6.7</td>\n",
       "      <td>84.8</td>\n",
       "      <td>11.857</td>\n",
       "      <td>100.0</td>\n",
       "      <td>16.67</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>72.4</td>\n",
       "      <td>38.4</td>\n",
       "      <td>190.5</td>\n",
       "      <td>993.1</td>\n",
       "      <td>67.4</td>\n",
       "      <td>14.2</td>\n",
       "      <td>6.9</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-05</th>\n",
       "      <td>6.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>81.0</td>\n",
       "      <td>5.394</td>\n",
       "      <td>100.0</td>\n",
       "      <td>12.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>51.8</td>\n",
       "      <td>29.8</td>\n",
       "      <td>216.2</td>\n",
       "      <td>993.4</td>\n",
       "      <td>47.4</td>\n",
       "      <td>26.7</td>\n",
       "      <td>38.3</td>\n",
       "      <td>3.3</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-16</th>\n",
       "      <td>14.2</td>\n",
       "      <td>11.0</td>\n",
       "      <td>73.4</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>35.2</td>\n",
       "      <td>21.0</td>\n",
       "      <td>183.4</td>\n",
       "      <td>1007.1</td>\n",
       "      <td>86.1</td>\n",
       "      <td>14.9</td>\n",
       "      <td>71.5</td>\n",
       "      <td>6.2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.17</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-17</th>\n",
       "      <td>16.4</td>\n",
       "      <td>11.7</td>\n",
       "      <td>77.8</td>\n",
       "      <td>3.598</td>\n",
       "      <td>100.0</td>\n",
       "      <td>33.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.5</td>\n",
       "      <td>21.0</td>\n",
       "      <td>149.7</td>\n",
       "      <td>1001.1</td>\n",
       "      <td>85.6</td>\n",
       "      <td>15.4</td>\n",
       "      <td>76.1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.20</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-18</th>\n",
       "      <td>15.8</td>\n",
       "      <td>10.5</td>\n",
       "      <td>69.7</td>\n",
       "      <td>0.797</td>\n",
       "      <td>100.0</td>\n",
       "      <td>8.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>15.2</td>\n",
       "      <td>147.1</td>\n",
       "      <td>1004.2</td>\n",
       "      <td>52.3</td>\n",
       "      <td>19.4</td>\n",
       "      <td>118.8</td>\n",
       "      <td>10.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.25</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-19</th>\n",
       "      <td>16.6</td>\n",
       "      <td>12.4</td>\n",
       "      <td>89.1</td>\n",
       "      <td>10.126</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.4</td>\n",
       "      <td>10.1</td>\n",
       "      <td>213.9</td>\n",
       "      <td>1005.2</td>\n",
       "      <td>58.3</td>\n",
       "      <td>15.8</td>\n",
       "      <td>74.5</td>\n",
       "      <td>6.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.27</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-20</th>\n",
       "      <td>15.1</td>\n",
       "      <td>10.3</td>\n",
       "      <td>70.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>9.4</td>\n",
       "      <td>194.8</td>\n",
       "      <td>1009.3</td>\n",
       "      <td>41.4</td>\n",
       "      <td>21.7</td>\n",
       "      <td>177.8</td>\n",
       "      <td>15.5</td>\n",
       "      <td>10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.30</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3793 rows × 21 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 92
  },
  {
   "cell_type": "code",
   "id": "7b6630d9",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.607815Z",
     "start_time": "2024-08-05T19:27:28.594143Z"
    }
   },
   "source": [
    "df_london_shifted"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "             dew  humidity  precip  precipprob  precipcover  snow  snowdepth  \\\n",
       "datetime                                                                       \n",
       "2014-01-01   NaN       NaN     NaN         NaN          NaN   NaN        NaN   \n",
       "2014-01-02   NaN       NaN     NaN         NaN          NaN   NaN        NaN   \n",
       "2014-01-03   NaN       NaN     NaN         NaN          NaN   NaN        NaN   \n",
       "2014-01-04   6.7      84.8  11.857       100.0        16.67   0.0        0.0   \n",
       "2014-01-05   6.0      81.0   5.394       100.0        12.50   0.0        0.0   \n",
       "...          ...       ...     ...         ...          ...   ...        ...   \n",
       "2024-05-16  11.0      73.4   0.000         0.0         0.00   0.0        0.0   \n",
       "2024-05-17  11.7      77.8   3.598       100.0        33.33   0.0        0.0   \n",
       "2024-05-18  10.5      69.7   0.797       100.0         8.33   0.0        0.0   \n",
       "2024-05-19  12.4      89.1  10.126       100.0        20.83   0.0        0.0   \n",
       "2024-05-20  10.3      70.2   0.000         0.0         0.00   0.0        0.0   \n",
       "\n",
       "            windgust  windspeed  winddir  sealevelpressure  cloudcover  \\\n",
       "datetime                                                                 \n",
       "2014-01-01       NaN        NaN      NaN               NaN         NaN   \n",
       "2014-01-02       NaN        NaN      NaN               NaN         NaN   \n",
       "2014-01-03       NaN        NaN      NaN               NaN         NaN   \n",
       "2014-01-04      72.4       38.4    190.5             993.1        67.4   \n",
       "2014-01-05      51.8       29.8    216.2             993.4        47.4   \n",
       "...              ...        ...      ...               ...         ...   \n",
       "2024-05-16      35.2       21.0    183.4            1007.1        86.1   \n",
       "2024-05-17      30.5       21.0    149.7            1001.1        85.6   \n",
       "2024-05-18      25.0       15.2    147.1            1004.2        52.3   \n",
       "2024-05-19      18.4       10.1    213.9            1005.2        58.3   \n",
       "2024-05-20      17.4        9.4    194.8            1009.3        41.4   \n",
       "\n",
       "            visibility  solarradiation  solarenergy  uvindex  severerisk  \\\n",
       "datetime                                                                   \n",
       "2014-01-01         NaN             NaN          NaN      NaN         NaN   \n",
       "2014-01-02         NaN             NaN          NaN      NaN         NaN   \n",
       "2014-01-03         NaN             NaN          NaN      NaN         NaN   \n",
       "2014-01-04        14.2             6.9          0.5      0.0        10.0   \n",
       "2014-01-05        26.7            38.3          3.3      2.0        10.0   \n",
       "...                ...             ...          ...      ...         ...   \n",
       "2024-05-16        14.9            71.5          6.2      2.0        10.0   \n",
       "2024-05-17        15.4            76.1          6.5      4.0        10.0   \n",
       "2024-05-18        19.4           118.8         10.3      9.0        10.0   \n",
       "2024-05-19        15.8            74.5          6.5      3.0        10.0   \n",
       "2024-05-20        21.7           177.8         15.5     10.0        10.0   \n",
       "\n",
       "            moonphase  month  clusters_description  \n",
       "datetime                                            \n",
       "2014-01-01        NaN    NaN                   NaN  \n",
       "2014-01-02        NaN    NaN                   NaN  \n",
       "2014-01-03        NaN    NaN                   NaN  \n",
       "2014-01-04       0.00    1.0                   1.0  \n",
       "2014-01-05       0.03    1.0                   1.0  \n",
       "...               ...    ...                   ...  \n",
       "2024-05-16       0.17    5.0                   1.0  \n",
       "2024-05-17       0.20    5.0                   1.0  \n",
       "2024-05-18       0.25    5.0                   0.0  \n",
       "2024-05-19       0.27    5.0                   1.0  \n",
       "2024-05-20       0.30    5.0                   1.0  \n",
       "\n",
       "[3793 rows x 20 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>month</th>\n",
       "      <th>clusters_description</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>datetime</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2014-01-01</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-02</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-03</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-04</th>\n",
       "      <td>6.7</td>\n",
       "      <td>84.8</td>\n",
       "      <td>11.857</td>\n",
       "      <td>100.0</td>\n",
       "      <td>16.67</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>72.4</td>\n",
       "      <td>38.4</td>\n",
       "      <td>190.5</td>\n",
       "      <td>993.1</td>\n",
       "      <td>67.4</td>\n",
       "      <td>14.2</td>\n",
       "      <td>6.9</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-05</th>\n",
       "      <td>6.0</td>\n",
       "      <td>81.0</td>\n",
       "      <td>5.394</td>\n",
       "      <td>100.0</td>\n",
       "      <td>12.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>51.8</td>\n",
       "      <td>29.8</td>\n",
       "      <td>216.2</td>\n",
       "      <td>993.4</td>\n",
       "      <td>47.4</td>\n",
       "      <td>26.7</td>\n",
       "      <td>38.3</td>\n",
       "      <td>3.3</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-16</th>\n",
       "      <td>11.0</td>\n",
       "      <td>73.4</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>35.2</td>\n",
       "      <td>21.0</td>\n",
       "      <td>183.4</td>\n",
       "      <td>1007.1</td>\n",
       "      <td>86.1</td>\n",
       "      <td>14.9</td>\n",
       "      <td>71.5</td>\n",
       "      <td>6.2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.17</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-17</th>\n",
       "      <td>11.7</td>\n",
       "      <td>77.8</td>\n",
       "      <td>3.598</td>\n",
       "      <td>100.0</td>\n",
       "      <td>33.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.5</td>\n",
       "      <td>21.0</td>\n",
       "      <td>149.7</td>\n",
       "      <td>1001.1</td>\n",
       "      <td>85.6</td>\n",
       "      <td>15.4</td>\n",
       "      <td>76.1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.20</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-18</th>\n",
       "      <td>10.5</td>\n",
       "      <td>69.7</td>\n",
       "      <td>0.797</td>\n",
       "      <td>100.0</td>\n",
       "      <td>8.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>15.2</td>\n",
       "      <td>147.1</td>\n",
       "      <td>1004.2</td>\n",
       "      <td>52.3</td>\n",
       "      <td>19.4</td>\n",
       "      <td>118.8</td>\n",
       "      <td>10.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.25</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-19</th>\n",
       "      <td>12.4</td>\n",
       "      <td>89.1</td>\n",
       "      <td>10.126</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.4</td>\n",
       "      <td>10.1</td>\n",
       "      <td>213.9</td>\n",
       "      <td>1005.2</td>\n",
       "      <td>58.3</td>\n",
       "      <td>15.8</td>\n",
       "      <td>74.5</td>\n",
       "      <td>6.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.27</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-20</th>\n",
       "      <td>10.3</td>\n",
       "      <td>70.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>9.4</td>\n",
       "      <td>194.8</td>\n",
       "      <td>1009.3</td>\n",
       "      <td>41.4</td>\n",
       "      <td>21.7</td>\n",
       "      <td>177.8</td>\n",
       "      <td>15.5</td>\n",
       "      <td>10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.30</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3793 rows × 20 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 93
  },
  {
   "cell_type": "code",
   "id": "255eea78",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.626495Z",
     "start_time": "2024-08-05T19:27:28.609228Z"
    }
   },
   "source": [
    "# adding back the last three rows, which have all the shifted features but without the temp for them as that is what we predict\n",
    "last_three = df_london_shifted.tail(3)\n",
    "last_three.set_index( pd.date_range(start=max(df_london.index)+pd.Timedelta(days=1), periods=3, freq='D'))\n"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "             dew  humidity  precip  precipprob  precipcover  snow  snowdepth  \\\n",
       "2024-05-21  10.5      69.7   0.797       100.0         8.33   0.0        0.0   \n",
       "2024-05-22  12.4      89.1  10.126       100.0        20.83   0.0        0.0   \n",
       "2024-05-23  10.3      70.2   0.000         0.0         0.00   0.0        0.0   \n",
       "\n",
       "            windgust  windspeed  winddir  sealevelpressure  cloudcover  \\\n",
       "2024-05-21      25.0       15.2    147.1            1004.2        52.3   \n",
       "2024-05-22      18.4       10.1    213.9            1005.2        58.3   \n",
       "2024-05-23      17.4        9.4    194.8            1009.3        41.4   \n",
       "\n",
       "            visibility  solarradiation  solarenergy  uvindex  severerisk  \\\n",
       "2024-05-21        19.4           118.8         10.3      9.0        10.0   \n",
       "2024-05-22        15.8            74.5          6.5      3.0        10.0   \n",
       "2024-05-23        21.7           177.8         15.5     10.0        10.0   \n",
       "\n",
       "            moonphase  month  clusters_description  \n",
       "2024-05-21       0.25    5.0                   0.0  \n",
       "2024-05-22       0.27    5.0                   1.0  \n",
       "2024-05-23       0.30    5.0                   1.0  "
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>month</th>\n",
       "      <th>clusters_description</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2024-05-21</th>\n",
       "      <td>10.5</td>\n",
       "      <td>69.7</td>\n",
       "      <td>0.797</td>\n",
       "      <td>100.0</td>\n",
       "      <td>8.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>15.2</td>\n",
       "      <td>147.1</td>\n",
       "      <td>1004.2</td>\n",
       "      <td>52.3</td>\n",
       "      <td>19.4</td>\n",
       "      <td>118.8</td>\n",
       "      <td>10.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.25</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-22</th>\n",
       "      <td>12.4</td>\n",
       "      <td>89.1</td>\n",
       "      <td>10.126</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.4</td>\n",
       "      <td>10.1</td>\n",
       "      <td>213.9</td>\n",
       "      <td>1005.2</td>\n",
       "      <td>58.3</td>\n",
       "      <td>15.8</td>\n",
       "      <td>74.5</td>\n",
       "      <td>6.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.27</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-23</th>\n",
       "      <td>10.3</td>\n",
       "      <td>70.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>9.4</td>\n",
       "      <td>194.8</td>\n",
       "      <td>1009.3</td>\n",
       "      <td>41.4</td>\n",
       "      <td>21.7</td>\n",
       "      <td>177.8</td>\n",
       "      <td>15.5</td>\n",
       "      <td>10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.30</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 94
  },
  {
   "cell_type": "code",
   "id": "050f67ed",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.632756Z",
     "start_time": "2024-08-05T19:27:28.627926Z"
    }
   },
   "source": [
    "max(df_london.index)+pd.Timedelta(days=1)"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Timestamp('2024-05-21 00:00:00')"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 95
  },
  {
   "cell_type": "code",
   "id": "c5f66fb3",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.638120Z",
     "start_time": "2024-08-05T19:27:28.633962Z"
    }
   },
   "source": [
    "df_london_final = pd.concat([df_london_eng, last_three], ignore_index=True)"
   ],
   "outputs": [],
   "execution_count": 96
  },
  {
   "cell_type": "code",
   "id": "f1b958a1",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.645722Z",
     "start_time": "2024-08-05T19:27:28.639462Z"
    }
   },
   "source": [
    "df_london_final = df_london_final.set_index(pd.date_range(start=min(df_london.index), periods=len(df_london)+3, freq='D'))"
   ],
   "outputs": [],
   "execution_count": 97
  },
  {
   "cell_type": "code",
   "id": "fc3ce0be",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.663971Z",
     "start_time": "2024-08-05T19:27:28.647171Z"
    }
   },
   "source": [
    "df_london_final.tail()"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "            temp   dew  humidity  precip  precipprob  precipcover  snow  \\\n",
       "2024-05-19  16.6  12.4      89.1  10.126       100.0        20.83   0.0   \n",
       "2024-05-20  15.1  10.3      70.2   0.000         0.0         0.00   0.0   \n",
       "2024-05-21   NaN  10.5      69.7   0.797       100.0         8.33   0.0   \n",
       "2024-05-22   NaN  12.4      89.1  10.126       100.0        20.83   0.0   \n",
       "2024-05-23   NaN  10.3      70.2   0.000         0.0         0.00   0.0   \n",
       "\n",
       "            snowdepth  windgust  windspeed  winddir  sealevelpressure  \\\n",
       "2024-05-19        0.0      18.4       10.1    213.9            1005.2   \n",
       "2024-05-20        0.0      17.4        9.4    194.8            1009.3   \n",
       "2024-05-21        0.0      25.0       15.2    147.1            1004.2   \n",
       "2024-05-22        0.0      18.4       10.1    213.9            1005.2   \n",
       "2024-05-23        0.0      17.4        9.4    194.8            1009.3   \n",
       "\n",
       "            cloudcover  visibility  solarradiation  solarenergy  uvindex  \\\n",
       "2024-05-19        58.3        15.8            74.5          6.5      3.0   \n",
       "2024-05-20        41.4        21.7           177.8         15.5     10.0   \n",
       "2024-05-21        52.3        19.4           118.8         10.3      9.0   \n",
       "2024-05-22        58.3        15.8            74.5          6.5      3.0   \n",
       "2024-05-23        41.4        21.7           177.8         15.5     10.0   \n",
       "\n",
       "            severerisk  moonphase  month  clusters_description  \n",
       "2024-05-19        10.0       0.27    5.0                   1.0  \n",
       "2024-05-20        10.0       0.30    5.0                   1.0  \n",
       "2024-05-21        10.0       0.25    5.0                   0.0  \n",
       "2024-05-22        10.0       0.27    5.0                   1.0  \n",
       "2024-05-23        10.0       0.30    5.0                   1.0  "
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>month</th>\n",
       "      <th>clusters_description</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2024-05-19</th>\n",
       "      <td>16.6</td>\n",
       "      <td>12.4</td>\n",
       "      <td>89.1</td>\n",
       "      <td>10.126</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.4</td>\n",
       "      <td>10.1</td>\n",
       "      <td>213.9</td>\n",
       "      <td>1005.2</td>\n",
       "      <td>58.3</td>\n",
       "      <td>15.8</td>\n",
       "      <td>74.5</td>\n",
       "      <td>6.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.27</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-20</th>\n",
       "      <td>15.1</td>\n",
       "      <td>10.3</td>\n",
       "      <td>70.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>9.4</td>\n",
       "      <td>194.8</td>\n",
       "      <td>1009.3</td>\n",
       "      <td>41.4</td>\n",
       "      <td>21.7</td>\n",
       "      <td>177.8</td>\n",
       "      <td>15.5</td>\n",
       "      <td>10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.30</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-21</th>\n",
       "      <td>NaN</td>\n",
       "      <td>10.5</td>\n",
       "      <td>69.7</td>\n",
       "      <td>0.797</td>\n",
       "      <td>100.0</td>\n",
       "      <td>8.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>15.2</td>\n",
       "      <td>147.1</td>\n",
       "      <td>1004.2</td>\n",
       "      <td>52.3</td>\n",
       "      <td>19.4</td>\n",
       "      <td>118.8</td>\n",
       "      <td>10.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.25</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-22</th>\n",
       "      <td>NaN</td>\n",
       "      <td>12.4</td>\n",
       "      <td>89.1</td>\n",
       "      <td>10.126</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.4</td>\n",
       "      <td>10.1</td>\n",
       "      <td>213.9</td>\n",
       "      <td>1005.2</td>\n",
       "      <td>58.3</td>\n",
       "      <td>15.8</td>\n",
       "      <td>74.5</td>\n",
       "      <td>6.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.27</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-23</th>\n",
       "      <td>NaN</td>\n",
       "      <td>10.3</td>\n",
       "      <td>70.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>9.4</td>\n",
       "      <td>194.8</td>\n",
       "      <td>1009.3</td>\n",
       "      <td>41.4</td>\n",
       "      <td>21.7</td>\n",
       "      <td>177.8</td>\n",
       "      <td>15.5</td>\n",
       "      <td>10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.30</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 98
  },
  {
   "cell_type": "code",
   "id": "f9df2582",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.667497Z",
     "start_time": "2024-08-05T19:27:28.665348Z"
    }
   },
   "source": [
    "# we've created three new dates with all the lagged features aside from temp, which will be predicted in the next section"
   ],
   "outputs": [],
   "execution_count": 99
  },
  {
   "cell_type": "markdown",
   "id": "e6138067",
   "metadata": {},
   "source": [
    "## train and test split based on the date as it's a time series"
   ]
  },
  {
   "cell_type": "code",
   "id": "069ac083",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.671677Z",
     "start_time": "2024-08-05T19:27:28.669482Z"
    }
   },
   "source": [
    "# because XGBoost is not a time series model (address it as a limitation), i will split the datetime column into days, months and year, so the model can learn which temperature is related to the May month and which temperature is related to the December month, as it learns accross multiple years"
   ],
   "outputs": [],
   "execution_count": 100
  },
  {
   "cell_type": "code",
   "id": "414c3844",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.677576Z",
     "start_time": "2024-08-05T19:27:28.673309Z"
    }
   },
   "source": [
    "df_london_final['month'] = df_london_final.index.month\n",
    "df_london_final['year'] = df_london_final.index.year"
   ],
   "outputs": [],
   "execution_count": 101
  },
  {
   "cell_type": "code",
   "id": "668ee7dd",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.685576Z",
     "start_time": "2024-08-05T19:27:28.679252Z"
    }
   },
   "source": [
    "df_dummies = pd.get_dummies(df_london_final['month'], prefix='month')"
   ],
   "outputs": [],
   "execution_count": 102
  },
  {
   "cell_type": "code",
   "id": "a95722e9",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.694048Z",
     "start_time": "2024-08-05T19:27:28.687248Z"
    }
   },
   "source": [
    "df_london_final = pd.concat([df_london_final, df_dummies], axis=1)\n",
    "df_london_final.drop(columns=['month'], inplace=True)"
   ],
   "outputs": [],
   "execution_count": 103
  },
  {
   "cell_type": "code",
   "id": "a6e3bd60",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.710630Z",
     "start_time": "2024-08-05T19:27:28.695320Z"
    }
   },
   "source": [
    "df_london_final"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "            temp   dew  humidity  precip  precipprob  precipcover  snow  \\\n",
       "2014-01-01   9.1   NaN       NaN     NaN         NaN          NaN   NaN   \n",
       "2014-01-02   9.1   NaN       NaN     NaN         NaN          NaN   NaN   \n",
       "2014-01-03   9.0   NaN       NaN     NaN         NaN          NaN   NaN   \n",
       "2014-01-04   8.0   6.7      84.8  11.857       100.0        16.67   0.0   \n",
       "2014-01-05   6.0   6.0      81.0   5.394       100.0        12.50   0.0   \n",
       "...          ...   ...       ...     ...         ...          ...   ...   \n",
       "2024-05-19  16.6  12.4      89.1  10.126       100.0        20.83   0.0   \n",
       "2024-05-20  15.1  10.3      70.2   0.000         0.0         0.00   0.0   \n",
       "2024-05-21   NaN  10.5      69.7   0.797       100.0         8.33   0.0   \n",
       "2024-05-22   NaN  12.4      89.1  10.126       100.0        20.83   0.0   \n",
       "2024-05-23   NaN  10.3      70.2   0.000         0.0         0.00   0.0   \n",
       "\n",
       "            snowdepth  windgust  windspeed  winddir  sealevelpressure  \\\n",
       "2014-01-01        NaN       NaN        NaN      NaN               NaN   \n",
       "2014-01-02        NaN       NaN        NaN      NaN               NaN   \n",
       "2014-01-03        NaN       NaN        NaN      NaN               NaN   \n",
       "2014-01-04        0.0      72.4       38.4    190.5             993.1   \n",
       "2014-01-05        0.0      51.8       29.8    216.2             993.4   \n",
       "...               ...       ...        ...      ...               ...   \n",
       "2024-05-19        0.0      18.4       10.1    213.9            1005.2   \n",
       "2024-05-20        0.0      17.4        9.4    194.8            1009.3   \n",
       "2024-05-21        0.0      25.0       15.2    147.1            1004.2   \n",
       "2024-05-22        0.0      18.4       10.1    213.9            1005.2   \n",
       "2024-05-23        0.0      17.4        9.4    194.8            1009.3   \n",
       "\n",
       "            cloudcover  visibility  solarradiation  solarenergy  uvindex  \\\n",
       "2014-01-01         NaN         NaN             NaN          NaN      NaN   \n",
       "2014-01-02         NaN         NaN             NaN          NaN      NaN   \n",
       "2014-01-03         NaN         NaN             NaN          NaN      NaN   \n",
       "2014-01-04        67.4        14.2             6.9          0.5      0.0   \n",
       "2014-01-05        47.4        26.7            38.3          3.3      2.0   \n",
       "...                ...         ...             ...          ...      ...   \n",
       "2024-05-19        58.3        15.8            74.5          6.5      3.0   \n",
       "2024-05-20        41.4        21.7           177.8         15.5     10.0   \n",
       "2024-05-21        52.3        19.4           118.8         10.3      9.0   \n",
       "2024-05-22        58.3        15.8            74.5          6.5      3.0   \n",
       "2024-05-23        41.4        21.7           177.8         15.5     10.0   \n",
       "\n",
       "            severerisk  moonphase  clusters_description  year  month_1  \\\n",
       "2014-01-01         NaN        NaN                   NaN  2014     True   \n",
       "2014-01-02         NaN        NaN                   NaN  2014     True   \n",
       "2014-01-03         NaN        NaN                   NaN  2014     True   \n",
       "2014-01-04        10.0       0.00                   1.0  2014     True   \n",
       "2014-01-05        10.0       0.03                   1.0  2014     True   \n",
       "...                ...        ...                   ...   ...      ...   \n",
       "2024-05-19        10.0       0.27                   1.0  2024    False   \n",
       "2024-05-20        10.0       0.30                   1.0  2024    False   \n",
       "2024-05-21        10.0       0.25                   0.0  2024    False   \n",
       "2024-05-22        10.0       0.27                   1.0  2024    False   \n",
       "2024-05-23        10.0       0.30                   1.0  2024    False   \n",
       "\n",
       "            month_2  month_3  month_4  month_5  month_6  month_7  month_8  \\\n",
       "2014-01-01    False    False    False    False    False    False    False   \n",
       "2014-01-02    False    False    False    False    False    False    False   \n",
       "2014-01-03    False    False    False    False    False    False    False   \n",
       "2014-01-04    False    False    False    False    False    False    False   \n",
       "2014-01-05    False    False    False    False    False    False    False   \n",
       "...             ...      ...      ...      ...      ...      ...      ...   \n",
       "2024-05-19    False    False    False     True    False    False    False   \n",
       "2024-05-20    False    False    False     True    False    False    False   \n",
       "2024-05-21    False    False    False     True    False    False    False   \n",
       "2024-05-22    False    False    False     True    False    False    False   \n",
       "2024-05-23    False    False    False     True    False    False    False   \n",
       "\n",
       "            month_9  month_10  month_11  month_12  \n",
       "2014-01-01    False     False     False     False  \n",
       "2014-01-02    False     False     False     False  \n",
       "2014-01-03    False     False     False     False  \n",
       "2014-01-04    False     False     False     False  \n",
       "2014-01-05    False     False     False     False  \n",
       "...             ...       ...       ...       ...  \n",
       "2024-05-19    False     False     False     False  \n",
       "2024-05-20    False     False     False     False  \n",
       "2024-05-21    False     False     False     False  \n",
       "2024-05-22    False     False     False     False  \n",
       "2024-05-23    False     False     False     False  \n",
       "\n",
       "[3796 rows x 33 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>clusters_description</th>\n",
       "      <th>year</th>\n",
       "      <th>month_1</th>\n",
       "      <th>month_2</th>\n",
       "      <th>month_3</th>\n",
       "      <th>month_4</th>\n",
       "      <th>month_5</th>\n",
       "      <th>month_6</th>\n",
       "      <th>month_7</th>\n",
       "      <th>month_8</th>\n",
       "      <th>month_9</th>\n",
       "      <th>month_10</th>\n",
       "      <th>month_11</th>\n",
       "      <th>month_12</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2014-01-01</th>\n",
       "      <td>9.1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2014</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-02</th>\n",
       "      <td>9.1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2014</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-03</th>\n",
       "      <td>9.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2014</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-04</th>\n",
       "      <td>8.0</td>\n",
       "      <td>6.7</td>\n",
       "      <td>84.8</td>\n",
       "      <td>11.857</td>\n",
       "      <td>100.0</td>\n",
       "      <td>16.67</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>72.4</td>\n",
       "      <td>38.4</td>\n",
       "      <td>190.5</td>\n",
       "      <td>993.1</td>\n",
       "      <td>67.4</td>\n",
       "      <td>14.2</td>\n",
       "      <td>6.9</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-05</th>\n",
       "      <td>6.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>81.0</td>\n",
       "      <td>5.394</td>\n",
       "      <td>100.0</td>\n",
       "      <td>12.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>51.8</td>\n",
       "      <td>29.8</td>\n",
       "      <td>216.2</td>\n",
       "      <td>993.4</td>\n",
       "      <td>47.4</td>\n",
       "      <td>26.7</td>\n",
       "      <td>38.3</td>\n",
       "      <td>3.3</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-19</th>\n",
       "      <td>16.6</td>\n",
       "      <td>12.4</td>\n",
       "      <td>89.1</td>\n",
       "      <td>10.126</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.4</td>\n",
       "      <td>10.1</td>\n",
       "      <td>213.9</td>\n",
       "      <td>1005.2</td>\n",
       "      <td>58.3</td>\n",
       "      <td>15.8</td>\n",
       "      <td>74.5</td>\n",
       "      <td>6.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.27</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-20</th>\n",
       "      <td>15.1</td>\n",
       "      <td>10.3</td>\n",
       "      <td>70.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>9.4</td>\n",
       "      <td>194.8</td>\n",
       "      <td>1009.3</td>\n",
       "      <td>41.4</td>\n",
       "      <td>21.7</td>\n",
       "      <td>177.8</td>\n",
       "      <td>15.5</td>\n",
       "      <td>10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.30</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-21</th>\n",
       "      <td>NaN</td>\n",
       "      <td>10.5</td>\n",
       "      <td>69.7</td>\n",
       "      <td>0.797</td>\n",
       "      <td>100.0</td>\n",
       "      <td>8.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>15.2</td>\n",
       "      <td>147.1</td>\n",
       "      <td>1004.2</td>\n",
       "      <td>52.3</td>\n",
       "      <td>19.4</td>\n",
       "      <td>118.8</td>\n",
       "      <td>10.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-22</th>\n",
       "      <td>NaN</td>\n",
       "      <td>12.4</td>\n",
       "      <td>89.1</td>\n",
       "      <td>10.126</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.4</td>\n",
       "      <td>10.1</td>\n",
       "      <td>213.9</td>\n",
       "      <td>1005.2</td>\n",
       "      <td>58.3</td>\n",
       "      <td>15.8</td>\n",
       "      <td>74.5</td>\n",
       "      <td>6.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.27</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-23</th>\n",
       "      <td>NaN</td>\n",
       "      <td>10.3</td>\n",
       "      <td>70.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>9.4</td>\n",
       "      <td>194.8</td>\n",
       "      <td>1009.3</td>\n",
       "      <td>41.4</td>\n",
       "      <td>21.7</td>\n",
       "      <td>177.8</td>\n",
       "      <td>15.5</td>\n",
       "      <td>10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.30</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3796 rows × 33 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 104
  },
  {
   "cell_type": "code",
   "id": "2a538367",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.713961Z",
     "start_time": "2024-08-05T19:27:28.711505Z"
    }
   },
   "source": [
    "df_train = df_london_final.iloc[:-368] #training set - takes the last 368 days\n",
    "df_test = df_london_final.iloc[-368:-3] #test set - takes the last 368 - the last 3 days for preds\n",
    "df_future =  df_london_final.iloc[-3:] #future dataframe that contains the predictions that we will generate but right now jas just the features"
   ],
   "outputs": [],
   "execution_count": 105
  },
  {
   "cell_type": "code",
   "id": "e34e99ad-e9be-4606-b993-d71080130bd2",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.727958Z",
     "start_time": "2024-08-05T19:27:28.714594Z"
    }
   },
   "source": [
    "df_train.tail()"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "            temp  dew  humidity  precip  precipprob  precipcover  snow  \\\n",
       "2023-05-17  13.7  8.1      69.3   0.000         0.0         0.00   0.0   \n",
       "2023-05-18  14.6  5.8      60.6   2.989       100.0        20.83   0.0   \n",
       "2023-05-19  13.7  5.0      59.5   0.000         0.0         0.00   0.0   \n",
       "2023-05-20  14.3  7.4      66.7   0.000         0.0         0.00   0.0   \n",
       "2023-05-21  14.4  7.1      61.6   0.000         0.0         0.00   0.0   \n",
       "\n",
       "            snowdepth  windgust  windspeed  winddir  sealevelpressure  \\\n",
       "2023-05-17        0.0      21.5       16.0    307.8            1020.7   \n",
       "2023-05-18        0.0      41.3       22.9    353.1            1019.9   \n",
       "2023-05-19        0.0      34.2       18.1    329.3            1024.9   \n",
       "2023-05-20        0.0      20.5       17.7     16.7            1028.2   \n",
       "2023-05-21        0.0      24.1       16.0     92.8            1028.0   \n",
       "\n",
       "            cloudcover  visibility  solarradiation  solarenergy  uvindex  \\\n",
       "2023-05-17        65.4        18.3           152.2         13.2      8.0   \n",
       "2023-05-18        57.3        38.2           134.8         11.6      5.0   \n",
       "2023-05-19        25.6        27.6           203.8         17.7      9.0   \n",
       "2023-05-20        38.6        23.2           147.4         12.7      7.0   \n",
       "2023-05-21        52.3        26.6           161.9         13.9      7.0   \n",
       "\n",
       "            severerisk  moonphase  clusters_description  year  month_1  \\\n",
       "2023-05-17        10.0       0.81                   2.0  2023    False   \n",
       "2023-05-18        10.0       0.85                   1.0  2023    False   \n",
       "2023-05-19        10.0       0.88                   2.0  2023    False   \n",
       "2023-05-20        10.0       0.92                   1.0  2023    False   \n",
       "2023-05-21        10.0       0.96                   2.0  2023    False   \n",
       "\n",
       "            month_2  month_3  month_4  month_5  month_6  month_7  month_8  \\\n",
       "2023-05-17    False    False    False     True    False    False    False   \n",
       "2023-05-18    False    False    False     True    False    False    False   \n",
       "2023-05-19    False    False    False     True    False    False    False   \n",
       "2023-05-20    False    False    False     True    False    False    False   \n",
       "2023-05-21    False    False    False     True    False    False    False   \n",
       "\n",
       "            month_9  month_10  month_11  month_12  \n",
       "2023-05-17    False     False     False     False  \n",
       "2023-05-18    False     False     False     False  \n",
       "2023-05-19    False     False     False     False  \n",
       "2023-05-20    False     False     False     False  \n",
       "2023-05-21    False     False     False     False  "
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>clusters_description</th>\n",
       "      <th>year</th>\n",
       "      <th>month_1</th>\n",
       "      <th>month_2</th>\n",
       "      <th>month_3</th>\n",
       "      <th>month_4</th>\n",
       "      <th>month_5</th>\n",
       "      <th>month_6</th>\n",
       "      <th>month_7</th>\n",
       "      <th>month_8</th>\n",
       "      <th>month_9</th>\n",
       "      <th>month_10</th>\n",
       "      <th>month_11</th>\n",
       "      <th>month_12</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2023-05-17</th>\n",
       "      <td>13.7</td>\n",
       "      <td>8.1</td>\n",
       "      <td>69.3</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>21.5</td>\n",
       "      <td>16.0</td>\n",
       "      <td>307.8</td>\n",
       "      <td>1020.7</td>\n",
       "      <td>65.4</td>\n",
       "      <td>18.3</td>\n",
       "      <td>152.2</td>\n",
       "      <td>13.2</td>\n",
       "      <td>8.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.81</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-18</th>\n",
       "      <td>14.6</td>\n",
       "      <td>5.8</td>\n",
       "      <td>60.6</td>\n",
       "      <td>2.989</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>41.3</td>\n",
       "      <td>22.9</td>\n",
       "      <td>353.1</td>\n",
       "      <td>1019.9</td>\n",
       "      <td>57.3</td>\n",
       "      <td>38.2</td>\n",
       "      <td>134.8</td>\n",
       "      <td>11.6</td>\n",
       "      <td>5.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.85</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-19</th>\n",
       "      <td>13.7</td>\n",
       "      <td>5.0</td>\n",
       "      <td>59.5</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>34.2</td>\n",
       "      <td>18.1</td>\n",
       "      <td>329.3</td>\n",
       "      <td>1024.9</td>\n",
       "      <td>25.6</td>\n",
       "      <td>27.6</td>\n",
       "      <td>203.8</td>\n",
       "      <td>17.7</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.88</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-20</th>\n",
       "      <td>14.3</td>\n",
       "      <td>7.4</td>\n",
       "      <td>66.7</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.5</td>\n",
       "      <td>17.7</td>\n",
       "      <td>16.7</td>\n",
       "      <td>1028.2</td>\n",
       "      <td>38.6</td>\n",
       "      <td>23.2</td>\n",
       "      <td>147.4</td>\n",
       "      <td>12.7</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.92</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-21</th>\n",
       "      <td>14.4</td>\n",
       "      <td>7.1</td>\n",
       "      <td>61.6</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>24.1</td>\n",
       "      <td>16.0</td>\n",
       "      <td>92.8</td>\n",
       "      <td>1028.0</td>\n",
       "      <td>52.3</td>\n",
       "      <td>26.6</td>\n",
       "      <td>161.9</td>\n",
       "      <td>13.9</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.96</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 106
  },
  {
   "cell_type": "code",
   "id": "732c3b2a-a7ca-4a67-b817-d033e5e52c8d",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.738155Z",
     "start_time": "2024-08-05T19:27:28.728877Z"
    }
   },
   "source": [
    "df_test.head()"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "            temp  dew  humidity  precip  precipprob  precipcover  snow  \\\n",
       "2023-05-22  15.1  6.9      64.3     0.0         0.0          0.0   0.0   \n",
       "2023-05-23  14.0  6.1      60.6     0.0         0.0          0.0   0.0   \n",
       "2023-05-24  15.8  6.7      61.2     0.0         0.0          0.0   0.0   \n",
       "2023-05-25  15.0  6.7      57.9     0.0         0.0          0.0   0.0   \n",
       "2023-05-26  14.2  6.9      63.5     0.0         0.0          0.0   0.0   \n",
       "\n",
       "            snowdepth  windgust  windspeed  winddir  sealevelpressure  \\\n",
       "2023-05-22        0.0      26.1       17.5     61.3            1027.2   \n",
       "2023-05-23        0.0      36.4       21.3     40.6            1025.3   \n",
       "2023-05-24        0.0      34.7       20.0     30.7            1021.7   \n",
       "2023-05-25        0.0      41.5       23.9     12.1            1021.2   \n",
       "2023-05-26        0.0      26.1       17.3     36.0            1026.5   \n",
       "\n",
       "            cloudcover  visibility  solarradiation  solarenergy  uvindex  \\\n",
       "2023-05-22        55.6        27.2            99.0          8.7      4.0   \n",
       "2023-05-23        40.0        27.5           192.2         16.3      9.0   \n",
       "2023-05-24        43.9        35.0           156.4         13.6      7.0   \n",
       "2023-05-25        62.5        37.2            80.0          7.0      3.0   \n",
       "2023-05-26        27.0        29.2           147.4         12.5      7.0   \n",
       "\n",
       "            severerisk  moonphase  clusters_description  year  month_1  \\\n",
       "2023-05-22        10.0       0.00                   1.0  2023    False   \n",
       "2023-05-23        10.0       0.03                   1.0  2023    False   \n",
       "2023-05-24        10.0       0.06                   1.0  2023    False   \n",
       "2023-05-25        10.0       0.09                   1.0  2023    False   \n",
       "2023-05-26        10.0       0.12                   2.0  2023    False   \n",
       "\n",
       "            month_2  month_3  month_4  month_5  month_6  month_7  month_8  \\\n",
       "2023-05-22    False    False    False     True    False    False    False   \n",
       "2023-05-23    False    False    False     True    False    False    False   \n",
       "2023-05-24    False    False    False     True    False    False    False   \n",
       "2023-05-25    False    False    False     True    False    False    False   \n",
       "2023-05-26    False    False    False     True    False    False    False   \n",
       "\n",
       "            month_9  month_10  month_11  month_12  \n",
       "2023-05-22    False     False     False     False  \n",
       "2023-05-23    False     False     False     False  \n",
       "2023-05-24    False     False     False     False  \n",
       "2023-05-25    False     False     False     False  \n",
       "2023-05-26    False     False     False     False  "
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>clusters_description</th>\n",
       "      <th>year</th>\n",
       "      <th>month_1</th>\n",
       "      <th>month_2</th>\n",
       "      <th>month_3</th>\n",
       "      <th>month_4</th>\n",
       "      <th>month_5</th>\n",
       "      <th>month_6</th>\n",
       "      <th>month_7</th>\n",
       "      <th>month_8</th>\n",
       "      <th>month_9</th>\n",
       "      <th>month_10</th>\n",
       "      <th>month_11</th>\n",
       "      <th>month_12</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2023-05-22</th>\n",
       "      <td>15.1</td>\n",
       "      <td>6.9</td>\n",
       "      <td>64.3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.1</td>\n",
       "      <td>17.5</td>\n",
       "      <td>61.3</td>\n",
       "      <td>1027.2</td>\n",
       "      <td>55.6</td>\n",
       "      <td>27.2</td>\n",
       "      <td>99.0</td>\n",
       "      <td>8.7</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-23</th>\n",
       "      <td>14.0</td>\n",
       "      <td>6.1</td>\n",
       "      <td>60.6</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>36.4</td>\n",
       "      <td>21.3</td>\n",
       "      <td>40.6</td>\n",
       "      <td>1025.3</td>\n",
       "      <td>40.0</td>\n",
       "      <td>27.5</td>\n",
       "      <td>192.2</td>\n",
       "      <td>16.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-24</th>\n",
       "      <td>15.8</td>\n",
       "      <td>6.7</td>\n",
       "      <td>61.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>34.7</td>\n",
       "      <td>20.0</td>\n",
       "      <td>30.7</td>\n",
       "      <td>1021.7</td>\n",
       "      <td>43.9</td>\n",
       "      <td>35.0</td>\n",
       "      <td>156.4</td>\n",
       "      <td>13.6</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-25</th>\n",
       "      <td>15.0</td>\n",
       "      <td>6.7</td>\n",
       "      <td>57.9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>41.5</td>\n",
       "      <td>23.9</td>\n",
       "      <td>12.1</td>\n",
       "      <td>1021.2</td>\n",
       "      <td>62.5</td>\n",
       "      <td>37.2</td>\n",
       "      <td>80.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.09</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-26</th>\n",
       "      <td>14.2</td>\n",
       "      <td>6.9</td>\n",
       "      <td>63.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.1</td>\n",
       "      <td>17.3</td>\n",
       "      <td>36.0</td>\n",
       "      <td>1026.5</td>\n",
       "      <td>27.0</td>\n",
       "      <td>29.2</td>\n",
       "      <td>147.4</td>\n",
       "      <td>12.5</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.12</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 107
  },
  {
   "cell_type": "code",
   "id": "561d9edc-b6cd-4c90-91de-4c58da55adfd",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.748882Z",
     "start_time": "2024-08-05T19:27:28.738787Z"
    }
   },
   "source": [
    "df_test.tail()"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "            temp   dew  humidity  precip  precipprob  precipcover  snow  \\\n",
       "2024-05-16  14.2  11.0      73.4   0.000         0.0         0.00   0.0   \n",
       "2024-05-17  16.4  11.7      77.8   3.598       100.0        33.33   0.0   \n",
       "2024-05-18  15.8  10.5      69.7   0.797       100.0         8.33   0.0   \n",
       "2024-05-19  16.6  12.4      89.1  10.126       100.0        20.83   0.0   \n",
       "2024-05-20  15.1  10.3      70.2   0.000         0.0         0.00   0.0   \n",
       "\n",
       "            snowdepth  windgust  windspeed  winddir  sealevelpressure  \\\n",
       "2024-05-16        0.0      35.2       21.0    183.4            1007.1   \n",
       "2024-05-17        0.0      30.5       21.0    149.7            1001.1   \n",
       "2024-05-18        0.0      25.0       15.2    147.1            1004.2   \n",
       "2024-05-19        0.0      18.4       10.1    213.9            1005.2   \n",
       "2024-05-20        0.0      17.4        9.4    194.8            1009.3   \n",
       "\n",
       "            cloudcover  visibility  solarradiation  solarenergy  uvindex  \\\n",
       "2024-05-16        86.1        14.9            71.5          6.2      2.0   \n",
       "2024-05-17        85.6        15.4            76.1          6.5      4.0   \n",
       "2024-05-18        52.3        19.4           118.8         10.3      9.0   \n",
       "2024-05-19        58.3        15.8            74.5          6.5      3.0   \n",
       "2024-05-20        41.4        21.7           177.8         15.5     10.0   \n",
       "\n",
       "            severerisk  moonphase  clusters_description  year  month_1  \\\n",
       "2024-05-16        10.0       0.17                   1.0  2024    False   \n",
       "2024-05-17        10.0       0.20                   1.0  2024    False   \n",
       "2024-05-18        10.0       0.25                   0.0  2024    False   \n",
       "2024-05-19        10.0       0.27                   1.0  2024    False   \n",
       "2024-05-20        10.0       0.30                   1.0  2024    False   \n",
       "\n",
       "            month_2  month_3  month_4  month_5  month_6  month_7  month_8  \\\n",
       "2024-05-16    False    False    False     True    False    False    False   \n",
       "2024-05-17    False    False    False     True    False    False    False   \n",
       "2024-05-18    False    False    False     True    False    False    False   \n",
       "2024-05-19    False    False    False     True    False    False    False   \n",
       "2024-05-20    False    False    False     True    False    False    False   \n",
       "\n",
       "            month_9  month_10  month_11  month_12  \n",
       "2024-05-16    False     False     False     False  \n",
       "2024-05-17    False     False     False     False  \n",
       "2024-05-18    False     False     False     False  \n",
       "2024-05-19    False     False     False     False  \n",
       "2024-05-20    False     False     False     False  "
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>clusters_description</th>\n",
       "      <th>year</th>\n",
       "      <th>month_1</th>\n",
       "      <th>month_2</th>\n",
       "      <th>month_3</th>\n",
       "      <th>month_4</th>\n",
       "      <th>month_5</th>\n",
       "      <th>month_6</th>\n",
       "      <th>month_7</th>\n",
       "      <th>month_8</th>\n",
       "      <th>month_9</th>\n",
       "      <th>month_10</th>\n",
       "      <th>month_11</th>\n",
       "      <th>month_12</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2024-05-16</th>\n",
       "      <td>14.2</td>\n",
       "      <td>11.0</td>\n",
       "      <td>73.4</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>35.2</td>\n",
       "      <td>21.0</td>\n",
       "      <td>183.4</td>\n",
       "      <td>1007.1</td>\n",
       "      <td>86.1</td>\n",
       "      <td>14.9</td>\n",
       "      <td>71.5</td>\n",
       "      <td>6.2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.17</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-17</th>\n",
       "      <td>16.4</td>\n",
       "      <td>11.7</td>\n",
       "      <td>77.8</td>\n",
       "      <td>3.598</td>\n",
       "      <td>100.0</td>\n",
       "      <td>33.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.5</td>\n",
       "      <td>21.0</td>\n",
       "      <td>149.7</td>\n",
       "      <td>1001.1</td>\n",
       "      <td>85.6</td>\n",
       "      <td>15.4</td>\n",
       "      <td>76.1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.20</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-18</th>\n",
       "      <td>15.8</td>\n",
       "      <td>10.5</td>\n",
       "      <td>69.7</td>\n",
       "      <td>0.797</td>\n",
       "      <td>100.0</td>\n",
       "      <td>8.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>15.2</td>\n",
       "      <td>147.1</td>\n",
       "      <td>1004.2</td>\n",
       "      <td>52.3</td>\n",
       "      <td>19.4</td>\n",
       "      <td>118.8</td>\n",
       "      <td>10.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-19</th>\n",
       "      <td>16.6</td>\n",
       "      <td>12.4</td>\n",
       "      <td>89.1</td>\n",
       "      <td>10.126</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.4</td>\n",
       "      <td>10.1</td>\n",
       "      <td>213.9</td>\n",
       "      <td>1005.2</td>\n",
       "      <td>58.3</td>\n",
       "      <td>15.8</td>\n",
       "      <td>74.5</td>\n",
       "      <td>6.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.27</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-20</th>\n",
       "      <td>15.1</td>\n",
       "      <td>10.3</td>\n",
       "      <td>70.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>9.4</td>\n",
       "      <td>194.8</td>\n",
       "      <td>1009.3</td>\n",
       "      <td>41.4</td>\n",
       "      <td>21.7</td>\n",
       "      <td>177.8</td>\n",
       "      <td>15.5</td>\n",
       "      <td>10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.30</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ]
     },
     "execution_count": 108,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 108
  },
  {
   "cell_type": "code",
   "id": "7b8a28ef-c34c-4cd3-b310-a533c11d9217",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.759965Z",
     "start_time": "2024-08-05T19:27:28.749630Z"
    }
   },
   "source": [
    "df_future"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "            temp   dew  humidity  precip  precipprob  precipcover  snow  \\\n",
       "2024-05-21   NaN  10.5      69.7   0.797       100.0         8.33   0.0   \n",
       "2024-05-22   NaN  12.4      89.1  10.126       100.0        20.83   0.0   \n",
       "2024-05-23   NaN  10.3      70.2   0.000         0.0         0.00   0.0   \n",
       "\n",
       "            snowdepth  windgust  windspeed  winddir  sealevelpressure  \\\n",
       "2024-05-21        0.0      25.0       15.2    147.1            1004.2   \n",
       "2024-05-22        0.0      18.4       10.1    213.9            1005.2   \n",
       "2024-05-23        0.0      17.4        9.4    194.8            1009.3   \n",
       "\n",
       "            cloudcover  visibility  solarradiation  solarenergy  uvindex  \\\n",
       "2024-05-21        52.3        19.4           118.8         10.3      9.0   \n",
       "2024-05-22        58.3        15.8            74.5          6.5      3.0   \n",
       "2024-05-23        41.4        21.7           177.8         15.5     10.0   \n",
       "\n",
       "            severerisk  moonphase  clusters_description  year  month_1  \\\n",
       "2024-05-21        10.0       0.25                   0.0  2024    False   \n",
       "2024-05-22        10.0       0.27                   1.0  2024    False   \n",
       "2024-05-23        10.0       0.30                   1.0  2024    False   \n",
       "\n",
       "            month_2  month_3  month_4  month_5  month_6  month_7  month_8  \\\n",
       "2024-05-21    False    False    False     True    False    False    False   \n",
       "2024-05-22    False    False    False     True    False    False    False   \n",
       "2024-05-23    False    False    False     True    False    False    False   \n",
       "\n",
       "            month_9  month_10  month_11  month_12  \n",
       "2024-05-21    False     False     False     False  \n",
       "2024-05-22    False     False     False     False  \n",
       "2024-05-23    False     False     False     False  "
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>clusters_description</th>\n",
       "      <th>year</th>\n",
       "      <th>month_1</th>\n",
       "      <th>month_2</th>\n",
       "      <th>month_3</th>\n",
       "      <th>month_4</th>\n",
       "      <th>month_5</th>\n",
       "      <th>month_6</th>\n",
       "      <th>month_7</th>\n",
       "      <th>month_8</th>\n",
       "      <th>month_9</th>\n",
       "      <th>month_10</th>\n",
       "      <th>month_11</th>\n",
       "      <th>month_12</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2024-05-21</th>\n",
       "      <td>NaN</td>\n",
       "      <td>10.5</td>\n",
       "      <td>69.7</td>\n",
       "      <td>0.797</td>\n",
       "      <td>100.0</td>\n",
       "      <td>8.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>15.2</td>\n",
       "      <td>147.1</td>\n",
       "      <td>1004.2</td>\n",
       "      <td>52.3</td>\n",
       "      <td>19.4</td>\n",
       "      <td>118.8</td>\n",
       "      <td>10.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-22</th>\n",
       "      <td>NaN</td>\n",
       "      <td>12.4</td>\n",
       "      <td>89.1</td>\n",
       "      <td>10.126</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.4</td>\n",
       "      <td>10.1</td>\n",
       "      <td>213.9</td>\n",
       "      <td>1005.2</td>\n",
       "      <td>58.3</td>\n",
       "      <td>15.8</td>\n",
       "      <td>74.5</td>\n",
       "      <td>6.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.27</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-23</th>\n",
       "      <td>NaN</td>\n",
       "      <td>10.3</td>\n",
       "      <td>70.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>9.4</td>\n",
       "      <td>194.8</td>\n",
       "      <td>1009.3</td>\n",
       "      <td>41.4</td>\n",
       "      <td>21.7</td>\n",
       "      <td>177.8</td>\n",
       "      <td>15.5</td>\n",
       "      <td>10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.30</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 109
  },
  {
   "cell_type": "code",
   "id": "49357678",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.764642Z",
     "start_time": "2024-08-05T19:27:28.761211Z"
    }
   },
   "source": [
    "df_train.head()\n",
    "df_train.dropna(inplace=True)"
   ],
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/3v/rnm1bg295jq6crrdqwt_791c0000gp/T/ipykernel_10093/980918956.py:2: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  df_train.dropna(inplace=True)\n"
     ]
    }
   ],
   "execution_count": 110
  },
  {
   "cell_type": "code",
   "id": "48255e55",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.777720Z",
     "start_time": "2024-08-05T19:27:28.765266Z"
    }
   },
   "source": [
    "df_train"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "            temp  dew  humidity  precip  precipprob  precipcover  snow  \\\n",
       "2014-01-04   8.0  6.7      84.8  11.857       100.0        16.67   0.0   \n",
       "2014-01-05   6.0  6.0      81.0   5.394       100.0        12.50   0.0   \n",
       "2014-01-06  11.6  5.1      76.8   6.030       100.0        16.67   0.0   \n",
       "2014-01-07  10.7  5.2      82.4   5.239       100.0        16.67   0.0   \n",
       "2014-01-08   9.6  3.9      85.9   0.201       100.0         8.33   0.0   \n",
       "...          ...  ...       ...     ...         ...          ...   ...   \n",
       "2023-05-17  13.7  8.1      69.3   0.000         0.0         0.00   0.0   \n",
       "2023-05-18  14.6  5.8      60.6   2.989       100.0        20.83   0.0   \n",
       "2023-05-19  13.7  5.0      59.5   0.000         0.0         0.00   0.0   \n",
       "2023-05-20  14.3  7.4      66.7   0.000         0.0         0.00   0.0   \n",
       "2023-05-21  14.4  7.1      61.6   0.000         0.0         0.00   0.0   \n",
       "\n",
       "            snowdepth  windgust  windspeed  winddir  sealevelpressure  \\\n",
       "2014-01-04        0.0      72.4       38.4    190.5             993.1   \n",
       "2014-01-05        0.0      51.8       29.8    216.2             993.4   \n",
       "2014-01-06        0.0      77.4       33.5    218.4             994.5   \n",
       "2014-01-07        0.0      62.1       29.2    206.0             993.6   \n",
       "2014-01-08        0.0      55.6       30.4    192.5            1000.0   \n",
       "...               ...       ...        ...      ...               ...   \n",
       "2023-05-17        0.0      21.5       16.0    307.8            1020.7   \n",
       "2023-05-18        0.0      41.3       22.9    353.1            1019.9   \n",
       "2023-05-19        0.0      34.2       18.1    329.3            1024.9   \n",
       "2023-05-20        0.0      20.5       17.7     16.7            1028.2   \n",
       "2023-05-21        0.0      24.1       16.0     92.8            1028.0   \n",
       "\n",
       "            cloudcover  visibility  solarradiation  solarenergy  uvindex  \\\n",
       "2014-01-04        67.4        14.2             6.9          0.5      0.0   \n",
       "2014-01-05        47.4        26.7            38.3          3.3      2.0   \n",
       "2014-01-06        52.8        17.9            30.3          2.8      2.0   \n",
       "2014-01-07        67.6        22.0            17.4          1.4      1.0   \n",
       "2014-01-08        66.5        25.5            30.4          2.6      2.0   \n",
       "...                ...         ...             ...          ...      ...   \n",
       "2023-05-17        65.4        18.3           152.2         13.2      8.0   \n",
       "2023-05-18        57.3        38.2           134.8         11.6      5.0   \n",
       "2023-05-19        25.6        27.6           203.8         17.7      9.0   \n",
       "2023-05-20        38.6        23.2           147.4         12.7      7.0   \n",
       "2023-05-21        52.3        26.6           161.9         13.9      7.0   \n",
       "\n",
       "            severerisk  moonphase  clusters_description  year  month_1  \\\n",
       "2014-01-04        10.0       0.00                   1.0  2014     True   \n",
       "2014-01-05        10.0       0.03                   1.0  2014     True   \n",
       "2014-01-06        10.0       0.07                   1.0  2014     True   \n",
       "2014-01-07        10.0       0.10                   1.0  2014     True   \n",
       "2014-01-08        10.0       0.14                   1.0  2014     True   \n",
       "...                ...        ...                   ...   ...      ...   \n",
       "2023-05-17        10.0       0.81                   2.0  2023    False   \n",
       "2023-05-18        10.0       0.85                   1.0  2023    False   \n",
       "2023-05-19        10.0       0.88                   2.0  2023    False   \n",
       "2023-05-20        10.0       0.92                   1.0  2023    False   \n",
       "2023-05-21        10.0       0.96                   2.0  2023    False   \n",
       "\n",
       "            month_2  month_3  month_4  month_5  month_6  month_7  month_8  \\\n",
       "2014-01-04    False    False    False    False    False    False    False   \n",
       "2014-01-05    False    False    False    False    False    False    False   \n",
       "2014-01-06    False    False    False    False    False    False    False   \n",
       "2014-01-07    False    False    False    False    False    False    False   \n",
       "2014-01-08    False    False    False    False    False    False    False   \n",
       "...             ...      ...      ...      ...      ...      ...      ...   \n",
       "2023-05-17    False    False    False     True    False    False    False   \n",
       "2023-05-18    False    False    False     True    False    False    False   \n",
       "2023-05-19    False    False    False     True    False    False    False   \n",
       "2023-05-20    False    False    False     True    False    False    False   \n",
       "2023-05-21    False    False    False     True    False    False    False   \n",
       "\n",
       "            month_9  month_10  month_11  month_12  \n",
       "2014-01-04    False     False     False     False  \n",
       "2014-01-05    False     False     False     False  \n",
       "2014-01-06    False     False     False     False  \n",
       "2014-01-07    False     False     False     False  \n",
       "2014-01-08    False     False     False     False  \n",
       "...             ...       ...       ...       ...  \n",
       "2023-05-17    False     False     False     False  \n",
       "2023-05-18    False     False     False     False  \n",
       "2023-05-19    False     False     False     False  \n",
       "2023-05-20    False     False     False     False  \n",
       "2023-05-21    False     False     False     False  \n",
       "\n",
       "[3425 rows x 33 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>clusters_description</th>\n",
       "      <th>year</th>\n",
       "      <th>month_1</th>\n",
       "      <th>month_2</th>\n",
       "      <th>month_3</th>\n",
       "      <th>month_4</th>\n",
       "      <th>month_5</th>\n",
       "      <th>month_6</th>\n",
       "      <th>month_7</th>\n",
       "      <th>month_8</th>\n",
       "      <th>month_9</th>\n",
       "      <th>month_10</th>\n",
       "      <th>month_11</th>\n",
       "      <th>month_12</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2014-01-04</th>\n",
       "      <td>8.0</td>\n",
       "      <td>6.7</td>\n",
       "      <td>84.8</td>\n",
       "      <td>11.857</td>\n",
       "      <td>100.0</td>\n",
       "      <td>16.67</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>72.4</td>\n",
       "      <td>38.4</td>\n",
       "      <td>190.5</td>\n",
       "      <td>993.1</td>\n",
       "      <td>67.4</td>\n",
       "      <td>14.2</td>\n",
       "      <td>6.9</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-05</th>\n",
       "      <td>6.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>81.0</td>\n",
       "      <td>5.394</td>\n",
       "      <td>100.0</td>\n",
       "      <td>12.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>51.8</td>\n",
       "      <td>29.8</td>\n",
       "      <td>216.2</td>\n",
       "      <td>993.4</td>\n",
       "      <td>47.4</td>\n",
       "      <td>26.7</td>\n",
       "      <td>38.3</td>\n",
       "      <td>3.3</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-06</th>\n",
       "      <td>11.6</td>\n",
       "      <td>5.1</td>\n",
       "      <td>76.8</td>\n",
       "      <td>6.030</td>\n",
       "      <td>100.0</td>\n",
       "      <td>16.67</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>77.4</td>\n",
       "      <td>33.5</td>\n",
       "      <td>218.4</td>\n",
       "      <td>994.5</td>\n",
       "      <td>52.8</td>\n",
       "      <td>17.9</td>\n",
       "      <td>30.3</td>\n",
       "      <td>2.8</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.07</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-07</th>\n",
       "      <td>10.7</td>\n",
       "      <td>5.2</td>\n",
       "      <td>82.4</td>\n",
       "      <td>5.239</td>\n",
       "      <td>100.0</td>\n",
       "      <td>16.67</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>62.1</td>\n",
       "      <td>29.2</td>\n",
       "      <td>206.0</td>\n",
       "      <td>993.6</td>\n",
       "      <td>67.6</td>\n",
       "      <td>22.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>1.4</td>\n",
       "      <td>1.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.10</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-08</th>\n",
       "      <td>9.6</td>\n",
       "      <td>3.9</td>\n",
       "      <td>85.9</td>\n",
       "      <td>0.201</td>\n",
       "      <td>100.0</td>\n",
       "      <td>8.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>55.6</td>\n",
       "      <td>30.4</td>\n",
       "      <td>192.5</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>66.5</td>\n",
       "      <td>25.5</td>\n",
       "      <td>30.4</td>\n",
       "      <td>2.6</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.14</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-17</th>\n",
       "      <td>13.7</td>\n",
       "      <td>8.1</td>\n",
       "      <td>69.3</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>21.5</td>\n",
       "      <td>16.0</td>\n",
       "      <td>307.8</td>\n",
       "      <td>1020.7</td>\n",
       "      <td>65.4</td>\n",
       "      <td>18.3</td>\n",
       "      <td>152.2</td>\n",
       "      <td>13.2</td>\n",
       "      <td>8.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.81</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-18</th>\n",
       "      <td>14.6</td>\n",
       "      <td>5.8</td>\n",
       "      <td>60.6</td>\n",
       "      <td>2.989</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>41.3</td>\n",
       "      <td>22.9</td>\n",
       "      <td>353.1</td>\n",
       "      <td>1019.9</td>\n",
       "      <td>57.3</td>\n",
       "      <td>38.2</td>\n",
       "      <td>134.8</td>\n",
       "      <td>11.6</td>\n",
       "      <td>5.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.85</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-19</th>\n",
       "      <td>13.7</td>\n",
       "      <td>5.0</td>\n",
       "      <td>59.5</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>34.2</td>\n",
       "      <td>18.1</td>\n",
       "      <td>329.3</td>\n",
       "      <td>1024.9</td>\n",
       "      <td>25.6</td>\n",
       "      <td>27.6</td>\n",
       "      <td>203.8</td>\n",
       "      <td>17.7</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.88</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-20</th>\n",
       "      <td>14.3</td>\n",
       "      <td>7.4</td>\n",
       "      <td>66.7</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.5</td>\n",
       "      <td>17.7</td>\n",
       "      <td>16.7</td>\n",
       "      <td>1028.2</td>\n",
       "      <td>38.6</td>\n",
       "      <td>23.2</td>\n",
       "      <td>147.4</td>\n",
       "      <td>12.7</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.92</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-21</th>\n",
       "      <td>14.4</td>\n",
       "      <td>7.1</td>\n",
       "      <td>61.6</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>24.1</td>\n",
       "      <td>16.0</td>\n",
       "      <td>92.8</td>\n",
       "      <td>1028.0</td>\n",
       "      <td>52.3</td>\n",
       "      <td>26.6</td>\n",
       "      <td>161.9</td>\n",
       "      <td>13.9</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.96</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3425 rows × 33 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 111
  },
  {
   "cell_type": "code",
   "id": "d5ea45e2",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.802525Z",
     "start_time": "2024-08-05T19:27:28.782832Z"
    }
   },
   "source": [
    "df_test"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "            temp   dew  humidity  precip  precipprob  precipcover  snow  \\\n",
       "2023-05-22  15.1   6.9      64.3   0.000         0.0         0.00   0.0   \n",
       "2023-05-23  14.0   6.1      60.6   0.000         0.0         0.00   0.0   \n",
       "2023-05-24  15.8   6.7      61.2   0.000         0.0         0.00   0.0   \n",
       "2023-05-25  15.0   6.7      57.9   0.000         0.0         0.00   0.0   \n",
       "2023-05-26  14.2   6.9      63.5   0.000         0.0         0.00   0.0   \n",
       "...          ...   ...       ...     ...         ...          ...   ...   \n",
       "2024-05-16  14.2  11.0      73.4   0.000         0.0         0.00   0.0   \n",
       "2024-05-17  16.4  11.7      77.8   3.598       100.0        33.33   0.0   \n",
       "2024-05-18  15.8  10.5      69.7   0.797       100.0         8.33   0.0   \n",
       "2024-05-19  16.6  12.4      89.1  10.126       100.0        20.83   0.0   \n",
       "2024-05-20  15.1  10.3      70.2   0.000         0.0         0.00   0.0   \n",
       "\n",
       "            snowdepth  windgust  windspeed  winddir  sealevelpressure  \\\n",
       "2023-05-22        0.0      26.1       17.5     61.3            1027.2   \n",
       "2023-05-23        0.0      36.4       21.3     40.6            1025.3   \n",
       "2023-05-24        0.0      34.7       20.0     30.7            1021.7   \n",
       "2023-05-25        0.0      41.5       23.9     12.1            1021.2   \n",
       "2023-05-26        0.0      26.1       17.3     36.0            1026.5   \n",
       "...               ...       ...        ...      ...               ...   \n",
       "2024-05-16        0.0      35.2       21.0    183.4            1007.1   \n",
       "2024-05-17        0.0      30.5       21.0    149.7            1001.1   \n",
       "2024-05-18        0.0      25.0       15.2    147.1            1004.2   \n",
       "2024-05-19        0.0      18.4       10.1    213.9            1005.2   \n",
       "2024-05-20        0.0      17.4        9.4    194.8            1009.3   \n",
       "\n",
       "            cloudcover  visibility  solarradiation  solarenergy  uvindex  \\\n",
       "2023-05-22        55.6        27.2            99.0          8.7      4.0   \n",
       "2023-05-23        40.0        27.5           192.2         16.3      9.0   \n",
       "2023-05-24        43.9        35.0           156.4         13.6      7.0   \n",
       "2023-05-25        62.5        37.2            80.0          7.0      3.0   \n",
       "2023-05-26        27.0        29.2           147.4         12.5      7.0   \n",
       "...                ...         ...             ...          ...      ...   \n",
       "2024-05-16        86.1        14.9            71.5          6.2      2.0   \n",
       "2024-05-17        85.6        15.4            76.1          6.5      4.0   \n",
       "2024-05-18        52.3        19.4           118.8         10.3      9.0   \n",
       "2024-05-19        58.3        15.8            74.5          6.5      3.0   \n",
       "2024-05-20        41.4        21.7           177.8         15.5     10.0   \n",
       "\n",
       "            severerisk  moonphase  clusters_description  year  month_1  \\\n",
       "2023-05-22        10.0       0.00                   1.0  2023    False   \n",
       "2023-05-23        10.0       0.03                   1.0  2023    False   \n",
       "2023-05-24        10.0       0.06                   1.0  2023    False   \n",
       "2023-05-25        10.0       0.09                   1.0  2023    False   \n",
       "2023-05-26        10.0       0.12                   2.0  2023    False   \n",
       "...                ...        ...                   ...   ...      ...   \n",
       "2024-05-16        10.0       0.17                   1.0  2024    False   \n",
       "2024-05-17        10.0       0.20                   1.0  2024    False   \n",
       "2024-05-18        10.0       0.25                   0.0  2024    False   \n",
       "2024-05-19        10.0       0.27                   1.0  2024    False   \n",
       "2024-05-20        10.0       0.30                   1.0  2024    False   \n",
       "\n",
       "            month_2  month_3  month_4  month_5  month_6  month_7  month_8  \\\n",
       "2023-05-22    False    False    False     True    False    False    False   \n",
       "2023-05-23    False    False    False     True    False    False    False   \n",
       "2023-05-24    False    False    False     True    False    False    False   \n",
       "2023-05-25    False    False    False     True    False    False    False   \n",
       "2023-05-26    False    False    False     True    False    False    False   \n",
       "...             ...      ...      ...      ...      ...      ...      ...   \n",
       "2024-05-16    False    False    False     True    False    False    False   \n",
       "2024-05-17    False    False    False     True    False    False    False   \n",
       "2024-05-18    False    False    False     True    False    False    False   \n",
       "2024-05-19    False    False    False     True    False    False    False   \n",
       "2024-05-20    False    False    False     True    False    False    False   \n",
       "\n",
       "            month_9  month_10  month_11  month_12  \n",
       "2023-05-22    False     False     False     False  \n",
       "2023-05-23    False     False     False     False  \n",
       "2023-05-24    False     False     False     False  \n",
       "2023-05-25    False     False     False     False  \n",
       "2023-05-26    False     False     False     False  \n",
       "...             ...       ...       ...       ...  \n",
       "2024-05-16    False     False     False     False  \n",
       "2024-05-17    False     False     False     False  \n",
       "2024-05-18    False     False     False     False  \n",
       "2024-05-19    False     False     False     False  \n",
       "2024-05-20    False     False     False     False  \n",
       "\n",
       "[365 rows x 33 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>clusters_description</th>\n",
       "      <th>year</th>\n",
       "      <th>month_1</th>\n",
       "      <th>month_2</th>\n",
       "      <th>month_3</th>\n",
       "      <th>month_4</th>\n",
       "      <th>month_5</th>\n",
       "      <th>month_6</th>\n",
       "      <th>month_7</th>\n",
       "      <th>month_8</th>\n",
       "      <th>month_9</th>\n",
       "      <th>month_10</th>\n",
       "      <th>month_11</th>\n",
       "      <th>month_12</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2023-05-22</th>\n",
       "      <td>15.1</td>\n",
       "      <td>6.9</td>\n",
       "      <td>64.3</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.1</td>\n",
       "      <td>17.5</td>\n",
       "      <td>61.3</td>\n",
       "      <td>1027.2</td>\n",
       "      <td>55.6</td>\n",
       "      <td>27.2</td>\n",
       "      <td>99.0</td>\n",
       "      <td>8.7</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-23</th>\n",
       "      <td>14.0</td>\n",
       "      <td>6.1</td>\n",
       "      <td>60.6</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>36.4</td>\n",
       "      <td>21.3</td>\n",
       "      <td>40.6</td>\n",
       "      <td>1025.3</td>\n",
       "      <td>40.0</td>\n",
       "      <td>27.5</td>\n",
       "      <td>192.2</td>\n",
       "      <td>16.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-24</th>\n",
       "      <td>15.8</td>\n",
       "      <td>6.7</td>\n",
       "      <td>61.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>34.7</td>\n",
       "      <td>20.0</td>\n",
       "      <td>30.7</td>\n",
       "      <td>1021.7</td>\n",
       "      <td>43.9</td>\n",
       "      <td>35.0</td>\n",
       "      <td>156.4</td>\n",
       "      <td>13.6</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-25</th>\n",
       "      <td>15.0</td>\n",
       "      <td>6.7</td>\n",
       "      <td>57.9</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>41.5</td>\n",
       "      <td>23.9</td>\n",
       "      <td>12.1</td>\n",
       "      <td>1021.2</td>\n",
       "      <td>62.5</td>\n",
       "      <td>37.2</td>\n",
       "      <td>80.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.09</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-26</th>\n",
       "      <td>14.2</td>\n",
       "      <td>6.9</td>\n",
       "      <td>63.5</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.1</td>\n",
       "      <td>17.3</td>\n",
       "      <td>36.0</td>\n",
       "      <td>1026.5</td>\n",
       "      <td>27.0</td>\n",
       "      <td>29.2</td>\n",
       "      <td>147.4</td>\n",
       "      <td>12.5</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.12</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-16</th>\n",
       "      <td>14.2</td>\n",
       "      <td>11.0</td>\n",
       "      <td>73.4</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>35.2</td>\n",
       "      <td>21.0</td>\n",
       "      <td>183.4</td>\n",
       "      <td>1007.1</td>\n",
       "      <td>86.1</td>\n",
       "      <td>14.9</td>\n",
       "      <td>71.5</td>\n",
       "      <td>6.2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.17</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-17</th>\n",
       "      <td>16.4</td>\n",
       "      <td>11.7</td>\n",
       "      <td>77.8</td>\n",
       "      <td>3.598</td>\n",
       "      <td>100.0</td>\n",
       "      <td>33.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.5</td>\n",
       "      <td>21.0</td>\n",
       "      <td>149.7</td>\n",
       "      <td>1001.1</td>\n",
       "      <td>85.6</td>\n",
       "      <td>15.4</td>\n",
       "      <td>76.1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.20</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-18</th>\n",
       "      <td>15.8</td>\n",
       "      <td>10.5</td>\n",
       "      <td>69.7</td>\n",
       "      <td>0.797</td>\n",
       "      <td>100.0</td>\n",
       "      <td>8.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>15.2</td>\n",
       "      <td>147.1</td>\n",
       "      <td>1004.2</td>\n",
       "      <td>52.3</td>\n",
       "      <td>19.4</td>\n",
       "      <td>118.8</td>\n",
       "      <td>10.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-19</th>\n",
       "      <td>16.6</td>\n",
       "      <td>12.4</td>\n",
       "      <td>89.1</td>\n",
       "      <td>10.126</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.4</td>\n",
       "      <td>10.1</td>\n",
       "      <td>213.9</td>\n",
       "      <td>1005.2</td>\n",
       "      <td>58.3</td>\n",
       "      <td>15.8</td>\n",
       "      <td>74.5</td>\n",
       "      <td>6.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.27</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-20</th>\n",
       "      <td>15.1</td>\n",
       "      <td>10.3</td>\n",
       "      <td>70.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>9.4</td>\n",
       "      <td>194.8</td>\n",
       "      <td>1009.3</td>\n",
       "      <td>41.4</td>\n",
       "      <td>21.7</td>\n",
       "      <td>177.8</td>\n",
       "      <td>15.5</td>\n",
       "      <td>10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.30</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>365 rows × 33 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 112
  },
  {
   "cell_type": "code",
   "id": "38562519",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.805665Z",
     "start_time": "2024-08-05T19:27:28.803834Z"
    }
   },
   "source": [
    "# apply regressor \n",
    "# create the predictions \n",
    "# look R2 and other performance metrics, add in MAE"
   ],
   "outputs": [],
   "execution_count": 113
  },
  {
   "cell_type": "code",
   "id": "d1885d13-4d9b-4b1f-b735-924e068b51f2",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:28.947143Z",
     "start_time": "2024-08-05T19:27:28.933788Z"
    }
   },
   "source": [
    "df_train"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "            temp  dew  humidity  precip  precipprob  precipcover  snow  \\\n",
       "2014-01-04   8.0  6.7      84.8  11.857       100.0        16.67   0.0   \n",
       "2014-01-05   6.0  6.0      81.0   5.394       100.0        12.50   0.0   \n",
       "2014-01-06  11.6  5.1      76.8   6.030       100.0        16.67   0.0   \n",
       "2014-01-07  10.7  5.2      82.4   5.239       100.0        16.67   0.0   \n",
       "2014-01-08   9.6  3.9      85.9   0.201       100.0         8.33   0.0   \n",
       "...          ...  ...       ...     ...         ...          ...   ...   \n",
       "2023-05-17  13.7  8.1      69.3   0.000         0.0         0.00   0.0   \n",
       "2023-05-18  14.6  5.8      60.6   2.989       100.0        20.83   0.0   \n",
       "2023-05-19  13.7  5.0      59.5   0.000         0.0         0.00   0.0   \n",
       "2023-05-20  14.3  7.4      66.7   0.000         0.0         0.00   0.0   \n",
       "2023-05-21  14.4  7.1      61.6   0.000         0.0         0.00   0.0   \n",
       "\n",
       "            snowdepth  windgust  windspeed  winddir  sealevelpressure  \\\n",
       "2014-01-04        0.0      72.4       38.4    190.5             993.1   \n",
       "2014-01-05        0.0      51.8       29.8    216.2             993.4   \n",
       "2014-01-06        0.0      77.4       33.5    218.4             994.5   \n",
       "2014-01-07        0.0      62.1       29.2    206.0             993.6   \n",
       "2014-01-08        0.0      55.6       30.4    192.5            1000.0   \n",
       "...               ...       ...        ...      ...               ...   \n",
       "2023-05-17        0.0      21.5       16.0    307.8            1020.7   \n",
       "2023-05-18        0.0      41.3       22.9    353.1            1019.9   \n",
       "2023-05-19        0.0      34.2       18.1    329.3            1024.9   \n",
       "2023-05-20        0.0      20.5       17.7     16.7            1028.2   \n",
       "2023-05-21        0.0      24.1       16.0     92.8            1028.0   \n",
       "\n",
       "            cloudcover  visibility  solarradiation  solarenergy  uvindex  \\\n",
       "2014-01-04        67.4        14.2             6.9          0.5      0.0   \n",
       "2014-01-05        47.4        26.7            38.3          3.3      2.0   \n",
       "2014-01-06        52.8        17.9            30.3          2.8      2.0   \n",
       "2014-01-07        67.6        22.0            17.4          1.4      1.0   \n",
       "2014-01-08        66.5        25.5            30.4          2.6      2.0   \n",
       "...                ...         ...             ...          ...      ...   \n",
       "2023-05-17        65.4        18.3           152.2         13.2      8.0   \n",
       "2023-05-18        57.3        38.2           134.8         11.6      5.0   \n",
       "2023-05-19        25.6        27.6           203.8         17.7      9.0   \n",
       "2023-05-20        38.6        23.2           147.4         12.7      7.0   \n",
       "2023-05-21        52.3        26.6           161.9         13.9      7.0   \n",
       "\n",
       "            severerisk  moonphase  clusters_description  year  month_1  \\\n",
       "2014-01-04        10.0       0.00                   1.0  2014     True   \n",
       "2014-01-05        10.0       0.03                   1.0  2014     True   \n",
       "2014-01-06        10.0       0.07                   1.0  2014     True   \n",
       "2014-01-07        10.0       0.10                   1.0  2014     True   \n",
       "2014-01-08        10.0       0.14                   1.0  2014     True   \n",
       "...                ...        ...                   ...   ...      ...   \n",
       "2023-05-17        10.0       0.81                   2.0  2023    False   \n",
       "2023-05-18        10.0       0.85                   1.0  2023    False   \n",
       "2023-05-19        10.0       0.88                   2.0  2023    False   \n",
       "2023-05-20        10.0       0.92                   1.0  2023    False   \n",
       "2023-05-21        10.0       0.96                   2.0  2023    False   \n",
       "\n",
       "            month_2  month_3  month_4  month_5  month_6  month_7  month_8  \\\n",
       "2014-01-04    False    False    False    False    False    False    False   \n",
       "2014-01-05    False    False    False    False    False    False    False   \n",
       "2014-01-06    False    False    False    False    False    False    False   \n",
       "2014-01-07    False    False    False    False    False    False    False   \n",
       "2014-01-08    False    False    False    False    False    False    False   \n",
       "...             ...      ...      ...      ...      ...      ...      ...   \n",
       "2023-05-17    False    False    False     True    False    False    False   \n",
       "2023-05-18    False    False    False     True    False    False    False   \n",
       "2023-05-19    False    False    False     True    False    False    False   \n",
       "2023-05-20    False    False    False     True    False    False    False   \n",
       "2023-05-21    False    False    False     True    False    False    False   \n",
       "\n",
       "            month_9  month_10  month_11  month_12  \n",
       "2014-01-04    False     False     False     False  \n",
       "2014-01-05    False     False     False     False  \n",
       "2014-01-06    False     False     False     False  \n",
       "2014-01-07    False     False     False     False  \n",
       "2014-01-08    False     False     False     False  \n",
       "...             ...       ...       ...       ...  \n",
       "2023-05-17    False     False     False     False  \n",
       "2023-05-18    False     False     False     False  \n",
       "2023-05-19    False     False     False     False  \n",
       "2023-05-20    False     False     False     False  \n",
       "2023-05-21    False     False     False     False  \n",
       "\n",
       "[3425 rows x 33 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>clusters_description</th>\n",
       "      <th>year</th>\n",
       "      <th>month_1</th>\n",
       "      <th>month_2</th>\n",
       "      <th>month_3</th>\n",
       "      <th>month_4</th>\n",
       "      <th>month_5</th>\n",
       "      <th>month_6</th>\n",
       "      <th>month_7</th>\n",
       "      <th>month_8</th>\n",
       "      <th>month_9</th>\n",
       "      <th>month_10</th>\n",
       "      <th>month_11</th>\n",
       "      <th>month_12</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2014-01-04</th>\n",
       "      <td>8.0</td>\n",
       "      <td>6.7</td>\n",
       "      <td>84.8</td>\n",
       "      <td>11.857</td>\n",
       "      <td>100.0</td>\n",
       "      <td>16.67</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>72.4</td>\n",
       "      <td>38.4</td>\n",
       "      <td>190.5</td>\n",
       "      <td>993.1</td>\n",
       "      <td>67.4</td>\n",
       "      <td>14.2</td>\n",
       "      <td>6.9</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-05</th>\n",
       "      <td>6.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>81.0</td>\n",
       "      <td>5.394</td>\n",
       "      <td>100.0</td>\n",
       "      <td>12.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>51.8</td>\n",
       "      <td>29.8</td>\n",
       "      <td>216.2</td>\n",
       "      <td>993.4</td>\n",
       "      <td>47.4</td>\n",
       "      <td>26.7</td>\n",
       "      <td>38.3</td>\n",
       "      <td>3.3</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-06</th>\n",
       "      <td>11.6</td>\n",
       "      <td>5.1</td>\n",
       "      <td>76.8</td>\n",
       "      <td>6.030</td>\n",
       "      <td>100.0</td>\n",
       "      <td>16.67</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>77.4</td>\n",
       "      <td>33.5</td>\n",
       "      <td>218.4</td>\n",
       "      <td>994.5</td>\n",
       "      <td>52.8</td>\n",
       "      <td>17.9</td>\n",
       "      <td>30.3</td>\n",
       "      <td>2.8</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.07</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-07</th>\n",
       "      <td>10.7</td>\n",
       "      <td>5.2</td>\n",
       "      <td>82.4</td>\n",
       "      <td>5.239</td>\n",
       "      <td>100.0</td>\n",
       "      <td>16.67</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>62.1</td>\n",
       "      <td>29.2</td>\n",
       "      <td>206.0</td>\n",
       "      <td>993.6</td>\n",
       "      <td>67.6</td>\n",
       "      <td>22.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>1.4</td>\n",
       "      <td>1.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.10</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-08</th>\n",
       "      <td>9.6</td>\n",
       "      <td>3.9</td>\n",
       "      <td>85.9</td>\n",
       "      <td>0.201</td>\n",
       "      <td>100.0</td>\n",
       "      <td>8.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>55.6</td>\n",
       "      <td>30.4</td>\n",
       "      <td>192.5</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>66.5</td>\n",
       "      <td>25.5</td>\n",
       "      <td>30.4</td>\n",
       "      <td>2.6</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.14</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-17</th>\n",
       "      <td>13.7</td>\n",
       "      <td>8.1</td>\n",
       "      <td>69.3</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>21.5</td>\n",
       "      <td>16.0</td>\n",
       "      <td>307.8</td>\n",
       "      <td>1020.7</td>\n",
       "      <td>65.4</td>\n",
       "      <td>18.3</td>\n",
       "      <td>152.2</td>\n",
       "      <td>13.2</td>\n",
       "      <td>8.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.81</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-18</th>\n",
       "      <td>14.6</td>\n",
       "      <td>5.8</td>\n",
       "      <td>60.6</td>\n",
       "      <td>2.989</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>41.3</td>\n",
       "      <td>22.9</td>\n",
       "      <td>353.1</td>\n",
       "      <td>1019.9</td>\n",
       "      <td>57.3</td>\n",
       "      <td>38.2</td>\n",
       "      <td>134.8</td>\n",
       "      <td>11.6</td>\n",
       "      <td>5.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.85</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-19</th>\n",
       "      <td>13.7</td>\n",
       "      <td>5.0</td>\n",
       "      <td>59.5</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>34.2</td>\n",
       "      <td>18.1</td>\n",
       "      <td>329.3</td>\n",
       "      <td>1024.9</td>\n",
       "      <td>25.6</td>\n",
       "      <td>27.6</td>\n",
       "      <td>203.8</td>\n",
       "      <td>17.7</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.88</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-20</th>\n",
       "      <td>14.3</td>\n",
       "      <td>7.4</td>\n",
       "      <td>66.7</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.5</td>\n",
       "      <td>17.7</td>\n",
       "      <td>16.7</td>\n",
       "      <td>1028.2</td>\n",
       "      <td>38.6</td>\n",
       "      <td>23.2</td>\n",
       "      <td>147.4</td>\n",
       "      <td>12.7</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.92</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-21</th>\n",
       "      <td>14.4</td>\n",
       "      <td>7.1</td>\n",
       "      <td>61.6</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>24.1</td>\n",
       "      <td>16.0</td>\n",
       "      <td>92.8</td>\n",
       "      <td>1028.0</td>\n",
       "      <td>52.3</td>\n",
       "      <td>26.6</td>\n",
       "      <td>161.9</td>\n",
       "      <td>13.9</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.96</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3425 rows × 33 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 114,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 114
  },
  {
   "cell_type": "code",
   "id": "4227530d",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:29.637293Z",
     "start_time": "2024-08-05T19:27:29.260110Z"
    }
   },
   "source": [
    "model_baseline = XGBRegressor()\n",
    "model_baseline.fit(df_train.drop('temp',axis=1), df_train[['temp']])"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "XGBRegressor(base_score=None, booster=None, callbacks=None,\n",
       "             colsample_bylevel=None, colsample_bynode=None,\n",
       "             colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
       "             enable_categorical=False, eval_metric=None, feature_types=None,\n",
       "             gamma=None, grow_policy=None, importance_type=None,\n",
       "             interaction_constraints=None, learning_rate=None, max_bin=None,\n",
       "             max_cat_threshold=None, max_cat_to_onehot=None,\n",
       "             max_delta_step=None, max_depth=None, max_leaves=None,\n",
       "             min_child_weight=None, missing=nan, monotone_constraints=None,\n",
       "             multi_strategy=None, n_estimators=None, n_jobs=None,\n",
       "             num_parallel_tree=None, random_state=None, ...)"
      ],
      "text/html": [
       "<style>#sk-container-id-1 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-1 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-1 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-1 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-1 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-1 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>XGBRegressor(base_score=None, booster=None, callbacks=None,\n",
       "             colsample_bylevel=None, colsample_bynode=None,\n",
       "             colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
       "             enable_categorical=False, eval_metric=None, feature_types=None,\n",
       "             gamma=None, grow_policy=None, importance_type=None,\n",
       "             interaction_constraints=None, learning_rate=None, max_bin=None,\n",
       "             max_cat_threshold=None, max_cat_to_onehot=None,\n",
       "             max_delta_step=None, max_depth=None, max_leaves=None,\n",
       "             min_child_weight=None, missing=nan, monotone_constraints=None,\n",
       "             multi_strategy=None, n_estimators=None, n_jobs=None,\n",
       "             num_parallel_tree=None, random_state=None, ...)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;XGBRegressor<span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>XGBRegressor(base_score=None, booster=None, callbacks=None,\n",
       "             colsample_bylevel=None, colsample_bynode=None,\n",
       "             colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
       "             enable_categorical=False, eval_metric=None, feature_types=None,\n",
       "             gamma=None, grow_policy=None, importance_type=None,\n",
       "             interaction_constraints=None, learning_rate=None, max_bin=None,\n",
       "             max_cat_threshold=None, max_cat_to_onehot=None,\n",
       "             max_delta_step=None, max_depth=None, max_leaves=None,\n",
       "             min_child_weight=None, missing=nan, monotone_constraints=None,\n",
       "             multi_strategy=None, n_estimators=None, n_jobs=None,\n",
       "             num_parallel_tree=None, random_state=None, ...)</pre></div> </div></div></div></div>"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 115
  },
  {
   "cell_type": "code",
   "id": "5e79255a",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:30.655479Z",
     "start_time": "2024-08-05T19:27:30.641709Z"
    }
   },
   "source": [
    "y_pred_base_xg = model_baseline.predict(df_test.drop('temp',axis=1))"
   ],
   "outputs": [],
   "execution_count": 116
  },
  {
   "cell_type": "code",
   "id": "4dd1dc53",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:31.111324Z",
     "start_time": "2024-08-05T19:27:31.108120Z"
    }
   },
   "source": [
    "y_pred_base_xg"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([14.836311  , 17.028198  , 15.2886505 , 14.315332  , 14.030735  ,\n",
       "       19.203314  , 14.333395  , 15.694791  , 15.662173  , 17.071068  ,\n",
       "       13.899145  , 15.694034  , 17.742777  , 16.097097  , 17.146366  ,\n",
       "       17.811363  , 18.471603  , 16.301134  , 12.135956  , 16.206167  ,\n",
       "       18.46847   , 17.439995  , 17.158194  , 18.244299  , 19.33409   ,\n",
       "       16.77277   , 19.016966  , 15.911241  , 17.931479  , 16.913002  ,\n",
       "       17.592096  , 16.284079  , 17.66163   , 18.590574  , 18.447641  ,\n",
       "       20.370972  , 19.674559  , 17.758568  , 18.04871   , 19.17009   ,\n",
       "       20.955215  , 19.907011  , 17.988445  , 18.442974  , 18.513718  ,\n",
       "       17.54384   , 16.02188   , 17.8398    , 20.131422  , 21.394913  ,\n",
       "       19.996532  , 20.465948  , 17.87757   , 17.13432   , 17.231867  ,\n",
       "       18.615458  , 16.440657  , 17.049904  , 16.544508  , 17.976559  ,\n",
       "       19.199915  , 20.599184  , 21.065083  , 19.127703  , 17.94356   ,\n",
       "       16.508078  , 16.860777  , 17.266315  , 16.300005  , 17.938398  ,\n",
       "       16.611544  , 16.684862  , 16.916327  , 16.18638   , 17.331564  ,\n",
       "       16.989073  , 16.936972  , 18.256502  , 16.381796  , 18.913218  ,\n",
       "       19.461767  , 19.184967  , 19.205502  , 18.539373  , 19.227537  ,\n",
       "       19.057     , 18.277203  , 17.417572  , 19.062027  , 21.875626  ,\n",
       "       18.66246   , 18.872065  , 19.477648  , 17.73217   , 18.41596   ,\n",
       "       18.68508   , 20.711172  , 17.076357  , 19.134212  , 16.765783  ,\n",
       "       14.955297  , 17.357616  , 15.432744  , 15.14367   , 14.328583  ,\n",
       "       15.637515  , 18.038504  , 16.180532  , 19.687561  , 19.075827  ,\n",
       "       17.888744  , 17.801624  , 19.854946  , 18.274035  , 18.16616   ,\n",
       "       15.434698  , 15.14741   , 15.372535  , 15.402428  , 18.463074  ,\n",
       "       17.70683   , 14.456381  , 13.2378845 , 13.192851  , 12.857971  ,\n",
       "       14.537916  , 14.425189  , 15.429766  , 14.839502  , 17.273695  ,\n",
       "       17.36233   , 15.55175   , 15.214619  , 16.453365  , 15.110613  ,\n",
       "       13.754181  , 13.958062  , 13.682442  , 12.640916  , 15.314818  ,\n",
       "       14.749998  , 16.04423   , 15.738067  , 14.137931  , 14.837537  ,\n",
       "       14.305268  , 13.004271  , 13.107929  , 13.355742  ,  8.43347   ,\n",
       "        8.793203  , 13.34928   , 12.503755  , 13.932988  , 12.514874  ,\n",
       "       10.8704815 , 13.3150425 , 11.781121  , 14.257213  , 14.068144  ,\n",
       "       15.657964  , 14.248016  , 14.845439  , 12.307872  , 10.609871  ,\n",
       "       11.197817  , 10.297275  ,  7.455149  ,  7.0640574 , 10.114771  ,\n",
       "        8.142627  , 11.55952   ,  8.7829895 , 10.243527  ,  9.629152  ,\n",
       "        6.462776  ,  7.7516317 ,  9.6425705 ,  6.492159  ,  8.242875  ,\n",
       "        9.181366  ,  7.4295993 ,  9.682322  , 10.8426075 ,  8.945303  ,\n",
       "        8.387233  ,  7.753085  ,  7.9144464 ,  6.870795  ,  6.436294  ,\n",
       "        4.9736185 ,  7.2877383 ,  8.589502  ,  6.3645697 ,  4.220019  ,\n",
       "        0.9900597 ,  0.68127483,  4.687278  ,  8.19347   ,  9.465582  ,\n",
       "        6.1780634 ,  7.123681  ,  8.769498  ,  9.117373  , 10.490359  ,\n",
       "       10.967071  ,  8.614663  ,  8.7863035 ,  8.717121  ,  6.8258157 ,\n",
       "        7.097312  ,  7.283816  ,  9.259937  ,  7.899536  ,  8.379865  ,\n",
       "        6.274212  ,  6.358788  ,  8.241992  ,  9.32596   ,  6.0916257 ,\n",
       "        8.323506  ,  8.185467  ,  8.768187  ,  9.469541  ,  7.900961  ,\n",
       "        8.2197895 ,  5.569996  ,  6.989461  ,  6.265124  ,  4.751056  ,\n",
       "        4.4867625 ,  5.8165045 ,  6.1476407 ,  4.2188597 ,  4.7845016 ,\n",
       "        4.456981  ,  3.9838731 ,  5.3171616 ,  6.2039037 ,  3.7628818 ,\n",
       "        5.743167  ,  6.685258  ,  4.371258  ,  5.101401  ,  4.6880493 ,\n",
       "        9.150011  ,  6.3622384 , 10.042486  ,  8.340796  ,  9.100571  ,\n",
       "        8.627797  ,  6.7465215 ,  9.27715   ,  8.210533  ,  7.9511905 ,\n",
       "        9.81771   ,  5.832077  ,  5.1902404 ,  8.015036  ,  9.799954  ,\n",
       "        6.8678226 ,  8.465048  ,  7.561448  ,  9.729678  ,  7.1528673 ,\n",
       "       10.788891  ,  9.879541  ,  7.576574  ,  6.203784  ,  7.7618403 ,\n",
       "        8.455935  , 12.344914  , 14.3559475 , 11.73477   , 11.372571  ,\n",
       "        7.9659777 ,  8.85233   ,  7.898265  , 10.515037  ,  6.8473086 ,\n",
       "        8.645035  ,  7.532388  ,  8.637342  ,  6.4523983 ,  7.2080135 ,\n",
       "        9.00675   ,  8.538202  ,  9.548321  ,  7.375446  ,  6.611086  ,\n",
       "        8.380778  ,  6.7864385 ,  8.884072  ,  8.7282    ,  9.666307  ,\n",
       "        8.175669  ,  7.6402555 ,  7.6548038 , 11.011307  , 11.36307   ,\n",
       "       11.79918   , 10.593097  ,  9.30736   , 10.879606  , 11.959375  ,\n",
       "        9.831765  , 13.80026   , 10.781328  ,  7.6010523 , 11.190561  ,\n",
       "       10.189639  ,  8.416442  ,  9.692684  ,  8.024761  ,  9.599945  ,\n",
       "        9.873837  ,  7.7500014 , 10.971356  ,  9.780964  , 10.980846  ,\n",
       "       11.516478  , 10.000655  , 10.49123   , 13.242576  , 11.552721  ,\n",
       "       13.106845  , 10.128892  , 11.778098  , 13.082709  , 13.810318  ,\n",
       "       13.629903  , 11.348505  , 10.4190855 , 10.6967125 , 11.070038  ,\n",
       "       14.63802   , 10.454231  , 10.586083  , 12.961681  ,  8.571548  ,\n",
       "        8.075541  , 11.661911  , 10.809688  , 10.333579  ,  8.766254  ,\n",
       "        9.91393   , 14.449728  , 13.595206  , 14.207722  ,  9.882334  ,\n",
       "       11.394753  ,  9.027476  , 11.204302  , 10.207858  , 14.12982   ,\n",
       "       17.009134  , 16.282854  , 16.669165  , 16.49233   , 16.627954  ,\n",
       "       14.486135  , 16.443136  , 14.224728  , 17.508904  , 14.192161  ],\n",
       "      dtype=float32)"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 117
  },
  {
   "cell_type": "code",
   "id": "8de5a076-fb03-4769-a856-12279c6adc82",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:31.902559Z",
     "start_time": "2024-08-05T19:27:31.900108Z"
    }
   },
   "source": [
    "has_na = np.isnan(y_pred_base_xg).any()\n",
    "print({has_na})"
   ],
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{False}\n"
     ]
    }
   ],
   "execution_count": 118
  },
  {
   "cell_type": "code",
   "id": "ae02b72e-68de-4408-9dca-69ceccb6b03e",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:32.086007Z",
     "start_time": "2024-08-05T19:27:32.083800Z"
    }
   },
   "source": [
    "na_count = np.isnan(y_pred_base_xg).sum()\n",
    "print({na_count})"
   ],
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{0}\n"
     ]
    }
   ],
   "execution_count": 119
  },
  {
   "cell_type": "code",
   "id": "21973bd4-5b5e-451d-bfb9-601a9be78f49",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:32.328220Z",
     "start_time": "2024-08-05T19:27:32.313933Z"
    }
   },
   "source": [
    "df_test.isna()"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "             temp    dew  humidity  precip  precipprob  precipcover   snow  \\\n",
       "2023-05-22  False  False     False   False       False        False  False   \n",
       "2023-05-23  False  False     False   False       False        False  False   \n",
       "2023-05-24  False  False     False   False       False        False  False   \n",
       "2023-05-25  False  False     False   False       False        False  False   \n",
       "2023-05-26  False  False     False   False       False        False  False   \n",
       "...           ...    ...       ...     ...         ...          ...    ...   \n",
       "2024-05-16  False  False     False   False       False        False  False   \n",
       "2024-05-17  False  False     False   False       False        False  False   \n",
       "2024-05-18  False  False     False   False       False        False  False   \n",
       "2024-05-19  False  False     False   False       False        False  False   \n",
       "2024-05-20  False  False     False   False       False        False  False   \n",
       "\n",
       "            snowdepth  windgust  windspeed  winddir  sealevelpressure  \\\n",
       "2023-05-22      False     False      False    False             False   \n",
       "2023-05-23      False     False      False    False             False   \n",
       "2023-05-24      False     False      False    False             False   \n",
       "2023-05-25      False     False      False    False             False   \n",
       "2023-05-26      False     False      False    False             False   \n",
       "...               ...       ...        ...      ...               ...   \n",
       "2024-05-16      False     False      False    False             False   \n",
       "2024-05-17      False     False      False    False             False   \n",
       "2024-05-18      False     False      False    False             False   \n",
       "2024-05-19      False     False      False    False             False   \n",
       "2024-05-20      False     False      False    False             False   \n",
       "\n",
       "            cloudcover  visibility  solarradiation  solarenergy  uvindex  \\\n",
       "2023-05-22       False       False           False        False    False   \n",
       "2023-05-23       False       False           False        False    False   \n",
       "2023-05-24       False       False           False        False    False   \n",
       "2023-05-25       False       False           False        False    False   \n",
       "2023-05-26       False       False           False        False    False   \n",
       "...                ...         ...             ...          ...      ...   \n",
       "2024-05-16       False       False           False        False    False   \n",
       "2024-05-17       False       False           False        False    False   \n",
       "2024-05-18       False       False           False        False    False   \n",
       "2024-05-19       False       False           False        False    False   \n",
       "2024-05-20       False       False           False        False    False   \n",
       "\n",
       "            severerisk  moonphase  clusters_description   year  month_1  \\\n",
       "2023-05-22       False      False                 False  False    False   \n",
       "2023-05-23       False      False                 False  False    False   \n",
       "2023-05-24       False      False                 False  False    False   \n",
       "2023-05-25       False      False                 False  False    False   \n",
       "2023-05-26       False      False                 False  False    False   \n",
       "...                ...        ...                   ...    ...      ...   \n",
       "2024-05-16       False      False                 False  False    False   \n",
       "2024-05-17       False      False                 False  False    False   \n",
       "2024-05-18       False      False                 False  False    False   \n",
       "2024-05-19       False      False                 False  False    False   \n",
       "2024-05-20       False      False                 False  False    False   \n",
       "\n",
       "            month_2  month_3  month_4  month_5  month_6  month_7  month_8  \\\n",
       "2023-05-22    False    False    False    False    False    False    False   \n",
       "2023-05-23    False    False    False    False    False    False    False   \n",
       "2023-05-24    False    False    False    False    False    False    False   \n",
       "2023-05-25    False    False    False    False    False    False    False   \n",
       "2023-05-26    False    False    False    False    False    False    False   \n",
       "...             ...      ...      ...      ...      ...      ...      ...   \n",
       "2024-05-16    False    False    False    False    False    False    False   \n",
       "2024-05-17    False    False    False    False    False    False    False   \n",
       "2024-05-18    False    False    False    False    False    False    False   \n",
       "2024-05-19    False    False    False    False    False    False    False   \n",
       "2024-05-20    False    False    False    False    False    False    False   \n",
       "\n",
       "            month_9  month_10  month_11  month_12  \n",
       "2023-05-22    False     False     False     False  \n",
       "2023-05-23    False     False     False     False  \n",
       "2023-05-24    False     False     False     False  \n",
       "2023-05-25    False     False     False     False  \n",
       "2023-05-26    False     False     False     False  \n",
       "...             ...       ...       ...       ...  \n",
       "2024-05-16    False     False     False     False  \n",
       "2024-05-17    False     False     False     False  \n",
       "2024-05-18    False     False     False     False  \n",
       "2024-05-19    False     False     False     False  \n",
       "2024-05-20    False     False     False     False  \n",
       "\n",
       "[365 rows x 33 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>clusters_description</th>\n",
       "      <th>year</th>\n",
       "      <th>month_1</th>\n",
       "      <th>month_2</th>\n",
       "      <th>month_3</th>\n",
       "      <th>month_4</th>\n",
       "      <th>month_5</th>\n",
       "      <th>month_6</th>\n",
       "      <th>month_7</th>\n",
       "      <th>month_8</th>\n",
       "      <th>month_9</th>\n",
       "      <th>month_10</th>\n",
       "      <th>month_11</th>\n",
       "      <th>month_12</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2023-05-22</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-23</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-24</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-25</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-26</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-16</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-17</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-18</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-19</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-20</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>365 rows × 33 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 120
  },
  {
   "cell_type": "code",
   "id": "9dee5fd4",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:32.457609Z",
     "start_time": "2024-08-05T19:27:32.455239Z"
    }
   },
   "source": [
    "#performance metrics\n",
    "#df_test has na "
   ],
   "outputs": [],
   "execution_count": 121
  },
  {
   "cell_type": "code",
   "id": "22d1c3c0",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:32.791550Z",
     "start_time": "2024-08-05T19:27:32.783994Z"
    }
   },
   "source": [
    "mae = mean_absolute_error(df_test['temp'], y_pred_base_xg)\n",
    "mse = mean_squared_error(df_test['temp'], y_pred_base_xg)\n",
    "rmse = mse ** 0.5\n",
    "r2 = r2_score(df_test['temp'], y_pred_base_xg)\n",
    "\n",
    "print(f\"Mean Absolute Error (MAE) for XGBoost baseline with all regressors: {mae}\")\n",
    "print(f\"Mean Squared Error (MSE) for XGBoost baseline with all regressors: {mse}\")\n",
    "print(f\"Root Mean Squared Error (RMSE) for XGBoost baseline with all regressors: {rmse}\")\n",
    "print(f\"R-squared (R2) for XGBoost baseline with all regressors: {r2}\")"
   ],
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Absolute Error (MAE) for XGBoost baseline with all regressors: 2.391982497123823\n",
      "Mean Squared Error (MSE) for XGBoost baseline with all regressors: 8.807816769372833\n",
      "Root Mean Squared Error (RMSE) for XGBoost baseline with all regressors: 2.9677966185998716\n",
      "R-squared (R2) for XGBoost baseline with all regressors: 0.6804422462803177\n"
     ]
    }
   ],
   "execution_count": 122
  },
  {
   "cell_type": "code",
   "id": "0852e97c",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:32.980028Z",
     "start_time": "2024-08-05T19:27:32.977387Z"
    }
   },
   "source": [
    "# for RMSE: if my prediction is errored I want that to inflate the error - but don't know in which direction\n",
    "# MAE: it means it's 2.3 degrees away from truth just don't know in which direction "
   ],
   "outputs": [],
   "execution_count": 123
  },
  {
   "cell_type": "markdown",
   "id": "bd417b6d-ad44-4c02-9a07-85b5d0b73295",
   "metadata": {},
   "source": [
    "## Predictions vs Actuals"
   ]
  },
  {
   "cell_type": "raw",
   "id": "81bb017a-af2c-4c9a-a1aa-196eae74e1a5",
   "metadata": {},
   "source": [
    "- for this function always make sure the index is the same so it plots always on the same axis"
   ]
  },
  {
   "cell_type": "code",
   "id": "9e9fa89c-8ea5-4242-b91a-59c102afd2b3",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:33.212472Z",
     "start_time": "2024-08-05T19:27:33.207255Z"
    }
   },
   "source": [
    "df_test[['temp']]"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "            temp\n",
       "2023-05-22  15.1\n",
       "2023-05-23  14.0\n",
       "2023-05-24  15.8\n",
       "2023-05-25  15.0\n",
       "2023-05-26  14.2\n",
       "...          ...\n",
       "2024-05-16  14.2\n",
       "2024-05-17  16.4\n",
       "2024-05-18  15.8\n",
       "2024-05-19  16.6\n",
       "2024-05-20  15.1\n",
       "\n",
       "[365 rows x 1 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2023-05-22</th>\n",
       "      <td>15.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-23</th>\n",
       "      <td>14.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-24</th>\n",
       "      <td>15.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-25</th>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-26</th>\n",
       "      <td>14.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-16</th>\n",
       "      <td>14.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-17</th>\n",
       "      <td>16.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-18</th>\n",
       "      <td>15.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-19</th>\n",
       "      <td>16.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-20</th>\n",
       "      <td>15.1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>365 rows × 1 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 124
  },
  {
   "cell_type": "code",
   "id": "a8585e41-da6f-4a99-888a-b426043979a1",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:33.254148Z",
     "start_time": "2024-08-05T19:27:33.252236Z"
    }
   },
   "source": [
    "df_test_w_preds = df_test.copy()"
   ],
   "outputs": [],
   "execution_count": 125
  },
  {
   "cell_type": "code",
   "id": "1c373cfb-6224-4833-90b2-0b3e0dec03c2",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:33.361090Z",
     "start_time": "2024-08-05T19:27:33.358891Z"
    }
   },
   "source": [
    "#create new column in order to attach index date to the preds\n",
    "df_test_w_preds['preds'] = y_pred_base_xg"
   ],
   "outputs": [],
   "execution_count": 126
  },
  {
   "cell_type": "code",
   "id": "e170c15e",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:33.427383Z",
     "start_time": "2024-08-05T19:27:33.423932Z"
    }
   },
   "source": [
    "def plot_forecast(actuals, predictions): \n",
    "    plt.figure(figsize=(15, 10))\n",
    "    plt.plot(actuals, label='Actuals', marker='o')\n",
    "    plt.plot(predictions, label='Preds', marker='s')\n",
    "    plt.xlabel('Time')\n",
    "    plt.ylabel('Temperature')\n",
    "    plt.title('Predicted vs Actual temperature for XGBoost baseline model with all features')\n",
    "    plt.show()"
   ],
   "outputs": [],
   "execution_count": 127
  },
  {
   "cell_type": "code",
   "id": "9d8db99e-0b5c-4eaf-bcf2-161dcd741538",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:33.936075Z",
     "start_time": "2024-08-05T19:27:33.714892Z"
    }
   },
   "source": [
    "plot_forecast(df_test_w_preds[['temp']], df_test_w_preds[['preds']])"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 1500x1000 with 1 Axes>"
      ],
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "execution_count": 128
  },
  {
   "cell_type": "markdown",
   "id": "48c62661-7a61-42c0-8718-4746019d9201",
   "metadata": {},
   "source": [
    "## Feature importance"
   ]
  },
  {
   "cell_type": "code",
   "id": "a1086faa-f2e7-4b66-87fd-ee1dad56aa16",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:33.946538Z",
     "start_time": "2024-08-05T19:27:33.939515Z"
    }
   },
   "source": [
    "from xgboost import plot_importance"
   ],
   "outputs": [],
   "execution_count": 129
  },
  {
   "cell_type": "code",
   "id": "bd15144c-05ff-4805-b297-f0a94b2a2c64",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:34.152333Z",
     "start_time": "2024-08-05T19:27:33.947981Z"
    }
   },
   "source": [
    "plot_importance(model_baseline)\n",
    "plt.title('Feature Importances')\n",
    "plt.show()"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ],
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "execution_count": 130
  },
  {
   "cell_type": "code",
   "id": "fbaf1212-f89f-40ef-9e0c-0e76f3152db6",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:34.158849Z",
     "start_time": "2024-08-05T19:27:34.154983Z"
    }
   },
   "source": [
    "# look into dew and the importance of it in terms of climate change and weather prediction \n",
    "# the year has quite an important impact as it shows that the average temp is changing every year and therefore has an impact on all predictions\n",
    "# it proves the temperature changes every year, and it is not cyclical \n",
    "# try removing all below 30 "
   ],
   "outputs": [],
   "execution_count": 131
  },
  {
   "cell_type": "code",
   "id": "f3550acb-10b9-46cb-82f7-492402664e19",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:34.173159Z",
     "start_time": "2024-08-05T19:27:34.160415Z"
    }
   },
   "source": [
    "future_preds = model_baseline.predict(df_future.drop('temp', axis=1))"
   ],
   "outputs": [],
   "execution_count": 132
  },
  {
   "cell_type": "code",
   "id": "1c8a7910",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:34.313190Z",
     "start_time": "2024-08-05T19:27:34.309845Z"
    }
   },
   "source": [
    "df_future['preds'] = future_preds"
   ],
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/3v/rnm1bg295jq6crrdqwt_791c0000gp/T/ipykernel_10093/2337567264.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  df_future['preds'] = future_preds\n"
     ]
    }
   ],
   "execution_count": 133
  },
  {
   "cell_type": "code",
   "id": "0c9e2b8c-80b6-4cee-9c90-3fa0727c826f",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:34.356641Z",
     "start_time": "2024-08-05T19:27:34.345206Z"
    }
   },
   "source": [
    "df_future"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "            temp   dew  humidity  precip  precipprob  precipcover  snow  \\\n",
       "2024-05-21   NaN  10.5      69.7   0.797       100.0         8.33   0.0   \n",
       "2024-05-22   NaN  12.4      89.1  10.126       100.0        20.83   0.0   \n",
       "2024-05-23   NaN  10.3      70.2   0.000         0.0         0.00   0.0   \n",
       "\n",
       "            snowdepth  windgust  windspeed  winddir  sealevelpressure  \\\n",
       "2024-05-21        0.0      25.0       15.2    147.1            1004.2   \n",
       "2024-05-22        0.0      18.4       10.1    213.9            1005.2   \n",
       "2024-05-23        0.0      17.4        9.4    194.8            1009.3   \n",
       "\n",
       "            cloudcover  visibility  solarradiation  solarenergy  uvindex  \\\n",
       "2024-05-21        52.3        19.4           118.8         10.3      9.0   \n",
       "2024-05-22        58.3        15.8            74.5          6.5      3.0   \n",
       "2024-05-23        41.4        21.7           177.8         15.5     10.0   \n",
       "\n",
       "            severerisk  moonphase  clusters_description  year  month_1  \\\n",
       "2024-05-21        10.0       0.25                   0.0  2024    False   \n",
       "2024-05-22        10.0       0.27                   1.0  2024    False   \n",
       "2024-05-23        10.0       0.30                   1.0  2024    False   \n",
       "\n",
       "            month_2  month_3  month_4  month_5  month_6  month_7  month_8  \\\n",
       "2024-05-21    False    False    False     True    False    False    False   \n",
       "2024-05-22    False    False    False     True    False    False    False   \n",
       "2024-05-23    False    False    False     True    False    False    False   \n",
       "\n",
       "            month_9  month_10  month_11  month_12      preds  \n",
       "2024-05-21    False     False     False     False  14.224728  \n",
       "2024-05-22    False     False     False     False  17.508904  \n",
       "2024-05-23    False     False     False     False  14.192161  "
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>clusters_description</th>\n",
       "      <th>year</th>\n",
       "      <th>month_1</th>\n",
       "      <th>month_2</th>\n",
       "      <th>month_3</th>\n",
       "      <th>month_4</th>\n",
       "      <th>month_5</th>\n",
       "      <th>month_6</th>\n",
       "      <th>month_7</th>\n",
       "      <th>month_8</th>\n",
       "      <th>month_9</th>\n",
       "      <th>month_10</th>\n",
       "      <th>month_11</th>\n",
       "      <th>month_12</th>\n",
       "      <th>preds</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2024-05-21</th>\n",
       "      <td>NaN</td>\n",
       "      <td>10.5</td>\n",
       "      <td>69.7</td>\n",
       "      <td>0.797</td>\n",
       "      <td>100.0</td>\n",
       "      <td>8.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>15.2</td>\n",
       "      <td>147.1</td>\n",
       "      <td>1004.2</td>\n",
       "      <td>52.3</td>\n",
       "      <td>19.4</td>\n",
       "      <td>118.8</td>\n",
       "      <td>10.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.224728</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-22</th>\n",
       "      <td>NaN</td>\n",
       "      <td>12.4</td>\n",
       "      <td>89.1</td>\n",
       "      <td>10.126</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.4</td>\n",
       "      <td>10.1</td>\n",
       "      <td>213.9</td>\n",
       "      <td>1005.2</td>\n",
       "      <td>58.3</td>\n",
       "      <td>15.8</td>\n",
       "      <td>74.5</td>\n",
       "      <td>6.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.27</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>17.508904</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-23</th>\n",
       "      <td>NaN</td>\n",
       "      <td>10.3</td>\n",
       "      <td>70.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>9.4</td>\n",
       "      <td>194.8</td>\n",
       "      <td>1009.3</td>\n",
       "      <td>41.4</td>\n",
       "      <td>21.7</td>\n",
       "      <td>177.8</td>\n",
       "      <td>15.5</td>\n",
       "      <td>10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.30</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.192161</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ]
     },
     "execution_count": 134,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 134
  },
  {
   "cell_type": "markdown",
   "id": "63b8bf83-f4f7-4109-aea3-c15c3a503bde",
   "metadata": {},
   "source": [
    "## Grid search model hyperparameter tuning XGBOOST "
   ]
  },
  {
   "cell_type": "code",
   "id": "0bc69246-6b37-4f34-a5dc-0069e3e28ac7",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:34.577216Z",
     "start_time": "2024-08-05T19:27:34.556470Z"
    }
   },
   "source": [
    "df_train"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "            temp  dew  humidity  precip  precipprob  precipcover  snow  \\\n",
       "2014-01-04   8.0  6.7      84.8  11.857       100.0        16.67   0.0   \n",
       "2014-01-05   6.0  6.0      81.0   5.394       100.0        12.50   0.0   \n",
       "2014-01-06  11.6  5.1      76.8   6.030       100.0        16.67   0.0   \n",
       "2014-01-07  10.7  5.2      82.4   5.239       100.0        16.67   0.0   \n",
       "2014-01-08   9.6  3.9      85.9   0.201       100.0         8.33   0.0   \n",
       "...          ...  ...       ...     ...         ...          ...   ...   \n",
       "2023-05-17  13.7  8.1      69.3   0.000         0.0         0.00   0.0   \n",
       "2023-05-18  14.6  5.8      60.6   2.989       100.0        20.83   0.0   \n",
       "2023-05-19  13.7  5.0      59.5   0.000         0.0         0.00   0.0   \n",
       "2023-05-20  14.3  7.4      66.7   0.000         0.0         0.00   0.0   \n",
       "2023-05-21  14.4  7.1      61.6   0.000         0.0         0.00   0.0   \n",
       "\n",
       "            snowdepth  windgust  windspeed  winddir  sealevelpressure  \\\n",
       "2014-01-04        0.0      72.4       38.4    190.5             993.1   \n",
       "2014-01-05        0.0      51.8       29.8    216.2             993.4   \n",
       "2014-01-06        0.0      77.4       33.5    218.4             994.5   \n",
       "2014-01-07        0.0      62.1       29.2    206.0             993.6   \n",
       "2014-01-08        0.0      55.6       30.4    192.5            1000.0   \n",
       "...               ...       ...        ...      ...               ...   \n",
       "2023-05-17        0.0      21.5       16.0    307.8            1020.7   \n",
       "2023-05-18        0.0      41.3       22.9    353.1            1019.9   \n",
       "2023-05-19        0.0      34.2       18.1    329.3            1024.9   \n",
       "2023-05-20        0.0      20.5       17.7     16.7            1028.2   \n",
       "2023-05-21        0.0      24.1       16.0     92.8            1028.0   \n",
       "\n",
       "            cloudcover  visibility  solarradiation  solarenergy  uvindex  \\\n",
       "2014-01-04        67.4        14.2             6.9          0.5      0.0   \n",
       "2014-01-05        47.4        26.7            38.3          3.3      2.0   \n",
       "2014-01-06        52.8        17.9            30.3          2.8      2.0   \n",
       "2014-01-07        67.6        22.0            17.4          1.4      1.0   \n",
       "2014-01-08        66.5        25.5            30.4          2.6      2.0   \n",
       "...                ...         ...             ...          ...      ...   \n",
       "2023-05-17        65.4        18.3           152.2         13.2      8.0   \n",
       "2023-05-18        57.3        38.2           134.8         11.6      5.0   \n",
       "2023-05-19        25.6        27.6           203.8         17.7      9.0   \n",
       "2023-05-20        38.6        23.2           147.4         12.7      7.0   \n",
       "2023-05-21        52.3        26.6           161.9         13.9      7.0   \n",
       "\n",
       "            severerisk  moonphase  clusters_description  year  month_1  \\\n",
       "2014-01-04        10.0       0.00                   1.0  2014     True   \n",
       "2014-01-05        10.0       0.03                   1.0  2014     True   \n",
       "2014-01-06        10.0       0.07                   1.0  2014     True   \n",
       "2014-01-07        10.0       0.10                   1.0  2014     True   \n",
       "2014-01-08        10.0       0.14                   1.0  2014     True   \n",
       "...                ...        ...                   ...   ...      ...   \n",
       "2023-05-17        10.0       0.81                   2.0  2023    False   \n",
       "2023-05-18        10.0       0.85                   1.0  2023    False   \n",
       "2023-05-19        10.0       0.88                   2.0  2023    False   \n",
       "2023-05-20        10.0       0.92                   1.0  2023    False   \n",
       "2023-05-21        10.0       0.96                   2.0  2023    False   \n",
       "\n",
       "            month_2  month_3  month_4  month_5  month_6  month_7  month_8  \\\n",
       "2014-01-04    False    False    False    False    False    False    False   \n",
       "2014-01-05    False    False    False    False    False    False    False   \n",
       "2014-01-06    False    False    False    False    False    False    False   \n",
       "2014-01-07    False    False    False    False    False    False    False   \n",
       "2014-01-08    False    False    False    False    False    False    False   \n",
       "...             ...      ...      ...      ...      ...      ...      ...   \n",
       "2023-05-17    False    False    False     True    False    False    False   \n",
       "2023-05-18    False    False    False     True    False    False    False   \n",
       "2023-05-19    False    False    False     True    False    False    False   \n",
       "2023-05-20    False    False    False     True    False    False    False   \n",
       "2023-05-21    False    False    False     True    False    False    False   \n",
       "\n",
       "            month_9  month_10  month_11  month_12  \n",
       "2014-01-04    False     False     False     False  \n",
       "2014-01-05    False     False     False     False  \n",
       "2014-01-06    False     False     False     False  \n",
       "2014-01-07    False     False     False     False  \n",
       "2014-01-08    False     False     False     False  \n",
       "...             ...       ...       ...       ...  \n",
       "2023-05-17    False     False     False     False  \n",
       "2023-05-18    False     False     False     False  \n",
       "2023-05-19    False     False     False     False  \n",
       "2023-05-20    False     False     False     False  \n",
       "2023-05-21    False     False     False     False  \n",
       "\n",
       "[3425 rows x 33 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>clusters_description</th>\n",
       "      <th>year</th>\n",
       "      <th>month_1</th>\n",
       "      <th>month_2</th>\n",
       "      <th>month_3</th>\n",
       "      <th>month_4</th>\n",
       "      <th>month_5</th>\n",
       "      <th>month_6</th>\n",
       "      <th>month_7</th>\n",
       "      <th>month_8</th>\n",
       "      <th>month_9</th>\n",
       "      <th>month_10</th>\n",
       "      <th>month_11</th>\n",
       "      <th>month_12</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2014-01-04</th>\n",
       "      <td>8.0</td>\n",
       "      <td>6.7</td>\n",
       "      <td>84.8</td>\n",
       "      <td>11.857</td>\n",
       "      <td>100.0</td>\n",
       "      <td>16.67</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>72.4</td>\n",
       "      <td>38.4</td>\n",
       "      <td>190.5</td>\n",
       "      <td>993.1</td>\n",
       "      <td>67.4</td>\n",
       "      <td>14.2</td>\n",
       "      <td>6.9</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-05</th>\n",
       "      <td>6.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>81.0</td>\n",
       "      <td>5.394</td>\n",
       "      <td>100.0</td>\n",
       "      <td>12.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>51.8</td>\n",
       "      <td>29.8</td>\n",
       "      <td>216.2</td>\n",
       "      <td>993.4</td>\n",
       "      <td>47.4</td>\n",
       "      <td>26.7</td>\n",
       "      <td>38.3</td>\n",
       "      <td>3.3</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-06</th>\n",
       "      <td>11.6</td>\n",
       "      <td>5.1</td>\n",
       "      <td>76.8</td>\n",
       "      <td>6.030</td>\n",
       "      <td>100.0</td>\n",
       "      <td>16.67</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>77.4</td>\n",
       "      <td>33.5</td>\n",
       "      <td>218.4</td>\n",
       "      <td>994.5</td>\n",
       "      <td>52.8</td>\n",
       "      <td>17.9</td>\n",
       "      <td>30.3</td>\n",
       "      <td>2.8</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.07</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-07</th>\n",
       "      <td>10.7</td>\n",
       "      <td>5.2</td>\n",
       "      <td>82.4</td>\n",
       "      <td>5.239</td>\n",
       "      <td>100.0</td>\n",
       "      <td>16.67</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>62.1</td>\n",
       "      <td>29.2</td>\n",
       "      <td>206.0</td>\n",
       "      <td>993.6</td>\n",
       "      <td>67.6</td>\n",
       "      <td>22.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>1.4</td>\n",
       "      <td>1.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.10</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-01-08</th>\n",
       "      <td>9.6</td>\n",
       "      <td>3.9</td>\n",
       "      <td>85.9</td>\n",
       "      <td>0.201</td>\n",
       "      <td>100.0</td>\n",
       "      <td>8.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>55.6</td>\n",
       "      <td>30.4</td>\n",
       "      <td>192.5</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>66.5</td>\n",
       "      <td>25.5</td>\n",
       "      <td>30.4</td>\n",
       "      <td>2.6</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.14</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-17</th>\n",
       "      <td>13.7</td>\n",
       "      <td>8.1</td>\n",
       "      <td>69.3</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>21.5</td>\n",
       "      <td>16.0</td>\n",
       "      <td>307.8</td>\n",
       "      <td>1020.7</td>\n",
       "      <td>65.4</td>\n",
       "      <td>18.3</td>\n",
       "      <td>152.2</td>\n",
       "      <td>13.2</td>\n",
       "      <td>8.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.81</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-18</th>\n",
       "      <td>14.6</td>\n",
       "      <td>5.8</td>\n",
       "      <td>60.6</td>\n",
       "      <td>2.989</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>41.3</td>\n",
       "      <td>22.9</td>\n",
       "      <td>353.1</td>\n",
       "      <td>1019.9</td>\n",
       "      <td>57.3</td>\n",
       "      <td>38.2</td>\n",
       "      <td>134.8</td>\n",
       "      <td>11.6</td>\n",
       "      <td>5.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.85</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-19</th>\n",
       "      <td>13.7</td>\n",
       "      <td>5.0</td>\n",
       "      <td>59.5</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>34.2</td>\n",
       "      <td>18.1</td>\n",
       "      <td>329.3</td>\n",
       "      <td>1024.9</td>\n",
       "      <td>25.6</td>\n",
       "      <td>27.6</td>\n",
       "      <td>203.8</td>\n",
       "      <td>17.7</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.88</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-20</th>\n",
       "      <td>14.3</td>\n",
       "      <td>7.4</td>\n",
       "      <td>66.7</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.5</td>\n",
       "      <td>17.7</td>\n",
       "      <td>16.7</td>\n",
       "      <td>1028.2</td>\n",
       "      <td>38.6</td>\n",
       "      <td>23.2</td>\n",
       "      <td>147.4</td>\n",
       "      <td>12.7</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.92</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-21</th>\n",
       "      <td>14.4</td>\n",
       "      <td>7.1</td>\n",
       "      <td>61.6</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>24.1</td>\n",
       "      <td>16.0</td>\n",
       "      <td>92.8</td>\n",
       "      <td>1028.0</td>\n",
       "      <td>52.3</td>\n",
       "      <td>26.6</td>\n",
       "      <td>161.9</td>\n",
       "      <td>13.9</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.96</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3425 rows × 33 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 135,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 135
  },
  {
   "cell_type": "code",
   "id": "2b398da4-6046-4c06-ab61-ccaef513cebd",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:34.655332Z",
     "start_time": "2024-08-05T19:27:34.652210Z"
    }
   },
   "source": [
    "from sklearn.model_selection import GridSearchCV"
   ],
   "outputs": [],
   "execution_count": 136
  },
  {
   "cell_type": "code",
   "id": "62ab33f3-0aa6-44b8-ac59-66c85b8daf46",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:34.806390Z",
     "start_time": "2024-08-05T19:27:34.803159Z"
    }
   },
   "source": [
    "param_grid = {\n",
    "    'max_depth': [3, 5, 7],\n",
    "    'learning_rate': [0.01, 0.1, 0.2],\n",
    "    'subsample': [0.7, 0.8, 1.0],\n",
    "    'max_leaf_nodes':  [0, 10, 20], \n",
    "    'reg_lambda': [0, 0.1, 1]\n",
    "}\n",
    "\n",
    "grid_search = GridSearchCV(estimator=model_baseline, param_grid=param_grid, cv=3, scoring='neg_mean_squared_error', verbose=1, n_jobs=-1)"
   ],
   "outputs": [],
   "execution_count": 137
  },
  {
   "cell_type": "code",
   "id": "a387531f-0c48-4f8c-8c19-a939176ff921",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:55.615190Z",
     "start_time": "2024-08-05T19:27:34.966514Z"
    }
   },
   "source": [
    "grid_search.fit(df_train.drop('temp', axis=1), df_train['temp']) #first one is train without target, second one is just target\n",
    "\n",
    "best_params = grid_search.best_params_\n",
    "best_score = grid_search.best_score_"
   ],
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 3 folds for each of 243 candidates, totalling 729 fits\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:37] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:38] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:39] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:40] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:41] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:41] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:41] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:41] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:41] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:41] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:41] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:41] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:41] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:41] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:41] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:41] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:41] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:41] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:41] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:41] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:41] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:41] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:42] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:42] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:42] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:42] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:42] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:42] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:42] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:42] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:42] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:42] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:42] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:42] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:42] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:42] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:42] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:42] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:42] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:42] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:42] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:43] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:43] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:43] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:43] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:43] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:43] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:43] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:43] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:43] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:43] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:43] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:43] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:43] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:43] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:43] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:43] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:43] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:43] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:43] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:44] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:45] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:46] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:47] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:48] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:49] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:49] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:49] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:49] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:49] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:49] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:49] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:49] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:49] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:49] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:49] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:49] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:49] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:49] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:49] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:49] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:49] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:49] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:49] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:50] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:51] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:52] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:53] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:54] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:54] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:54] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:54] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:54] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:54] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:54] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:54] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:54] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:54] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:54] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:54] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:54] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:54] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:54] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:54] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:54] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:54] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:54] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:54] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:54] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:54] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:54] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:55] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:55] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:55] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:55] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:55] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:55] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:55] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:55] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    }
   ],
   "execution_count": 138
  },
  {
   "cell_type": "code",
   "id": "5f552f8b-5ccf-4dab-835f-6f7fe0f4980e",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:55.620271Z",
     "start_time": "2024-08-05T19:27:55.616838Z"
    }
   },
   "source": [
    "print(f\"Best parameters: {best_params}\")\n",
    "print(f\"Best score: {best_score}\")"
   ],
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best parameters: {'learning_rate': 0.1, 'max_depth': 3, 'max_leaf_nodes': 0, 'reg_lambda': 1, 'subsample': 0.7}\n",
      "Best score: -7.289552539575408\n"
     ]
    }
   ],
   "execution_count": 139
  },
  {
   "cell_type": "code",
   "id": "ebf3be1d-a0f3-472e-b626-a46798767fe8",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:55.763655Z",
     "start_time": "2024-08-05T19:27:55.621358Z"
    }
   },
   "source": [
    "gs_model = XGBRegressor(learning_rate= 0.1, max_depth= 3, subsample= 0.7, max_leaf_nodes=0, reg_lambda=1)\n",
    "gs_model.fit(df_train.drop('temp',axis=1), df_train[['temp']])"
   ],
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/xgboost/core.py:158: UserWarning: [20:27:55] WARNING: /Users/runner/work/xgboost/xgboost/src/learner.cc:740: \n",
      "Parameters: { \"max_leaf_nodes\" } are not used.\n",
      "\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "XGBRegressor(base_score=None, booster=None, callbacks=None,\n",
       "             colsample_bylevel=None, colsample_bynode=None,\n",
       "             colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
       "             enable_categorical=False, eval_metric=None, feature_types=None,\n",
       "             gamma=None, grow_policy=None, importance_type=None,\n",
       "             interaction_constraints=None, learning_rate=0.1, max_bin=None,\n",
       "             max_cat_threshold=None, max_cat_to_onehot=None,\n",
       "             max_delta_step=None, max_depth=3, max_leaf_nodes=0,\n",
       "             max_leaves=None, min_child_weight=None, missing=nan,\n",
       "             monotone_constraints=None, multi_strategy=None, n_estimators=None,\n",
       "             n_jobs=None, num_parallel_tree=None, ...)"
      ],
      "text/html": [
       "<style>#sk-container-id-2 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-2 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-2 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-2 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-2 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-2 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-2 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-2 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-2 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>XGBRegressor(base_score=None, booster=None, callbacks=None,\n",
       "             colsample_bylevel=None, colsample_bynode=None,\n",
       "             colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
       "             enable_categorical=False, eval_metric=None, feature_types=None,\n",
       "             gamma=None, grow_policy=None, importance_type=None,\n",
       "             interaction_constraints=None, learning_rate=0.1, max_bin=None,\n",
       "             max_cat_threshold=None, max_cat_to_onehot=None,\n",
       "             max_delta_step=None, max_depth=3, max_leaf_nodes=0,\n",
       "             max_leaves=None, min_child_weight=None, missing=nan,\n",
       "             monotone_constraints=None, multi_strategy=None, n_estimators=None,\n",
       "             n_jobs=None, num_parallel_tree=None, ...)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;XGBRegressor<span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>XGBRegressor(base_score=None, booster=None, callbacks=None,\n",
       "             colsample_bylevel=None, colsample_bynode=None,\n",
       "             colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
       "             enable_categorical=False, eval_metric=None, feature_types=None,\n",
       "             gamma=None, grow_policy=None, importance_type=None,\n",
       "             interaction_constraints=None, learning_rate=0.1, max_bin=None,\n",
       "             max_cat_threshold=None, max_cat_to_onehot=None,\n",
       "             max_delta_step=None, max_depth=3, max_leaf_nodes=0,\n",
       "             max_leaves=None, min_child_weight=None, missing=nan,\n",
       "             monotone_constraints=None, multi_strategy=None, n_estimators=None,\n",
       "             n_jobs=None, num_parallel_tree=None, ...)</pre></div> </div></div></div></div>"
      ]
     },
     "execution_count": 140,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 140
  },
  {
   "cell_type": "code",
   "id": "37df1b59-0284-4cb4-8b3d-b5fd91718dac",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:55.772972Z",
     "start_time": "2024-08-05T19:27:55.765396Z"
    }
   },
   "source": [
    "pred_gs_model = gs_model.predict(df_test.drop('temp',axis=1))"
   ],
   "outputs": [],
   "execution_count": 141
  },
  {
   "cell_type": "markdown",
   "id": "57cec4f8-4826-4581-ab93-ebd66434bd43",
   "metadata": {},
   "source": [
    "## Performance metrics for gs model xgsboot"
   ]
  },
  {
   "cell_type": "code",
   "id": "3d4d808e-6511-4456-bd34-850de80ef28c",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:55.776827Z",
     "start_time": "2024-08-05T19:27:55.773562Z"
    }
   },
   "source": [
    "mae = mean_absolute_error(df_test['temp'], pred_gs_model)\n",
    "mse = mean_squared_error(df_test['temp'], pred_gs_model)\n",
    "rmse = mse ** 0.5\n",
    "r2 = r2_score(df_test['temp'], pred_gs_model)\n",
    "\n",
    "print(f\"Mean Absolute Error (MAE) for GS model: {mae}\")\n",
    "print(f\"Mean Squared Error (MSE) for GS model: {mse}\")\n",
    "print(f\"Root Mean Squared Error (RMSE) for GS model: {rmse}\")\n",
    "print(f\"R-squared (R2) for XGBoost baseline GS model: {r2}\")"
   ],
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Absolute Error (MAE) for GS model: 2.13359023002729\n",
      "Mean Squared Error (MSE) for GS model: 7.201928253148257\n",
      "Root Mean Squared Error (RMSE) for GS model: 2.6836408577058624\n",
      "R-squared (R2) for XGBoost baseline GS model: 0.7387057343166952\n"
     ]
    }
   ],
   "execution_count": 142
  },
  {
   "cell_type": "code",
   "id": "c892a525-fb35-4e88-a7fe-d79cb87953b4",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:55.779424Z",
     "start_time": "2024-08-05T19:27:55.777410Z"
    }
   },
   "source": [
    "df_test_w_preds['preds_gs'] = pred_gs_model"
   ],
   "outputs": [],
   "execution_count": 143
  },
  {
   "cell_type": "code",
   "id": "7bea19d4-77fa-47b3-b308-2f27d88ad235",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:55.781956Z",
     "start_time": "2024-08-05T19:27:55.779982Z"
    }
   },
   "source": [
    "def plot_forecast(actuals, predictions): \n",
    "    plt.plot(actuals, label='Actuals', marker='o')\n",
    "    plt.plot(predictions, label='Preds', marker='s')\n",
    "    plt.xlabel('Time')\n",
    "    plt.ylabel('Temperature')\n",
    "    plt.title('Predicted vs Actual temperature for XGBoost grid search model')\n",
    "    plt.show()"
   ],
   "outputs": [],
   "execution_count": 144
  },
  {
   "cell_type": "code",
   "id": "a2fce002-b5b7-4189-ad20-826577c3da91",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:56.117239Z",
     "start_time": "2024-08-05T19:27:55.783072Z"
    }
   },
   "source": [
    "plot_forecast(df_test_w_preds[['temp']], df_test_w_preds[['preds_gs']]) #rememer to not define the function again, just add in the new title when you call the function"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ],
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "execution_count": 145
  },
  {
   "cell_type": "markdown",
   "id": "1a5b9196-daaa-4b7d-a106-c1a304a2fbaf",
   "metadata": {},
   "source": [
    "## SKtime baseline model - very basic prediction model for comparative study"
   ]
  },
  {
   "cell_type": "code",
   "id": "60a9e8bb-4f44-4f1e-828e-e33ae5497513",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:56.601625Z",
     "start_time": "2024-08-05T19:27:56.123034Z"
    }
   },
   "source": [
    "from sktime.forecasting.naive import NaiveForecaster"
   ],
   "outputs": [],
   "execution_count": 146
  },
  {
   "cell_type": "markdown",
   "id": "e18417d7-a58a-47c9-b24a-71cdad5813e0",
   "metadata": {},
   "source": [
    "https://www.sktime.net/en/stable/api_reference/auto_generated/sktime.forecasting.naive.NaiveForecaster.html"
   ]
  },
  {
   "cell_type": "code",
   "id": "fee94d0b-eea1-41da-844d-8892cd5f37a7",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:56.621350Z",
     "start_time": "2024-08-05T19:27:56.607070Z"
    }
   },
   "source": [
    "forecaster_baseline = NaiveForecaster(strategy=\"mean\")\n",
    "forecaster_baseline.fit(df_train['temp'])"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "NaiveForecaster(strategy='mean')"
      ],
      "text/html": [
       "<style>#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 {color: black;background-color: white;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 pre{padding: 0;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 div.sk-toggleable {background-color: white;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 div.sk-estimator:hover {background-color: #d4ebff;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 div.sk-item {z-index: 1;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 div.sk-parallel::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 div.sk-parallel-item:only-child::after {width: 0;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06 div.sk-text-repr-fallback {display: none;}</style><div id='sk-61a8a6ac-2d5c-4f69-b6df-bab4ed1c4c06' class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>NaiveForecaster(strategy=&#x27;mean&#x27;)</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class=\"sk-container\" hidden><div class='sk-item'><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=UUID('c1deb100-0622-4a2f-bc85-e40b3c67e336') type=\"checkbox\" checked><label for=UUID('c1deb100-0622-4a2f-bc85-e40b3c67e336') class='sk-toggleable__label sk-toggleable__label-arrow'>NaiveForecaster</label><div class=\"sk-toggleable__content\"><pre>NaiveForecaster(strategy=&#x27;mean&#x27;)</pre></div></div></div></div></div>"
      ]
     },
     "execution_count": 147,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 147
  },
  {
   "cell_type": "code",
   "id": "b388c169-dd33-4260-8590-33d94c125bf1",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:56.636980Z",
     "start_time": "2024-08-05T19:27:56.624424Z"
    }
   },
   "source": [
    "preds_naive_baseline = forecaster_baseline.predict(df_test.index)"
   ],
   "outputs": [],
   "execution_count": 148
  },
  {
   "cell_type": "code",
   "id": "b24f8805-22e3-49f5-9498-55794fdf1317",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:56.643877Z",
     "start_time": "2024-08-05T19:27:56.638424Z"
    }
   },
   "source": [
    "preds_naive_baseline"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2023-05-22    12.189839\n",
       "2023-05-23    12.189839\n",
       "2023-05-24    12.189839\n",
       "2023-05-25    12.189839\n",
       "2023-05-26    12.189839\n",
       "                ...    \n",
       "2024-05-16    12.189839\n",
       "2024-05-17    12.189839\n",
       "2024-05-18    12.189839\n",
       "2024-05-19    12.189839\n",
       "2024-05-20    12.189839\n",
       "Freq: D, Name: temp, Length: 365, dtype: float64"
      ]
     },
     "execution_count": 149,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 149
  },
  {
   "cell_type": "code",
   "id": "9e6466e9-5f20-4a43-b4d4-e4f368dd9289",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:56.648953Z",
     "start_time": "2024-08-05T19:27:56.646310Z"
    }
   },
   "source": [
    "df_test_w_preds['sktime_naive'] = preds_naive_baseline"
   ],
   "outputs": [],
   "execution_count": 150
  },
  {
   "cell_type": "code",
   "id": "5dc8ccd9-f2c0-4d47-b0fd-01678ef42aa0",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:56.676678Z",
     "start_time": "2024-08-05T19:27:56.650281Z"
    }
   },
   "source": [
    "df_test_w_preds"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "            temp   dew  humidity  precip  precipprob  precipcover  snow  \\\n",
       "2023-05-22  15.1   6.9      64.3   0.000         0.0         0.00   0.0   \n",
       "2023-05-23  14.0   6.1      60.6   0.000         0.0         0.00   0.0   \n",
       "2023-05-24  15.8   6.7      61.2   0.000         0.0         0.00   0.0   \n",
       "2023-05-25  15.0   6.7      57.9   0.000         0.0         0.00   0.0   \n",
       "2023-05-26  14.2   6.9      63.5   0.000         0.0         0.00   0.0   \n",
       "...          ...   ...       ...     ...         ...          ...   ...   \n",
       "2024-05-16  14.2  11.0      73.4   0.000         0.0         0.00   0.0   \n",
       "2024-05-17  16.4  11.7      77.8   3.598       100.0        33.33   0.0   \n",
       "2024-05-18  15.8  10.5      69.7   0.797       100.0         8.33   0.0   \n",
       "2024-05-19  16.6  12.4      89.1  10.126       100.0        20.83   0.0   \n",
       "2024-05-20  15.1  10.3      70.2   0.000         0.0         0.00   0.0   \n",
       "\n",
       "            snowdepth  windgust  windspeed  winddir  sealevelpressure  \\\n",
       "2023-05-22        0.0      26.1       17.5     61.3            1027.2   \n",
       "2023-05-23        0.0      36.4       21.3     40.6            1025.3   \n",
       "2023-05-24        0.0      34.7       20.0     30.7            1021.7   \n",
       "2023-05-25        0.0      41.5       23.9     12.1            1021.2   \n",
       "2023-05-26        0.0      26.1       17.3     36.0            1026.5   \n",
       "...               ...       ...        ...      ...               ...   \n",
       "2024-05-16        0.0      35.2       21.0    183.4            1007.1   \n",
       "2024-05-17        0.0      30.5       21.0    149.7            1001.1   \n",
       "2024-05-18        0.0      25.0       15.2    147.1            1004.2   \n",
       "2024-05-19        0.0      18.4       10.1    213.9            1005.2   \n",
       "2024-05-20        0.0      17.4        9.4    194.8            1009.3   \n",
       "\n",
       "            cloudcover  visibility  solarradiation  solarenergy  uvindex  \\\n",
       "2023-05-22        55.6        27.2            99.0          8.7      4.0   \n",
       "2023-05-23        40.0        27.5           192.2         16.3      9.0   \n",
       "2023-05-24        43.9        35.0           156.4         13.6      7.0   \n",
       "2023-05-25        62.5        37.2            80.0          7.0      3.0   \n",
       "2023-05-26        27.0        29.2           147.4         12.5      7.0   \n",
       "...                ...         ...             ...          ...      ...   \n",
       "2024-05-16        86.1        14.9            71.5          6.2      2.0   \n",
       "2024-05-17        85.6        15.4            76.1          6.5      4.0   \n",
       "2024-05-18        52.3        19.4           118.8         10.3      9.0   \n",
       "2024-05-19        58.3        15.8            74.5          6.5      3.0   \n",
       "2024-05-20        41.4        21.7           177.8         15.5     10.0   \n",
       "\n",
       "            severerisk  moonphase  clusters_description  year  month_1  \\\n",
       "2023-05-22        10.0       0.00                   1.0  2023    False   \n",
       "2023-05-23        10.0       0.03                   1.0  2023    False   \n",
       "2023-05-24        10.0       0.06                   1.0  2023    False   \n",
       "2023-05-25        10.0       0.09                   1.0  2023    False   \n",
       "2023-05-26        10.0       0.12                   2.0  2023    False   \n",
       "...                ...        ...                   ...   ...      ...   \n",
       "2024-05-16        10.0       0.17                   1.0  2024    False   \n",
       "2024-05-17        10.0       0.20                   1.0  2024    False   \n",
       "2024-05-18        10.0       0.25                   0.0  2024    False   \n",
       "2024-05-19        10.0       0.27                   1.0  2024    False   \n",
       "2024-05-20        10.0       0.30                   1.0  2024    False   \n",
       "\n",
       "            month_2  month_3  month_4  month_5  month_6  month_7  month_8  \\\n",
       "2023-05-22    False    False    False     True    False    False    False   \n",
       "2023-05-23    False    False    False     True    False    False    False   \n",
       "2023-05-24    False    False    False     True    False    False    False   \n",
       "2023-05-25    False    False    False     True    False    False    False   \n",
       "2023-05-26    False    False    False     True    False    False    False   \n",
       "...             ...      ...      ...      ...      ...      ...      ...   \n",
       "2024-05-16    False    False    False     True    False    False    False   \n",
       "2024-05-17    False    False    False     True    False    False    False   \n",
       "2024-05-18    False    False    False     True    False    False    False   \n",
       "2024-05-19    False    False    False     True    False    False    False   \n",
       "2024-05-20    False    False    False     True    False    False    False   \n",
       "\n",
       "            month_9  month_10  month_11  month_12      preds   preds_gs  \\\n",
       "2023-05-22    False     False     False     False  14.836311  13.335446   \n",
       "2023-05-23    False     False     False     False  17.028198  15.511145   \n",
       "2023-05-24    False     False     False     False  15.288651  15.613107   \n",
       "2023-05-25    False     False     False     False  14.315332  13.680475   \n",
       "2023-05-26    False     False     False     False  14.030735  14.305593   \n",
       "...             ...       ...       ...       ...        ...        ...   \n",
       "2024-05-16    False     False     False     False  14.486135  16.180431   \n",
       "2024-05-17    False     False     False     False  16.443136  16.079826   \n",
       "2024-05-18    False     False     False     False  14.224728  16.050465   \n",
       "2024-05-19    False     False     False     False  17.508904  15.869523   \n",
       "2024-05-20    False     False     False     False  14.192161  15.756632   \n",
       "\n",
       "            sktime_naive  \n",
       "2023-05-22     12.189839  \n",
       "2023-05-23     12.189839  \n",
       "2023-05-24     12.189839  \n",
       "2023-05-25     12.189839  \n",
       "2023-05-26     12.189839  \n",
       "...                  ...  \n",
       "2024-05-16     12.189839  \n",
       "2024-05-17     12.189839  \n",
       "2024-05-18     12.189839  \n",
       "2024-05-19     12.189839  \n",
       "2024-05-20     12.189839  \n",
       "\n",
       "[365 rows x 36 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>clusters_description</th>\n",
       "      <th>year</th>\n",
       "      <th>month_1</th>\n",
       "      <th>month_2</th>\n",
       "      <th>month_3</th>\n",
       "      <th>month_4</th>\n",
       "      <th>month_5</th>\n",
       "      <th>month_6</th>\n",
       "      <th>month_7</th>\n",
       "      <th>month_8</th>\n",
       "      <th>month_9</th>\n",
       "      <th>month_10</th>\n",
       "      <th>month_11</th>\n",
       "      <th>month_12</th>\n",
       "      <th>preds</th>\n",
       "      <th>preds_gs</th>\n",
       "      <th>sktime_naive</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2023-05-22</th>\n",
       "      <td>15.1</td>\n",
       "      <td>6.9</td>\n",
       "      <td>64.3</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.1</td>\n",
       "      <td>17.5</td>\n",
       "      <td>61.3</td>\n",
       "      <td>1027.2</td>\n",
       "      <td>55.6</td>\n",
       "      <td>27.2</td>\n",
       "      <td>99.0</td>\n",
       "      <td>8.7</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.836311</td>\n",
       "      <td>13.335446</td>\n",
       "      <td>12.189839</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-23</th>\n",
       "      <td>14.0</td>\n",
       "      <td>6.1</td>\n",
       "      <td>60.6</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>36.4</td>\n",
       "      <td>21.3</td>\n",
       "      <td>40.6</td>\n",
       "      <td>1025.3</td>\n",
       "      <td>40.0</td>\n",
       "      <td>27.5</td>\n",
       "      <td>192.2</td>\n",
       "      <td>16.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>17.028198</td>\n",
       "      <td>15.511145</td>\n",
       "      <td>12.189839</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-24</th>\n",
       "      <td>15.8</td>\n",
       "      <td>6.7</td>\n",
       "      <td>61.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>34.7</td>\n",
       "      <td>20.0</td>\n",
       "      <td>30.7</td>\n",
       "      <td>1021.7</td>\n",
       "      <td>43.9</td>\n",
       "      <td>35.0</td>\n",
       "      <td>156.4</td>\n",
       "      <td>13.6</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>15.288651</td>\n",
       "      <td>15.613107</td>\n",
       "      <td>12.189839</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-25</th>\n",
       "      <td>15.0</td>\n",
       "      <td>6.7</td>\n",
       "      <td>57.9</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>41.5</td>\n",
       "      <td>23.9</td>\n",
       "      <td>12.1</td>\n",
       "      <td>1021.2</td>\n",
       "      <td>62.5</td>\n",
       "      <td>37.2</td>\n",
       "      <td>80.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.09</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.315332</td>\n",
       "      <td>13.680475</td>\n",
       "      <td>12.189839</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-26</th>\n",
       "      <td>14.2</td>\n",
       "      <td>6.9</td>\n",
       "      <td>63.5</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.1</td>\n",
       "      <td>17.3</td>\n",
       "      <td>36.0</td>\n",
       "      <td>1026.5</td>\n",
       "      <td>27.0</td>\n",
       "      <td>29.2</td>\n",
       "      <td>147.4</td>\n",
       "      <td>12.5</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.12</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.030735</td>\n",
       "      <td>14.305593</td>\n",
       "      <td>12.189839</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-16</th>\n",
       "      <td>14.2</td>\n",
       "      <td>11.0</td>\n",
       "      <td>73.4</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>35.2</td>\n",
       "      <td>21.0</td>\n",
       "      <td>183.4</td>\n",
       "      <td>1007.1</td>\n",
       "      <td>86.1</td>\n",
       "      <td>14.9</td>\n",
       "      <td>71.5</td>\n",
       "      <td>6.2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.17</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.486135</td>\n",
       "      <td>16.180431</td>\n",
       "      <td>12.189839</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-17</th>\n",
       "      <td>16.4</td>\n",
       "      <td>11.7</td>\n",
       "      <td>77.8</td>\n",
       "      <td>3.598</td>\n",
       "      <td>100.0</td>\n",
       "      <td>33.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.5</td>\n",
       "      <td>21.0</td>\n",
       "      <td>149.7</td>\n",
       "      <td>1001.1</td>\n",
       "      <td>85.6</td>\n",
       "      <td>15.4</td>\n",
       "      <td>76.1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.20</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>16.443136</td>\n",
       "      <td>16.079826</td>\n",
       "      <td>12.189839</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-18</th>\n",
       "      <td>15.8</td>\n",
       "      <td>10.5</td>\n",
       "      <td>69.7</td>\n",
       "      <td>0.797</td>\n",
       "      <td>100.0</td>\n",
       "      <td>8.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>15.2</td>\n",
       "      <td>147.1</td>\n",
       "      <td>1004.2</td>\n",
       "      <td>52.3</td>\n",
       "      <td>19.4</td>\n",
       "      <td>118.8</td>\n",
       "      <td>10.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.224728</td>\n",
       "      <td>16.050465</td>\n",
       "      <td>12.189839</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-19</th>\n",
       "      <td>16.6</td>\n",
       "      <td>12.4</td>\n",
       "      <td>89.1</td>\n",
       "      <td>10.126</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.4</td>\n",
       "      <td>10.1</td>\n",
       "      <td>213.9</td>\n",
       "      <td>1005.2</td>\n",
       "      <td>58.3</td>\n",
       "      <td>15.8</td>\n",
       "      <td>74.5</td>\n",
       "      <td>6.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.27</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>17.508904</td>\n",
       "      <td>15.869523</td>\n",
       "      <td>12.189839</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-20</th>\n",
       "      <td>15.1</td>\n",
       "      <td>10.3</td>\n",
       "      <td>70.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>9.4</td>\n",
       "      <td>194.8</td>\n",
       "      <td>1009.3</td>\n",
       "      <td>41.4</td>\n",
       "      <td>21.7</td>\n",
       "      <td>177.8</td>\n",
       "      <td>15.5</td>\n",
       "      <td>10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.30</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.192161</td>\n",
       "      <td>15.756632</td>\n",
       "      <td>12.189839</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>365 rows × 36 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 151,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 151
  },
  {
   "cell_type": "markdown",
   "id": "67a9ef63-8c12-4016-98ea-476a5e6c7ac7",
   "metadata": {},
   "source": [
    "## AUTO ARIMA"
   ]
  },
  {
   "cell_type": "code",
   "id": "2951c3b7-763f-4655-96ec-afa255e5263a",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:56.772629Z",
     "start_time": "2024-08-05T19:27:56.677709Z"
    }
   },
   "source": [
    "from sktime.forecasting.arima import AutoARIMA"
   ],
   "outputs": [],
   "execution_count": 152
  },
  {
   "cell_type": "code",
   "id": "117b8613-8a12-446c-ac75-57e4830dfecb",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:27:56.776909Z",
     "start_time": "2024-08-05T19:27:56.773378Z"
    }
   },
   "source": [
    "df_train_short = df_train[df_train.index > pd.to_datetime('2021-01-01')]"
   ],
   "outputs": [],
   "execution_count": 153
  },
  {
   "cell_type": "code",
   "id": "defe7518-0c3f-4e61-96ee-5925800fceb7",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:32:01.153001Z",
     "start_time": "2024-08-05T19:31:11.308335Z"
    }
   },
   "source": [
    "forecaster_arima = AutoARIMA(sp=12, suppress_warnings=True)\n",
    "forecaster_arima.fit(df_train_short['temp'])"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "AutoARIMA(sp=12, suppress_warnings=True)"
      ],
      "text/html": [
       "<style>#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 {color: black;background-color: white;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 pre{padding: 0;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 div.sk-toggleable {background-color: white;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 div.sk-item {z-index: 1;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 div.sk-parallel::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 div.sk-parallel-item:only-child::after {width: 0;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0 div.sk-text-repr-fallback {display: none;}</style><div id='sk-ec1a0c23-8c9e-47a5-b3a2-c1c58cf508e0' class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>AutoARIMA(sp=12, suppress_warnings=True)</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class=\"sk-container\" hidden><div class='sk-item'><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=UUID('40c1b07f-6ccc-4143-9898-82fafd471a3d') type=\"checkbox\" checked><label for=UUID('40c1b07f-6ccc-4143-9898-82fafd471a3d') class='sk-toggleable__label sk-toggleable__label-arrow'>AutoARIMA</label><div class=\"sk-toggleable__content\"><pre>AutoARIMA(sp=12, suppress_warnings=True)</pre></div></div></div></div></div>"
      ]
     },
     "execution_count": 160,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 160
  },
  {
   "cell_type": "code",
   "id": "73114254-6025-4592-befa-1464bd607cbb",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:32:01.183191Z",
     "start_time": "2024-08-05T19:32:01.155896Z"
    }
   },
   "source": [
    "preds_autoarima = forecaster_arima.predict(df_test.index)"
   ],
   "outputs": [],
   "execution_count": 161
  },
  {
   "cell_type": "code",
   "id": "eb921092-1523-4286-9c7e-4d182150ab46",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:32:01.188605Z",
     "start_time": "2024-08-05T19:32:01.184332Z"
    }
   },
   "source": [
    "preds_autoarima"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2023-05-22    13.984044\n",
       "2023-05-23    13.895126\n",
       "2023-05-24    13.759057\n",
       "2023-05-25    13.725513\n",
       "2023-05-26    13.632718\n",
       "                ...    \n",
       "2024-05-16    13.488740\n",
       "2024-05-17    13.489218\n",
       "2024-05-18    13.488745\n",
       "2024-05-19    13.489212\n",
       "2024-05-20    13.488751\n",
       "Freq: D, Name: temp, Length: 365, dtype: float64"
      ]
     },
     "execution_count": 162,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 162
  },
  {
   "cell_type": "code",
   "id": "1d10a50a-781c-47a4-aefc-405cfc16e74d",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:32:01.212864Z",
     "start_time": "2024-08-05T19:32:01.191901Z"
    }
   },
   "source": [
    "df_test_w_preds['preds_autoarima'] = preds_autoarima\n",
    "df_test_w_preds"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "            temp   dew  humidity  precip  precipprob  precipcover  snow  \\\n",
       "2023-05-22  15.1   6.9      64.3   0.000         0.0         0.00   0.0   \n",
       "2023-05-23  14.0   6.1      60.6   0.000         0.0         0.00   0.0   \n",
       "2023-05-24  15.8   6.7      61.2   0.000         0.0         0.00   0.0   \n",
       "2023-05-25  15.0   6.7      57.9   0.000         0.0         0.00   0.0   \n",
       "2023-05-26  14.2   6.9      63.5   0.000         0.0         0.00   0.0   \n",
       "...          ...   ...       ...     ...         ...          ...   ...   \n",
       "2024-05-16  14.2  11.0      73.4   0.000         0.0         0.00   0.0   \n",
       "2024-05-17  16.4  11.7      77.8   3.598       100.0        33.33   0.0   \n",
       "2024-05-18  15.8  10.5      69.7   0.797       100.0         8.33   0.0   \n",
       "2024-05-19  16.6  12.4      89.1  10.126       100.0        20.83   0.0   \n",
       "2024-05-20  15.1  10.3      70.2   0.000         0.0         0.00   0.0   \n",
       "\n",
       "            snowdepth  windgust  windspeed  winddir  sealevelpressure  \\\n",
       "2023-05-22        0.0      26.1       17.5     61.3            1027.2   \n",
       "2023-05-23        0.0      36.4       21.3     40.6            1025.3   \n",
       "2023-05-24        0.0      34.7       20.0     30.7            1021.7   \n",
       "2023-05-25        0.0      41.5       23.9     12.1            1021.2   \n",
       "2023-05-26        0.0      26.1       17.3     36.0            1026.5   \n",
       "...               ...       ...        ...      ...               ...   \n",
       "2024-05-16        0.0      35.2       21.0    183.4            1007.1   \n",
       "2024-05-17        0.0      30.5       21.0    149.7            1001.1   \n",
       "2024-05-18        0.0      25.0       15.2    147.1            1004.2   \n",
       "2024-05-19        0.0      18.4       10.1    213.9            1005.2   \n",
       "2024-05-20        0.0      17.4        9.4    194.8            1009.3   \n",
       "\n",
       "            cloudcover  visibility  solarradiation  solarenergy  uvindex  \\\n",
       "2023-05-22        55.6        27.2            99.0          8.7      4.0   \n",
       "2023-05-23        40.0        27.5           192.2         16.3      9.0   \n",
       "2023-05-24        43.9        35.0           156.4         13.6      7.0   \n",
       "2023-05-25        62.5        37.2            80.0          7.0      3.0   \n",
       "2023-05-26        27.0        29.2           147.4         12.5      7.0   \n",
       "...                ...         ...             ...          ...      ...   \n",
       "2024-05-16        86.1        14.9            71.5          6.2      2.0   \n",
       "2024-05-17        85.6        15.4            76.1          6.5      4.0   \n",
       "2024-05-18        52.3        19.4           118.8         10.3      9.0   \n",
       "2024-05-19        58.3        15.8            74.5          6.5      3.0   \n",
       "2024-05-20        41.4        21.7           177.8         15.5     10.0   \n",
       "\n",
       "            severerisk  moonphase  clusters_description  year  month_1  \\\n",
       "2023-05-22        10.0       0.00                   1.0  2023    False   \n",
       "2023-05-23        10.0       0.03                   1.0  2023    False   \n",
       "2023-05-24        10.0       0.06                   1.0  2023    False   \n",
       "2023-05-25        10.0       0.09                   1.0  2023    False   \n",
       "2023-05-26        10.0       0.12                   2.0  2023    False   \n",
       "...                ...        ...                   ...   ...      ...   \n",
       "2024-05-16        10.0       0.17                   1.0  2024    False   \n",
       "2024-05-17        10.0       0.20                   1.0  2024    False   \n",
       "2024-05-18        10.0       0.25                   0.0  2024    False   \n",
       "2024-05-19        10.0       0.27                   1.0  2024    False   \n",
       "2024-05-20        10.0       0.30                   1.0  2024    False   \n",
       "\n",
       "            month_2  month_3  month_4  month_5  month_6  month_7  month_8  \\\n",
       "2023-05-22    False    False    False     True    False    False    False   \n",
       "2023-05-23    False    False    False     True    False    False    False   \n",
       "2023-05-24    False    False    False     True    False    False    False   \n",
       "2023-05-25    False    False    False     True    False    False    False   \n",
       "2023-05-26    False    False    False     True    False    False    False   \n",
       "...             ...      ...      ...      ...      ...      ...      ...   \n",
       "2024-05-16    False    False    False     True    False    False    False   \n",
       "2024-05-17    False    False    False     True    False    False    False   \n",
       "2024-05-18    False    False    False     True    False    False    False   \n",
       "2024-05-19    False    False    False     True    False    False    False   \n",
       "2024-05-20    False    False    False     True    False    False    False   \n",
       "\n",
       "            month_9  month_10  month_11  month_12      preds   preds_gs  \\\n",
       "2023-05-22    False     False     False     False  14.836311  13.335446   \n",
       "2023-05-23    False     False     False     False  17.028198  15.511145   \n",
       "2023-05-24    False     False     False     False  15.288651  15.613107   \n",
       "2023-05-25    False     False     False     False  14.315332  13.680475   \n",
       "2023-05-26    False     False     False     False  14.030735  14.305593   \n",
       "...             ...       ...       ...       ...        ...        ...   \n",
       "2024-05-16    False     False     False     False  14.486135  16.180431   \n",
       "2024-05-17    False     False     False     False  16.443136  16.079826   \n",
       "2024-05-18    False     False     False     False  14.224728  16.050465   \n",
       "2024-05-19    False     False     False     False  17.508904  15.869523   \n",
       "2024-05-20    False     False     False     False  14.192161  15.756632   \n",
       "\n",
       "            sktime_naive  preds_autoarima  \n",
       "2023-05-22     12.189839        13.984044  \n",
       "2023-05-23     12.189839        13.895126  \n",
       "2023-05-24     12.189839        13.759057  \n",
       "2023-05-25     12.189839        13.725513  \n",
       "2023-05-26     12.189839        13.632718  \n",
       "...                  ...              ...  \n",
       "2024-05-16     12.189839        13.488740  \n",
       "2024-05-17     12.189839        13.489218  \n",
       "2024-05-18     12.189839        13.488745  \n",
       "2024-05-19     12.189839        13.489212  \n",
       "2024-05-20     12.189839        13.488751  \n",
       "\n",
       "[365 rows x 37 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>clusters_description</th>\n",
       "      <th>year</th>\n",
       "      <th>month_1</th>\n",
       "      <th>month_2</th>\n",
       "      <th>month_3</th>\n",
       "      <th>month_4</th>\n",
       "      <th>month_5</th>\n",
       "      <th>month_6</th>\n",
       "      <th>month_7</th>\n",
       "      <th>month_8</th>\n",
       "      <th>month_9</th>\n",
       "      <th>month_10</th>\n",
       "      <th>month_11</th>\n",
       "      <th>month_12</th>\n",
       "      <th>preds</th>\n",
       "      <th>preds_gs</th>\n",
       "      <th>sktime_naive</th>\n",
       "      <th>preds_autoarima</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2023-05-22</th>\n",
       "      <td>15.1</td>\n",
       "      <td>6.9</td>\n",
       "      <td>64.3</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.1</td>\n",
       "      <td>17.5</td>\n",
       "      <td>61.3</td>\n",
       "      <td>1027.2</td>\n",
       "      <td>55.6</td>\n",
       "      <td>27.2</td>\n",
       "      <td>99.0</td>\n",
       "      <td>8.7</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.836311</td>\n",
       "      <td>13.335446</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.984044</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-23</th>\n",
       "      <td>14.0</td>\n",
       "      <td>6.1</td>\n",
       "      <td>60.6</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>36.4</td>\n",
       "      <td>21.3</td>\n",
       "      <td>40.6</td>\n",
       "      <td>1025.3</td>\n",
       "      <td>40.0</td>\n",
       "      <td>27.5</td>\n",
       "      <td>192.2</td>\n",
       "      <td>16.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>17.028198</td>\n",
       "      <td>15.511145</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.895126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-24</th>\n",
       "      <td>15.8</td>\n",
       "      <td>6.7</td>\n",
       "      <td>61.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>34.7</td>\n",
       "      <td>20.0</td>\n",
       "      <td>30.7</td>\n",
       "      <td>1021.7</td>\n",
       "      <td>43.9</td>\n",
       "      <td>35.0</td>\n",
       "      <td>156.4</td>\n",
       "      <td>13.6</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>15.288651</td>\n",
       "      <td>15.613107</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.759057</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-25</th>\n",
       "      <td>15.0</td>\n",
       "      <td>6.7</td>\n",
       "      <td>57.9</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>41.5</td>\n",
       "      <td>23.9</td>\n",
       "      <td>12.1</td>\n",
       "      <td>1021.2</td>\n",
       "      <td>62.5</td>\n",
       "      <td>37.2</td>\n",
       "      <td>80.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.09</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.315332</td>\n",
       "      <td>13.680475</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.725513</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-26</th>\n",
       "      <td>14.2</td>\n",
       "      <td>6.9</td>\n",
       "      <td>63.5</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.1</td>\n",
       "      <td>17.3</td>\n",
       "      <td>36.0</td>\n",
       "      <td>1026.5</td>\n",
       "      <td>27.0</td>\n",
       "      <td>29.2</td>\n",
       "      <td>147.4</td>\n",
       "      <td>12.5</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.12</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.030735</td>\n",
       "      <td>14.305593</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.632718</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-16</th>\n",
       "      <td>14.2</td>\n",
       "      <td>11.0</td>\n",
       "      <td>73.4</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>35.2</td>\n",
       "      <td>21.0</td>\n",
       "      <td>183.4</td>\n",
       "      <td>1007.1</td>\n",
       "      <td>86.1</td>\n",
       "      <td>14.9</td>\n",
       "      <td>71.5</td>\n",
       "      <td>6.2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.17</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.486135</td>\n",
       "      <td>16.180431</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.488740</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-17</th>\n",
       "      <td>16.4</td>\n",
       "      <td>11.7</td>\n",
       "      <td>77.8</td>\n",
       "      <td>3.598</td>\n",
       "      <td>100.0</td>\n",
       "      <td>33.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.5</td>\n",
       "      <td>21.0</td>\n",
       "      <td>149.7</td>\n",
       "      <td>1001.1</td>\n",
       "      <td>85.6</td>\n",
       "      <td>15.4</td>\n",
       "      <td>76.1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.20</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>16.443136</td>\n",
       "      <td>16.079826</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.489218</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-18</th>\n",
       "      <td>15.8</td>\n",
       "      <td>10.5</td>\n",
       "      <td>69.7</td>\n",
       "      <td>0.797</td>\n",
       "      <td>100.0</td>\n",
       "      <td>8.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>15.2</td>\n",
       "      <td>147.1</td>\n",
       "      <td>1004.2</td>\n",
       "      <td>52.3</td>\n",
       "      <td>19.4</td>\n",
       "      <td>118.8</td>\n",
       "      <td>10.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.224728</td>\n",
       "      <td>16.050465</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.488745</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-19</th>\n",
       "      <td>16.6</td>\n",
       "      <td>12.4</td>\n",
       "      <td>89.1</td>\n",
       "      <td>10.126</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.4</td>\n",
       "      <td>10.1</td>\n",
       "      <td>213.9</td>\n",
       "      <td>1005.2</td>\n",
       "      <td>58.3</td>\n",
       "      <td>15.8</td>\n",
       "      <td>74.5</td>\n",
       "      <td>6.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.27</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>17.508904</td>\n",
       "      <td>15.869523</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.489212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-20</th>\n",
       "      <td>15.1</td>\n",
       "      <td>10.3</td>\n",
       "      <td>70.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>9.4</td>\n",
       "      <td>194.8</td>\n",
       "      <td>1009.3</td>\n",
       "      <td>41.4</td>\n",
       "      <td>21.7</td>\n",
       "      <td>177.8</td>\n",
       "      <td>15.5</td>\n",
       "      <td>10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.30</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.192161</td>\n",
       "      <td>15.756632</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.488751</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>365 rows × 37 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 163,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 163
  },
  {
   "cell_type": "markdown",
   "id": "44f3e3d7-9d80-4ca5-b1e3-3c0ddd1cd883",
   "metadata": {},
   "source": [
    "## SARIMAX FROM SKTIME - with all features"
   ]
  },
  {
   "cell_type": "code",
   "id": "b99bcde7-ac56-4dda-a027-c4d193c48637",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:54:28.359952Z",
     "start_time": "2024-08-05T19:54:28.354694Z"
    }
   },
   "source": [
    "from sktime.forecasting.sarimax import SARIMAX\n",
    "from statsmodels.graphics.tsaplots import plot_acf, plot_pacf\n"
   ],
   "outputs": [],
   "execution_count": 207
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:54:54.296874Z",
     "start_time": "2024-08-05T19:54:53.860780Z"
    }
   },
   "cell_type": "code",
   "source": [
    "fig, ax = plt.subplots(2, 1, figsize=(12, 8))\n",
    "plot_acf(df_london['temp'], lags=40, ax=ax[0])\n",
    "plot_pacf(df_london['temp'], lags=40, ax=ax[1])\n",
    "plt.show()"
   ],
   "id": "ceea97dc7318bbca",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 1200x800 with 2 Axes>"
      ],
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "execution_count": 208
  },
  {
   "cell_type": "code",
   "id": "cd3a70d0-903a-4a6c-9bf6-f095490a8612",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:57:31.332942Z",
     "start_time": "2024-08-05T19:56:57.348523Z"
    }
   },
   "source": [
    "forecaster_sarimax = SARIMAX(order=(2, 0, 1), trend=\"t\", seasonal_order=(1, 0, 0, 365))\n",
    "forecaster_sarimax.fit(df_train) "
   ],
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/statsmodels/tsa/statespace/sarimax.py:966: UserWarning: Non-stationary starting autoregressive parameters found. Using zeros as starting parameters.\n",
      "  warn('Non-stationary starting autoregressive parameters'\n",
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/statsmodels/tsa/statespace/sarimax.py:978: UserWarning: Non-invertible starting MA parameters found. Using zeros as starting parameters.\n",
      "  warn('Non-invertible starting MA parameters found.'\n"
     ]
    },
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001B[0;31m---------------------------------------------------------------------------\u001B[0m",
      "\u001B[0;31mKeyboardInterrupt\u001B[0m                         Traceback (most recent call last)",
      "Cell \u001B[0;32mIn[209], line 2\u001B[0m\n\u001B[1;32m      1\u001B[0m forecaster_sarimax \u001B[38;5;241m=\u001B[39m SARIMAX(order\u001B[38;5;241m=\u001B[39m(\u001B[38;5;241m2\u001B[39m, \u001B[38;5;241m0\u001B[39m, \u001B[38;5;241m1\u001B[39m), trend\u001B[38;5;241m=\u001B[39m\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mt\u001B[39m\u001B[38;5;124m\"\u001B[39m, seasonal_order\u001B[38;5;241m=\u001B[39m(\u001B[38;5;241m1\u001B[39m, \u001B[38;5;241m0\u001B[39m, \u001B[38;5;241m0\u001B[39m, \u001B[38;5;241m365\u001B[39m))\n\u001B[0;32m----> 2\u001B[0m \u001B[43mforecaster_sarimax\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mfit\u001B[49m\u001B[43m(\u001B[49m\u001B[43mdf_train\u001B[49m\u001B[43m)\u001B[49m \n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/sktime/forecasting/base/_base.py:394\u001B[0m, in \u001B[0;36mBaseForecaster.fit\u001B[0;34m(self, y, X, fh)\u001B[0m\n\u001B[1;32m    391\u001B[0m     \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_fit(y\u001B[38;5;241m=\u001B[39my_inner, X\u001B[38;5;241m=\u001B[39mX_inner, fh\u001B[38;5;241m=\u001B[39mfh)\n\u001B[1;32m    392\u001B[0m \u001B[38;5;28;01melse\u001B[39;00m:\n\u001B[1;32m    393\u001B[0m     \u001B[38;5;66;03m# otherwise we call the vectorized version of fit\u001B[39;00m\n\u001B[0;32m--> 394\u001B[0m     \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_vectorize\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[38;5;124;43mfit\u001B[39;49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43my\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43my_inner\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mX\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mX_inner\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mfh\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mfh\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    396\u001B[0m \u001B[38;5;66;03m# this should happen last\u001B[39;00m\n\u001B[1;32m    397\u001B[0m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_is_fitted \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;01mTrue\u001B[39;00m\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/sktime/forecasting/base/_base.py:1923\u001B[0m, in \u001B[0;36mBaseForecaster._vectorize\u001B[0;34m(self, methodname, **kwargs)\u001B[0m\n\u001B[1;32m   1920\u001B[0m     \u001B[38;5;28;01melse\u001B[39;00m:\n\u001B[1;32m   1921\u001B[0m         forecasters_ \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39mforecasters_\n\u001B[0;32m-> 1923\u001B[0m     \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39mforecasters_ \u001B[38;5;241m=\u001B[39m \u001B[43my\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mvectorize_est\u001B[49m\u001B[43m(\u001B[49m\n\u001B[1;32m   1924\u001B[0m \u001B[43m        \u001B[49m\u001B[43mforecasters_\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m   1925\u001B[0m \u001B[43m        \u001B[49m\u001B[43mmethod\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mmethodname\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m   1926\u001B[0m \u001B[43m        \u001B[49m\u001B[43mbackend\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mget_config\u001B[49m\u001B[43m(\u001B[49m\u001B[43m)\u001B[49m\u001B[43m[\u001B[49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[38;5;124;43mbackend:parallel\u001B[39;49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[43m]\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m   1927\u001B[0m \u001B[43m        \u001B[49m\u001B[43mbackend_params\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mget_config\u001B[49m\u001B[43m(\u001B[49m\u001B[43m)\u001B[49m\u001B[43m[\u001B[49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[38;5;124;43mbackend:parallel:params\u001B[39;49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[43m]\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m   1928\u001B[0m \u001B[43m        \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mkwargs\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m   1929\u001B[0m \u001B[43m    \u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m   1930\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[38;5;28mself\u001B[39m\n\u001B[1;32m   1932\u001B[0m \u001B[38;5;66;03m# predict-like methods: return as list, then run through reconstruct\u001B[39;00m\n\u001B[1;32m   1933\u001B[0m \u001B[38;5;66;03m# to obtain a pandas based container in one of the pandas mtype formats\u001B[39;00m\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/sktime/datatypes/_vectorize.py:630\u001B[0m, in \u001B[0;36mVectorizedDF.vectorize_est\u001B[0;34m(self, estimator, method, args, args_rowvec, return_type, rowname_default, colname_default, varname_of_self, backend, backend_params, **kwargs)\u001B[0m\n\u001B[1;32m    616\u001B[0m vec_zip \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mzip\u001B[39m(\n\u001B[1;32m    617\u001B[0m     \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39mitems(),\n\u001B[1;32m    618\u001B[0m     explode(args, iterate_as\u001B[38;5;241m=\u001B[39miterate_as, iterate_cols\u001B[38;5;241m=\u001B[39miterate_cols),\n\u001B[1;32m    619\u001B[0m     explode(args_rowvec, iterate_as\u001B[38;5;241m=\u001B[39miterate_as, iterate_cols\u001B[38;5;241m=\u001B[39m\u001B[38;5;28;01mFalse\u001B[39;00m),\n\u001B[1;32m    620\u001B[0m     estimators,\n\u001B[1;32m    621\u001B[0m )\n\u001B[1;32m    623\u001B[0m meta \u001B[38;5;241m=\u001B[39m {\n\u001B[1;32m    624\u001B[0m     \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mmethod\u001B[39m\u001B[38;5;124m\"\u001B[39m: method,\n\u001B[1;32m    625\u001B[0m     \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mvarname_of_self\u001B[39m\u001B[38;5;124m\"\u001B[39m: varname_of_self,\n\u001B[1;32m    626\u001B[0m     \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mrowname_default\u001B[39m\u001B[38;5;124m\"\u001B[39m: rowname_default,\n\u001B[1;32m    627\u001B[0m     \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mcolname_default\u001B[39m\u001B[38;5;124m\"\u001B[39m: colname_default,\n\u001B[1;32m    628\u001B[0m }\n\u001B[0;32m--> 630\u001B[0m ret \u001B[38;5;241m=\u001B[39m \u001B[43mparallelize\u001B[49m\u001B[43m(\u001B[49m\n\u001B[1;32m    631\u001B[0m \u001B[43m    \u001B[49m\u001B[43mfun\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_vectorize_est_single\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    632\u001B[0m \u001B[43m    \u001B[49m\u001B[38;5;28;43miter\u001B[39;49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mvec_zip\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    633\u001B[0m \u001B[43m    \u001B[49m\u001B[43mmeta\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mmeta\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    634\u001B[0m \u001B[43m    \u001B[49m\u001B[43mbackend\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mbackend\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    635\u001B[0m \u001B[43m    \u001B[49m\u001B[43mbackend_params\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mbackend_params\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    636\u001B[0m \u001B[43m\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    638\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m return_type \u001B[38;5;241m==\u001B[39m \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mpd.DataFrame\u001B[39m\u001B[38;5;124m\"\u001B[39m:\n\u001B[1;32m    639\u001B[0m     df_long \u001B[38;5;241m=\u001B[39m pd\u001B[38;5;241m.\u001B[39mDataFrame(ret)\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/sktime/utils/parallel.py:72\u001B[0m, in \u001B[0;36mparallelize\u001B[0;34m(fun, iter, meta, backend, backend_params)\u001B[0m\n\u001B[1;32m     69\u001B[0m backend_name \u001B[38;5;241m=\u001B[39m backend_dict[backend]\n\u001B[1;32m     70\u001B[0m para_fun \u001B[38;5;241m=\u001B[39m para_dict[backend_name]\n\u001B[0;32m---> 72\u001B[0m ret \u001B[38;5;241m=\u001B[39m \u001B[43mpara_fun\u001B[49m\u001B[43m(\u001B[49m\n\u001B[1;32m     73\u001B[0m \u001B[43m    \u001B[49m\u001B[43mfun\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mfun\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;28;43miter\u001B[39;49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;28;43miter\u001B[39;49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mmeta\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mmeta\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mbackend\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mbackend\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mbackend_params\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mbackend_params\u001B[49m\n\u001B[1;32m     74\u001B[0m \u001B[43m\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m     75\u001B[0m \u001B[38;5;28;01mreturn\u001B[39;00m ret\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/sktime/utils/parallel.py:92\u001B[0m, in \u001B[0;36m_parallelize_none\u001B[0;34m(fun, iter, meta, backend, backend_params)\u001B[0m\n\u001B[1;32m     90\u001B[0m \u001B[38;5;28;01mdef\u001B[39;00m \u001B[38;5;21m_parallelize_none\u001B[39m(fun, \u001B[38;5;28miter\u001B[39m, meta, backend, backend_params):\n\u001B[1;32m     91\u001B[0m \u001B[38;5;250m    \u001B[39m\u001B[38;5;124;03m\"\"\"Execute loop via simple sequential list comprehension.\"\"\"\u001B[39;00m\n\u001B[0;32m---> 92\u001B[0m     ret \u001B[38;5;241m=\u001B[39m [fun(x, meta\u001B[38;5;241m=\u001B[39mmeta) \u001B[38;5;28;01mfor\u001B[39;00m x \u001B[38;5;129;01min\u001B[39;00m \u001B[38;5;28miter\u001B[39m]\n\u001B[1;32m     93\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m ret\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/sktime/utils/parallel.py:92\u001B[0m, in \u001B[0;36m<listcomp>\u001B[0;34m(.0)\u001B[0m\n\u001B[1;32m     90\u001B[0m \u001B[38;5;28;01mdef\u001B[39;00m \u001B[38;5;21m_parallelize_none\u001B[39m(fun, \u001B[38;5;28miter\u001B[39m, meta, backend, backend_params):\n\u001B[1;32m     91\u001B[0m \u001B[38;5;250m    \u001B[39m\u001B[38;5;124;03m\"\"\"Execute loop via simple sequential list comprehension.\"\"\"\u001B[39;00m\n\u001B[0;32m---> 92\u001B[0m     ret \u001B[38;5;241m=\u001B[39m [\u001B[43mfun\u001B[49m\u001B[43m(\u001B[49m\u001B[43mx\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mmeta\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mmeta\u001B[49m\u001B[43m)\u001B[49m \u001B[38;5;28;01mfor\u001B[39;00m x \u001B[38;5;129;01min\u001B[39;00m \u001B[38;5;28miter\u001B[39m]\n\u001B[1;32m     93\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m ret\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/sktime/datatypes/_vectorize.py:679\u001B[0m, in \u001B[0;36mVectorizedDF._vectorize_est_single\u001B[0;34m(self, vec_tuple, meta)\u001B[0m\n\u001B[1;32m    676\u001B[0m     args_i[varname_of_self] \u001B[38;5;241m=\u001B[39m group\n\u001B[1;32m    678\u001B[0m est_i_method \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mgetattr\u001B[39m(est_i, method)\n\u001B[0;32m--> 679\u001B[0m est_i_result \u001B[38;5;241m=\u001B[39m \u001B[43mest_i_method\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43margs_i\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    681\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m group_name \u001B[38;5;129;01mis\u001B[39;00m \u001B[38;5;28;01mNone\u001B[39;00m:\n\u001B[1;32m    682\u001B[0m     group_name \u001B[38;5;241m=\u001B[39m rowname_default\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/sktime/forecasting/base/_base.py:391\u001B[0m, in \u001B[0;36mBaseForecaster.fit\u001B[0;34m(self, y, X, fh)\u001B[0m\n\u001B[1;32m    389\u001B[0m \u001B[38;5;66;03m# we call the ordinary _fit if no looping/vectorization needed\u001B[39;00m\n\u001B[1;32m    390\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m \u001B[38;5;129;01mnot\u001B[39;00m vectorization_needed:\n\u001B[0;32m--> 391\u001B[0m     \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_fit\u001B[49m\u001B[43m(\u001B[49m\u001B[43my\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43my_inner\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mX\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mX_inner\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mfh\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mfh\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    392\u001B[0m \u001B[38;5;28;01melse\u001B[39;00m:\n\u001B[1;32m    393\u001B[0m     \u001B[38;5;66;03m# otherwise we call the vectorized version of fit\u001B[39;00m\n\u001B[1;32m    394\u001B[0m     \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_vectorize(\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mfit\u001B[39m\u001B[38;5;124m\"\u001B[39m, y\u001B[38;5;241m=\u001B[39my_inner, X\u001B[38;5;241m=\u001B[39mX_inner, fh\u001B[38;5;241m=\u001B[39mfh)\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/sktime/forecasting/base/adapters/_statsmodels.py:60\u001B[0m, in \u001B[0;36m_StatsModelsAdapter._fit\u001B[0;34m(self, y, X, fh)\u001B[0m\n\u001B[1;32m     58\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m \u001B[38;5;28misinstance\u001B[39m(y, pd\u001B[38;5;241m.\u001B[39mSeries) \u001B[38;5;129;01mand\u001B[39;00m pd\u001B[38;5;241m.\u001B[39mapi\u001B[38;5;241m.\u001B[39mtypes\u001B[38;5;241m.\u001B[39mis_integer_dtype(y\u001B[38;5;241m.\u001B[39mindex):\n\u001B[1;32m     59\u001B[0m     y, X \u001B[38;5;241m=\u001B[39m _coerce_int_to_range_index(y, X)\n\u001B[0;32m---> 60\u001B[0m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_fit_forecaster\u001B[49m\u001B[43m(\u001B[49m\u001B[43my\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mX\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m     61\u001B[0m \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[38;5;28mself\u001B[39m\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/sktime/forecasting/sarimax.py:325\u001B[0m, in \u001B[0;36mSARIMAX._fit_forecaster\u001B[0;34m(self, y, X)\u001B[0m\n\u001B[1;32m    302\u001B[0m \u001B[38;5;28;01mfrom\u001B[39;00m \u001B[38;5;21;01mstatsmodels\u001B[39;00m\u001B[38;5;21;01m.\u001B[39;00m\u001B[38;5;21;01mtsa\u001B[39;00m\u001B[38;5;21;01m.\u001B[39;00m\u001B[38;5;21;01mapi\u001B[39;00m \u001B[38;5;28;01mimport\u001B[39;00m SARIMAX \u001B[38;5;28;01mas\u001B[39;00m _SARIMAX\n\u001B[1;32m    304\u001B[0m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_forecaster \u001B[38;5;241m=\u001B[39m _SARIMAX(\n\u001B[1;32m    305\u001B[0m     endog\u001B[38;5;241m=\u001B[39my,\n\u001B[1;32m    306\u001B[0m     exog\u001B[38;5;241m=\u001B[39mX,\n\u001B[0;32m   (...)\u001B[0m\n\u001B[1;32m    323\u001B[0m     validate_specification\u001B[38;5;241m=\u001B[39m\u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39mvalidate_specification,\n\u001B[1;32m    324\u001B[0m )\n\u001B[0;32m--> 325\u001B[0m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_fitted_forecaster \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_forecaster\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mfit\u001B[49m\u001B[43m(\u001B[49m\n\u001B[1;32m    326\u001B[0m \u001B[43m    \u001B[49m\u001B[43mdisp\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mdisp\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    327\u001B[0m \u001B[43m    \u001B[49m\u001B[43mstart_params\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mstart_params\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    328\u001B[0m \u001B[43m    \u001B[49m\u001B[43mtransformed\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mtransformed\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    329\u001B[0m \u001B[43m    \u001B[49m\u001B[43mincludes_fixed\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mincludes_fixed\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    330\u001B[0m \u001B[43m    \u001B[49m\u001B[43mcov_type\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mcov_type\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    331\u001B[0m \u001B[43m    \u001B[49m\u001B[43mcov_kwds\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mcov_kwds\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    332\u001B[0m \u001B[43m    \u001B[49m\u001B[43mmethod\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mmethod\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    333\u001B[0m \u001B[43m    \u001B[49m\u001B[43mmaxiter\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mmaxiter\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    334\u001B[0m \u001B[43m    \u001B[49m\u001B[43mfull_output\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mfull_output\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    335\u001B[0m \u001B[43m    \u001B[49m\u001B[43mcallback\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mcallback\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    336\u001B[0m \u001B[43m    \u001B[49m\u001B[43mreturn_params\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mreturn_params\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    337\u001B[0m \u001B[43m    \u001B[49m\u001B[43moptim_score\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43moptim_score\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    338\u001B[0m \u001B[43m    \u001B[49m\u001B[43moptim_complex_step\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43moptim_complex_step\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    339\u001B[0m \u001B[43m    \u001B[49m\u001B[43moptim_hessian\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43moptim_hessian\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    340\u001B[0m \u001B[43m    \u001B[49m\u001B[43mlow_memory\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mlow_memory\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    341\u001B[0m \u001B[43m\u001B[49m\u001B[43m)\u001B[49m\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/statsmodels/tsa/statespace/mlemodel.py:703\u001B[0m, in \u001B[0;36mMLEModel.fit\u001B[0;34m(self, start_params, transformed, includes_fixed, cov_type, cov_kwds, method, maxiter, full_output, disp, callback, return_params, optim_score, optim_complex_step, optim_hessian, flags, low_memory, **kwargs)\u001B[0m\n\u001B[1;32m    701\u001B[0m         flags[\u001B[38;5;124m'\u001B[39m\u001B[38;5;124mhessian_method\u001B[39m\u001B[38;5;124m'\u001B[39m] \u001B[38;5;241m=\u001B[39m optim_hessian\n\u001B[1;32m    702\u001B[0m     fargs \u001B[38;5;241m=\u001B[39m (flags,)\n\u001B[0;32m--> 703\u001B[0m     mlefit \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;43msuper\u001B[39;49m\u001B[43m(\u001B[49m\u001B[43m)\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mfit\u001B[49m\u001B[43m(\u001B[49m\u001B[43mstart_params\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mmethod\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mmethod\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    704\u001B[0m \u001B[43m                         \u001B[49m\u001B[43mfargs\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mfargs\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    705\u001B[0m \u001B[43m                         \u001B[49m\u001B[43mmaxiter\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mmaxiter\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    706\u001B[0m \u001B[43m                         \u001B[49m\u001B[43mfull_output\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mfull_output\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    707\u001B[0m \u001B[43m                         \u001B[49m\u001B[43mdisp\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mdisp\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mcallback\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mcallback\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    708\u001B[0m \u001B[43m                         \u001B[49m\u001B[43mskip_hessian\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;28;43;01mTrue\u001B[39;49;00m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mkwargs\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    710\u001B[0m \u001B[38;5;66;03m# Just return the fitted parameters if requested\u001B[39;00m\n\u001B[1;32m    711\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m return_params:\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/statsmodels/base/model.py:566\u001B[0m, in \u001B[0;36mLikelihoodModel.fit\u001B[0;34m(self, start_params, method, maxiter, full_output, disp, fargs, callback, retall, skip_hessian, **kwargs)\u001B[0m\n\u001B[1;32m    563\u001B[0m     \u001B[38;5;28;01mdel\u001B[39;00m kwargs[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124muse_t\u001B[39m\u001B[38;5;124m\"\u001B[39m]\n\u001B[1;32m    565\u001B[0m optimizer \u001B[38;5;241m=\u001B[39m Optimizer()\n\u001B[0;32m--> 566\u001B[0m xopt, retvals, optim_settings \u001B[38;5;241m=\u001B[39m \u001B[43moptimizer\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_fit\u001B[49m\u001B[43m(\u001B[49m\u001B[43mf\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mscore\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mstart_params\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    567\u001B[0m \u001B[43m                                               \u001B[49m\u001B[43mfargs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mkwargs\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    568\u001B[0m \u001B[43m                                               \u001B[49m\u001B[43mhessian\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mhess\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    569\u001B[0m \u001B[43m                                               \u001B[49m\u001B[43mmethod\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mmethod\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    570\u001B[0m \u001B[43m                                               \u001B[49m\u001B[43mdisp\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mdisp\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    571\u001B[0m \u001B[43m                                               \u001B[49m\u001B[43mmaxiter\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mmaxiter\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    572\u001B[0m \u001B[43m                                               \u001B[49m\u001B[43mcallback\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mcallback\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    573\u001B[0m \u001B[43m                                               \u001B[49m\u001B[43mretall\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mretall\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    574\u001B[0m \u001B[43m                                               \u001B[49m\u001B[43mfull_output\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mfull_output\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    575\u001B[0m \u001B[38;5;66;03m# Restore cov_type, cov_kwds and use_t\u001B[39;00m\n\u001B[1;32m    576\u001B[0m optim_settings\u001B[38;5;241m.\u001B[39mupdate(kwds)\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/statsmodels/base/optimizer.py:243\u001B[0m, in \u001B[0;36mOptimizer._fit\u001B[0;34m(self, objective, gradient, start_params, fargs, kwargs, hessian, method, maxiter, full_output, disp, callback, retall)\u001B[0m\n\u001B[1;32m    240\u001B[0m     fit_funcs\u001B[38;5;241m.\u001B[39mupdate(extra_fit_funcs)\n\u001B[1;32m    242\u001B[0m func \u001B[38;5;241m=\u001B[39m fit_funcs[method]\n\u001B[0;32m--> 243\u001B[0m xopt, retvals \u001B[38;5;241m=\u001B[39m \u001B[43mfunc\u001B[49m\u001B[43m(\u001B[49m\u001B[43mobjective\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mgradient\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mstart_params\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mfargs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mkwargs\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    244\u001B[0m \u001B[43m                     \u001B[49m\u001B[43mdisp\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mdisp\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mmaxiter\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mmaxiter\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mcallback\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mcallback\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    245\u001B[0m \u001B[43m                     \u001B[49m\u001B[43mretall\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mretall\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mfull_output\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mfull_output\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    246\u001B[0m \u001B[43m                     \u001B[49m\u001B[43mhess\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mhessian\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    248\u001B[0m optim_settings \u001B[38;5;241m=\u001B[39m {\u001B[38;5;124m'\u001B[39m\u001B[38;5;124moptimizer\u001B[39m\u001B[38;5;124m'\u001B[39m: method, \u001B[38;5;124m'\u001B[39m\u001B[38;5;124mstart_params\u001B[39m\u001B[38;5;124m'\u001B[39m: start_params,\n\u001B[1;32m    249\u001B[0m                   \u001B[38;5;124m'\u001B[39m\u001B[38;5;124mmaxiter\u001B[39m\u001B[38;5;124m'\u001B[39m: maxiter, \u001B[38;5;124m'\u001B[39m\u001B[38;5;124mfull_output\u001B[39m\u001B[38;5;124m'\u001B[39m: full_output,\n\u001B[1;32m    250\u001B[0m                   \u001B[38;5;124m'\u001B[39m\u001B[38;5;124mdisp\u001B[39m\u001B[38;5;124m'\u001B[39m: disp, \u001B[38;5;124m'\u001B[39m\u001B[38;5;124mfargs\u001B[39m\u001B[38;5;124m'\u001B[39m: fargs, \u001B[38;5;124m'\u001B[39m\u001B[38;5;124mcallback\u001B[39m\u001B[38;5;124m'\u001B[39m: callback,\n\u001B[1;32m    251\u001B[0m                   \u001B[38;5;124m'\u001B[39m\u001B[38;5;124mretall\u001B[39m\u001B[38;5;124m'\u001B[39m: retall, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mextra_fit_funcs\u001B[39m\u001B[38;5;124m\"\u001B[39m: extra_fit_funcs}\n\u001B[1;32m    252\u001B[0m optim_settings\u001B[38;5;241m.\u001B[39mupdate(kwargs)\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/statsmodels/base/optimizer.py:660\u001B[0m, in \u001B[0;36m_fit_lbfgs\u001B[0;34m(f, score, start_params, fargs, kwargs, disp, maxiter, callback, retall, full_output, hess)\u001B[0m\n\u001B[1;32m    657\u001B[0m \u001B[38;5;28;01melif\u001B[39;00m approx_grad:\n\u001B[1;32m    658\u001B[0m     func \u001B[38;5;241m=\u001B[39m f\n\u001B[0;32m--> 660\u001B[0m retvals \u001B[38;5;241m=\u001B[39m \u001B[43moptimize\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mfmin_l_bfgs_b\u001B[49m\u001B[43m(\u001B[49m\u001B[43mfunc\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mstart_params\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mmaxiter\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mmaxiter\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    661\u001B[0m \u001B[43m                                 \u001B[49m\u001B[43mcallback\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mcallback\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43margs\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mfargs\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    662\u001B[0m \u001B[43m                                 \u001B[49m\u001B[43mbounds\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mbounds\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mdisp\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mdisp\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    663\u001B[0m \u001B[43m                                 \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mextra_kwargs\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    665\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m full_output:\n\u001B[1;32m    666\u001B[0m     xopt, fopt, d \u001B[38;5;241m=\u001B[39m retvals\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/scipy/optimize/_lbfgsb_py.py:237\u001B[0m, in \u001B[0;36mfmin_l_bfgs_b\u001B[0;34m(func, x0, fprime, args, approx_grad, bounds, m, factr, pgtol, epsilon, iprint, maxfun, maxiter, disp, callback, maxls)\u001B[0m\n\u001B[1;32m    225\u001B[0m callback \u001B[38;5;241m=\u001B[39m _wrap_callback(callback)\n\u001B[1;32m    226\u001B[0m opts \u001B[38;5;241m=\u001B[39m {\u001B[38;5;124m'\u001B[39m\u001B[38;5;124mdisp\u001B[39m\u001B[38;5;124m'\u001B[39m: disp,\n\u001B[1;32m    227\u001B[0m         \u001B[38;5;124m'\u001B[39m\u001B[38;5;124miprint\u001B[39m\u001B[38;5;124m'\u001B[39m: iprint,\n\u001B[1;32m    228\u001B[0m         \u001B[38;5;124m'\u001B[39m\u001B[38;5;124mmaxcor\u001B[39m\u001B[38;5;124m'\u001B[39m: m,\n\u001B[0;32m   (...)\u001B[0m\n\u001B[1;32m    234\u001B[0m         \u001B[38;5;124m'\u001B[39m\u001B[38;5;124mcallback\u001B[39m\u001B[38;5;124m'\u001B[39m: callback,\n\u001B[1;32m    235\u001B[0m         \u001B[38;5;124m'\u001B[39m\u001B[38;5;124mmaxls\u001B[39m\u001B[38;5;124m'\u001B[39m: maxls}\n\u001B[0;32m--> 237\u001B[0m res \u001B[38;5;241m=\u001B[39m \u001B[43m_minimize_lbfgsb\u001B[49m\u001B[43m(\u001B[49m\u001B[43mfun\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mx0\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43margs\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43margs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mjac\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mjac\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mbounds\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mbounds\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    238\u001B[0m \u001B[43m                       \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mopts\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    239\u001B[0m d \u001B[38;5;241m=\u001B[39m {\u001B[38;5;124m'\u001B[39m\u001B[38;5;124mgrad\u001B[39m\u001B[38;5;124m'\u001B[39m: res[\u001B[38;5;124m'\u001B[39m\u001B[38;5;124mjac\u001B[39m\u001B[38;5;124m'\u001B[39m],\n\u001B[1;32m    240\u001B[0m      \u001B[38;5;124m'\u001B[39m\u001B[38;5;124mtask\u001B[39m\u001B[38;5;124m'\u001B[39m: res[\u001B[38;5;124m'\u001B[39m\u001B[38;5;124mmessage\u001B[39m\u001B[38;5;124m'\u001B[39m],\n\u001B[1;32m    241\u001B[0m      \u001B[38;5;124m'\u001B[39m\u001B[38;5;124mfuncalls\u001B[39m\u001B[38;5;124m'\u001B[39m: res[\u001B[38;5;124m'\u001B[39m\u001B[38;5;124mnfev\u001B[39m\u001B[38;5;124m'\u001B[39m],\n\u001B[1;32m    242\u001B[0m      \u001B[38;5;124m'\u001B[39m\u001B[38;5;124mnit\u001B[39m\u001B[38;5;124m'\u001B[39m: res[\u001B[38;5;124m'\u001B[39m\u001B[38;5;124mnit\u001B[39m\u001B[38;5;124m'\u001B[39m],\n\u001B[1;32m    243\u001B[0m      \u001B[38;5;124m'\u001B[39m\u001B[38;5;124mwarnflag\u001B[39m\u001B[38;5;124m'\u001B[39m: res[\u001B[38;5;124m'\u001B[39m\u001B[38;5;124mstatus\u001B[39m\u001B[38;5;124m'\u001B[39m]}\n\u001B[1;32m    244\u001B[0m f \u001B[38;5;241m=\u001B[39m res[\u001B[38;5;124m'\u001B[39m\u001B[38;5;124mfun\u001B[39m\u001B[38;5;124m'\u001B[39m]\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/scipy/optimize/_lbfgsb_py.py:347\u001B[0m, in \u001B[0;36m_minimize_lbfgsb\u001B[0;34m(fun, x0, args, jac, bounds, disp, maxcor, ftol, gtol, eps, maxfun, maxiter, iprint, callback, maxls, finite_diff_rel_step, **unknown_options)\u001B[0m\n\u001B[1;32m    344\u001B[0m         iprint \u001B[38;5;241m=\u001B[39m disp\n\u001B[1;32m    346\u001B[0m \u001B[38;5;66;03m# _prepare_scalar_function can use bounds=None to represent no bounds\u001B[39;00m\n\u001B[0;32m--> 347\u001B[0m sf \u001B[38;5;241m=\u001B[39m \u001B[43m_prepare_scalar_function\u001B[49m\u001B[43m(\u001B[49m\u001B[43mfun\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mx0\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mjac\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mjac\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43margs\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43margs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mepsilon\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43meps\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    348\u001B[0m \u001B[43m                              \u001B[49m\u001B[43mbounds\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mbounds\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    349\u001B[0m \u001B[43m                              \u001B[49m\u001B[43mfinite_diff_rel_step\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mfinite_diff_rel_step\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    351\u001B[0m func_and_grad \u001B[38;5;241m=\u001B[39m sf\u001B[38;5;241m.\u001B[39mfun_and_grad\n\u001B[1;32m    353\u001B[0m fortran_int \u001B[38;5;241m=\u001B[39m _lbfgsb\u001B[38;5;241m.\u001B[39mtypes\u001B[38;5;241m.\u001B[39mintvar\u001B[38;5;241m.\u001B[39mdtype\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/scipy/optimize/_optimize.py:288\u001B[0m, in \u001B[0;36m_prepare_scalar_function\u001B[0;34m(fun, x0, jac, args, bounds, epsilon, finite_diff_rel_step, hess)\u001B[0m\n\u001B[1;32m    284\u001B[0m     bounds \u001B[38;5;241m=\u001B[39m (\u001B[38;5;241m-\u001B[39mnp\u001B[38;5;241m.\u001B[39minf, np\u001B[38;5;241m.\u001B[39minf)\n\u001B[1;32m    286\u001B[0m \u001B[38;5;66;03m# ScalarFunction caches. Reuse of fun(x) during grad\u001B[39;00m\n\u001B[1;32m    287\u001B[0m \u001B[38;5;66;03m# calculation reduces overall function evaluations.\u001B[39;00m\n\u001B[0;32m--> 288\u001B[0m sf \u001B[38;5;241m=\u001B[39m \u001B[43mScalarFunction\u001B[49m\u001B[43m(\u001B[49m\u001B[43mfun\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mx0\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43margs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mgrad\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mhess\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    289\u001B[0m \u001B[43m                    \u001B[49m\u001B[43mfinite_diff_rel_step\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mbounds\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mepsilon\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mepsilon\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    291\u001B[0m \u001B[38;5;28;01mreturn\u001B[39;00m sf\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/scipy/optimize/_differentiable_functions.py:185\u001B[0m, in \u001B[0;36mScalarFunction.__init__\u001B[0;34m(self, fun, x0, args, grad, hess, finite_diff_rel_step, finite_diff_bounds, epsilon)\u001B[0m\n\u001B[1;32m    181\u001B[0m         \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39mg \u001B[38;5;241m=\u001B[39m approx_derivative(fun_wrapped, \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39mx, f0\u001B[38;5;241m=\u001B[39m\u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39mf,\n\u001B[1;32m    182\u001B[0m                                    \u001B[38;5;241m*\u001B[39m\u001B[38;5;241m*\u001B[39mfinite_diff_options)\n\u001B[1;32m    184\u001B[0m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_update_grad_impl \u001B[38;5;241m=\u001B[39m update_grad\n\u001B[0;32m--> 185\u001B[0m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_update_grad\u001B[49m\u001B[43m(\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    187\u001B[0m \u001B[38;5;66;03m# Hessian Evaluation\u001B[39;00m\n\u001B[1;32m    188\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m \u001B[38;5;28mcallable\u001B[39m(hess):\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/scipy/optimize/_differentiable_functions.py:267\u001B[0m, in \u001B[0;36mScalarFunction._update_grad\u001B[0;34m(self)\u001B[0m\n\u001B[1;32m    265\u001B[0m \u001B[38;5;28;01mdef\u001B[39;00m \u001B[38;5;21m_update_grad\u001B[39m(\u001B[38;5;28mself\u001B[39m):\n\u001B[1;32m    266\u001B[0m     \u001B[38;5;28;01mif\u001B[39;00m \u001B[38;5;129;01mnot\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39mg_updated:\n\u001B[0;32m--> 267\u001B[0m         \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_update_grad_impl\u001B[49m\u001B[43m(\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    268\u001B[0m         \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39mg_updated \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;01mTrue\u001B[39;00m\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/scipy/optimize/_differentiable_functions.py:181\u001B[0m, in \u001B[0;36mScalarFunction.__init__.<locals>.update_grad\u001B[0;34m()\u001B[0m\n\u001B[1;32m    179\u001B[0m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_update_fun()\n\u001B[1;32m    180\u001B[0m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39mngev \u001B[38;5;241m+\u001B[39m\u001B[38;5;241m=\u001B[39m \u001B[38;5;241m1\u001B[39m\n\u001B[0;32m--> 181\u001B[0m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39mg \u001B[38;5;241m=\u001B[39m \u001B[43mapprox_derivative\u001B[49m\u001B[43m(\u001B[49m\u001B[43mfun_wrapped\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mx\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mf0\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mf\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    182\u001B[0m \u001B[43m                           \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mfinite_diff_options\u001B[49m\u001B[43m)\u001B[49m\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/scipy/optimize/_numdiff.py:519\u001B[0m, in \u001B[0;36mapprox_derivative\u001B[0;34m(fun, x0, method, rel_step, abs_step, f0, bounds, sparsity, as_linear_operator, args, kwargs)\u001B[0m\n\u001B[1;32m    516\u001B[0m     use_one_sided \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;01mFalse\u001B[39;00m\n\u001B[1;32m    518\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m sparsity \u001B[38;5;129;01mis\u001B[39;00m \u001B[38;5;28;01mNone\u001B[39;00m:\n\u001B[0;32m--> 519\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[43m_dense_difference\u001B[49m\u001B[43m(\u001B[49m\u001B[43mfun_wrapped\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mx0\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mf0\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mh\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    520\u001B[0m \u001B[43m                             \u001B[49m\u001B[43muse_one_sided\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mmethod\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    521\u001B[0m \u001B[38;5;28;01melse\u001B[39;00m:\n\u001B[1;32m    522\u001B[0m     \u001B[38;5;28;01mif\u001B[39;00m \u001B[38;5;129;01mnot\u001B[39;00m issparse(sparsity) \u001B[38;5;129;01mand\u001B[39;00m \u001B[38;5;28mlen\u001B[39m(sparsity) \u001B[38;5;241m==\u001B[39m \u001B[38;5;241m2\u001B[39m:\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/scipy/optimize/_numdiff.py:590\u001B[0m, in \u001B[0;36m_dense_difference\u001B[0;34m(fun, x0, f0, h, use_one_sided, method)\u001B[0m\n\u001B[1;32m    588\u001B[0m     x \u001B[38;5;241m=\u001B[39m x0 \u001B[38;5;241m+\u001B[39m h_vecs[i]\n\u001B[1;32m    589\u001B[0m     dx \u001B[38;5;241m=\u001B[39m x[i] \u001B[38;5;241m-\u001B[39m x0[i]  \u001B[38;5;66;03m# Recompute dx as exactly representable number.\u001B[39;00m\n\u001B[0;32m--> 590\u001B[0m     df \u001B[38;5;241m=\u001B[39m \u001B[43mfun\u001B[49m\u001B[43m(\u001B[49m\u001B[43mx\u001B[49m\u001B[43m)\u001B[49m \u001B[38;5;241m-\u001B[39m f0\n\u001B[1;32m    591\u001B[0m \u001B[38;5;28;01melif\u001B[39;00m method \u001B[38;5;241m==\u001B[39m \u001B[38;5;124m'\u001B[39m\u001B[38;5;124m3-point\u001B[39m\u001B[38;5;124m'\u001B[39m \u001B[38;5;129;01mand\u001B[39;00m use_one_sided[i]:\n\u001B[1;32m    592\u001B[0m     x1 \u001B[38;5;241m=\u001B[39m x0 \u001B[38;5;241m+\u001B[39m h_vecs[i]\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/scipy/optimize/_numdiff.py:470\u001B[0m, in \u001B[0;36mapprox_derivative.<locals>.fun_wrapped\u001B[0;34m(x)\u001B[0m\n\u001B[1;32m    467\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m xp\u001B[38;5;241m.\u001B[39misdtype(x\u001B[38;5;241m.\u001B[39mdtype, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mreal floating\u001B[39m\u001B[38;5;124m\"\u001B[39m):\n\u001B[1;32m    468\u001B[0m     x \u001B[38;5;241m=\u001B[39m xp\u001B[38;5;241m.\u001B[39mastype(x, x0\u001B[38;5;241m.\u001B[39mdtype)\n\u001B[0;32m--> 470\u001B[0m f \u001B[38;5;241m=\u001B[39m np\u001B[38;5;241m.\u001B[39matleast_1d(\u001B[43mfun\u001B[49m\u001B[43m(\u001B[49m\u001B[43mx\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43margs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mkwargs\u001B[49m\u001B[43m)\u001B[49m)\n\u001B[1;32m    471\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m f\u001B[38;5;241m.\u001B[39mndim \u001B[38;5;241m>\u001B[39m \u001B[38;5;241m1\u001B[39m:\n\u001B[1;32m    472\u001B[0m     \u001B[38;5;28;01mraise\u001B[39;00m \u001B[38;5;167;01mRuntimeError\u001B[39;00m(\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124m`fun` return value has \u001B[39m\u001B[38;5;124m\"\u001B[39m\n\u001B[1;32m    473\u001B[0m                        \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mmore than 1 dimension.\u001B[39m\u001B[38;5;124m\"\u001B[39m)\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/scipy/optimize/_differentiable_functions.py:145\u001B[0m, in \u001B[0;36mScalarFunction.__init__.<locals>.fun_wrapped\u001B[0;34m(x)\u001B[0m\n\u001B[1;32m    141\u001B[0m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39mnfev \u001B[38;5;241m+\u001B[39m\u001B[38;5;241m=\u001B[39m \u001B[38;5;241m1\u001B[39m\n\u001B[1;32m    142\u001B[0m \u001B[38;5;66;03m# Send a copy because the user may overwrite it.\u001B[39;00m\n\u001B[1;32m    143\u001B[0m \u001B[38;5;66;03m# Overwriting results in undefined behaviour because\u001B[39;00m\n\u001B[1;32m    144\u001B[0m \u001B[38;5;66;03m# fun(self.x) will change self.x, with the two no longer linked.\u001B[39;00m\n\u001B[0;32m--> 145\u001B[0m fx \u001B[38;5;241m=\u001B[39m \u001B[43mfun\u001B[49m\u001B[43m(\u001B[49m\u001B[43mnp\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mcopy\u001B[49m\u001B[43m(\u001B[49m\u001B[43mx\u001B[49m\u001B[43m)\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43margs\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    146\u001B[0m \u001B[38;5;66;03m# Make sure the function returns a true scalar\u001B[39;00m\n\u001B[1;32m    147\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m \u001B[38;5;129;01mnot\u001B[39;00m np\u001B[38;5;241m.\u001B[39misscalar(fx):\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/statsmodels/base/model.py:534\u001B[0m, in \u001B[0;36mLikelihoodModel.fit.<locals>.f\u001B[0;34m(params, *args)\u001B[0m\n\u001B[1;32m    533\u001B[0m \u001B[38;5;28;01mdef\u001B[39;00m \u001B[38;5;21mf\u001B[39m(params, \u001B[38;5;241m*\u001B[39margs):\n\u001B[0;32m--> 534\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[38;5;241m-\u001B[39m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mloglike\u001B[49m\u001B[43m(\u001B[49m\u001B[43mparams\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43margs\u001B[49m\u001B[43m)\u001B[49m \u001B[38;5;241m/\u001B[39m nobs\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/statsmodels/tsa/statespace/mlemodel.py:938\u001B[0m, in \u001B[0;36mMLEModel.loglike\u001B[0;34m(self, params, *args, **kwargs)\u001B[0m\n\u001B[1;32m    935\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m complex_step:\n\u001B[1;32m    936\u001B[0m     kwargs[\u001B[38;5;124m'\u001B[39m\u001B[38;5;124minversion_method\u001B[39m\u001B[38;5;124m'\u001B[39m] \u001B[38;5;241m=\u001B[39m INVERT_UNIVARIATE \u001B[38;5;241m|\u001B[39m SOLVE_LU\n\u001B[0;32m--> 938\u001B[0m loglike \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mssm\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mloglike\u001B[49m\u001B[43m(\u001B[49m\u001B[43mcomplex_step\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mcomplex_step\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mkwargs\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    940\u001B[0m \u001B[38;5;66;03m# Koopman, Shephard, and Doornik recommend maximizing the average\u001B[39;00m\n\u001B[1;32m    941\u001B[0m \u001B[38;5;66;03m# likelihood to avoid scale issues, but the averaging is done\u001B[39;00m\n\u001B[1;32m    942\u001B[0m \u001B[38;5;66;03m# automatically in the base model `fit` method\u001B[39;00m\n\u001B[1;32m    943\u001B[0m \u001B[38;5;28;01mreturn\u001B[39;00m loglike\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/statsmodels/tsa/statespace/kalman_filter.py:1001\u001B[0m, in \u001B[0;36mKalmanFilter.loglike\u001B[0;34m(self, **kwargs)\u001B[0m\n\u001B[1;32m    985\u001B[0m \u001B[38;5;250m\u001B[39m\u001B[38;5;124mr\u001B[39m\u001B[38;5;124;03m\"\"\"\u001B[39;00m\n\u001B[1;32m    986\u001B[0m \u001B[38;5;124;03mCalculate the loglikelihood associated with the statespace model.\u001B[39;00m\n\u001B[1;32m    987\u001B[0m \n\u001B[0;32m   (...)\u001B[0m\n\u001B[1;32m    997\u001B[0m \u001B[38;5;124;03m    The joint loglikelihood.\u001B[39;00m\n\u001B[1;32m    998\u001B[0m \u001B[38;5;124;03m\"\"\"\u001B[39;00m\n\u001B[1;32m    999\u001B[0m kwargs\u001B[38;5;241m.\u001B[39msetdefault(\u001B[38;5;124m'\u001B[39m\u001B[38;5;124mconserve_memory\u001B[39m\u001B[38;5;124m'\u001B[39m,\n\u001B[1;32m   1000\u001B[0m                   MEMORY_CONSERVE \u001B[38;5;241m^\u001B[39m MEMORY_NO_LIKELIHOOD)\n\u001B[0;32m-> 1001\u001B[0m kfilter \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_filter\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mkwargs\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m   1002\u001B[0m loglikelihood_burn \u001B[38;5;241m=\u001B[39m kwargs\u001B[38;5;241m.\u001B[39mget(\u001B[38;5;124m'\u001B[39m\u001B[38;5;124mloglikelihood_burn\u001B[39m\u001B[38;5;124m'\u001B[39m,\n\u001B[1;32m   1003\u001B[0m                                 \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39mloglikelihood_burn)\n\u001B[1;32m   1004\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m \u001B[38;5;129;01mnot\u001B[39;00m (kwargs[\u001B[38;5;124m'\u001B[39m\u001B[38;5;124mconserve_memory\u001B[39m\u001B[38;5;124m'\u001B[39m] \u001B[38;5;241m&\u001B[39m MEMORY_NO_LIKELIHOOD):\n",
      "File \u001B[0;32m~/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/statsmodels/tsa/statespace/kalman_filter.py:924\u001B[0m, in \u001B[0;36mKalmanFilter._filter\u001B[0;34m(self, filter_method, inversion_method, stability_method, conserve_memory, filter_timing, tolerance, loglikelihood_burn, complex_step)\u001B[0m\n\u001B[1;32m    921\u001B[0m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_initialize_state(prefix\u001B[38;5;241m=\u001B[39mprefix, complex_step\u001B[38;5;241m=\u001B[39mcomplex_step)\n\u001B[1;32m    923\u001B[0m \u001B[38;5;66;03m# Run the filter\u001B[39;00m\n\u001B[0;32m--> 924\u001B[0m \u001B[43mkfilter\u001B[49m\u001B[43m(\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    926\u001B[0m \u001B[38;5;28;01mreturn\u001B[39;00m kfilter\n",
      "\u001B[0;31mKeyboardInterrupt\u001B[0m: "
     ]
    }
   ],
   "execution_count": 209
  },
  {
   "cell_type": "code",
   "id": "908e589a-3745-4d14-aa9b-e02681e3c5ba",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:32:54.398649Z",
     "start_time": "2024-08-05T19:32:54.395439Z"
    }
   },
   "source": [
    "from statsmodels.tsa.statespace.sarimax import SARIMAX as StatsmodelsSARIMAX"
   ],
   "outputs": [],
   "execution_count": 166
  },
  {
   "cell_type": "code",
   "id": "cd488827-e8a0-4ed3-be41-8add3bd7aed9",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:32:54.436145Z",
     "start_time": "2024-08-05T19:32:54.400176Z"
    }
   },
   "source": [
    "df_train_short.drop('temp',axis=1).astype(float)"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "            dew  humidity  precip  precipprob  precipcover  snow  snowdepth  \\\n",
       "2021-01-02  0.4      88.8   0.001       100.0         4.17   0.0        0.0   \n",
       "2021-01-03 -1.0      88.4   0.000         0.0         0.00   0.0        0.4   \n",
       "2021-01-04  0.7      91.0   0.002       100.0         4.17   0.0        0.4   \n",
       "2021-01-05  1.0      82.5   0.603       100.0         8.33   0.0        0.0   \n",
       "2021-01-06  1.6      86.0   1.985       100.0         4.17   0.0        0.0   \n",
       "...         ...       ...     ...         ...          ...   ...        ...   \n",
       "2023-05-17  8.1      69.3   0.000         0.0         0.00   0.0        0.0   \n",
       "2023-05-18  5.8      60.6   2.989       100.0        20.83   0.0        0.0   \n",
       "2023-05-19  5.0      59.5   0.000         0.0         0.00   0.0        0.0   \n",
       "2023-05-20  7.4      66.7   0.000         0.0         0.00   0.0        0.0   \n",
       "2023-05-21  7.1      61.6   0.000         0.0         0.00   0.0        0.0   \n",
       "\n",
       "            windgust  windspeed  winddir  sealevelpressure  cloudcover  \\\n",
       "2021-01-02      27.7       13.1    271.1            1002.4        64.8   \n",
       "2021-01-03      23.8       10.9    317.7            1005.6        88.4   \n",
       "2021-01-04      24.1       10.1    303.6            1011.4        98.4   \n",
       "2021-01-05      28.4       11.9    345.5            1015.8        83.0   \n",
       "2021-01-06      36.7       16.9     32.4            1017.4        90.3   \n",
       "...              ...        ...      ...               ...         ...   \n",
       "2023-05-17      21.5       16.0    307.8            1020.7        65.4   \n",
       "2023-05-18      41.3       22.9    353.1            1019.9        57.3   \n",
       "2023-05-19      34.2       18.1    329.3            1024.9        25.6   \n",
       "2023-05-20      20.5       17.7     16.7            1028.2        38.6   \n",
       "2023-05-21      24.1       16.0     92.8            1028.0        52.3   \n",
       "\n",
       "            visibility  solarradiation  solarenergy  uvindex  severerisk  \\\n",
       "2021-01-02        19.9            24.1          2.2      1.0        10.0   \n",
       "2021-01-03         7.8            13.4          1.2      1.0        10.0   \n",
       "2021-01-04         4.6            10.0          0.9      0.0        10.0   \n",
       "2021-01-05        19.2            14.8          1.3      1.0        10.0   \n",
       "2021-01-06        15.6            25.7          2.0      1.0        10.0   \n",
       "...                ...             ...          ...      ...         ...   \n",
       "2023-05-17        18.3           152.2         13.2      8.0        10.0   \n",
       "2023-05-18        38.2           134.8         11.6      5.0        10.0   \n",
       "2023-05-19        27.6           203.8         17.7      9.0        10.0   \n",
       "2023-05-20        23.2           147.4         12.7      7.0        10.0   \n",
       "2023-05-21        26.6           161.9         13.9      7.0        10.0   \n",
       "\n",
       "            moonphase  clusters_description    year  month_1  month_2  \\\n",
       "2021-01-02       0.50                   2.0  2021.0      1.0      0.0   \n",
       "2021-01-03       0.55                   1.0  2021.0      1.0      0.0   \n",
       "2021-01-04       0.58                   2.0  2021.0      1.0      0.0   \n",
       "2021-01-05       0.62                   1.0  2021.0      1.0      0.0   \n",
       "2021-01-06       0.65                   2.0  2021.0      1.0      0.0   \n",
       "...               ...                   ...     ...      ...      ...   \n",
       "2023-05-17       0.81                   2.0  2023.0      0.0      0.0   \n",
       "2023-05-18       0.85                   1.0  2023.0      0.0      0.0   \n",
       "2023-05-19       0.88                   2.0  2023.0      0.0      0.0   \n",
       "2023-05-20       0.92                   1.0  2023.0      0.0      0.0   \n",
       "2023-05-21       0.96                   2.0  2023.0      0.0      0.0   \n",
       "\n",
       "            month_3  month_4  month_5  month_6  month_7  month_8  month_9  \\\n",
       "2021-01-02      0.0      0.0      0.0      0.0      0.0      0.0      0.0   \n",
       "2021-01-03      0.0      0.0      0.0      0.0      0.0      0.0      0.0   \n",
       "2021-01-04      0.0      0.0      0.0      0.0      0.0      0.0      0.0   \n",
       "2021-01-05      0.0      0.0      0.0      0.0      0.0      0.0      0.0   \n",
       "2021-01-06      0.0      0.0      0.0      0.0      0.0      0.0      0.0   \n",
       "...             ...      ...      ...      ...      ...      ...      ...   \n",
       "2023-05-17      0.0      0.0      1.0      0.0      0.0      0.0      0.0   \n",
       "2023-05-18      0.0      0.0      1.0      0.0      0.0      0.0      0.0   \n",
       "2023-05-19      0.0      0.0      1.0      0.0      0.0      0.0      0.0   \n",
       "2023-05-20      0.0      0.0      1.0      0.0      0.0      0.0      0.0   \n",
       "2023-05-21      0.0      0.0      1.0      0.0      0.0      0.0      0.0   \n",
       "\n",
       "            month_10  month_11  month_12  \n",
       "2021-01-02       0.0       0.0       0.0  \n",
       "2021-01-03       0.0       0.0       0.0  \n",
       "2021-01-04       0.0       0.0       0.0  \n",
       "2021-01-05       0.0       0.0       0.0  \n",
       "2021-01-06       0.0       0.0       0.0  \n",
       "...              ...       ...       ...  \n",
       "2023-05-17       0.0       0.0       0.0  \n",
       "2023-05-18       0.0       0.0       0.0  \n",
       "2023-05-19       0.0       0.0       0.0  \n",
       "2023-05-20       0.0       0.0       0.0  \n",
       "2023-05-21       0.0       0.0       0.0  \n",
       "\n",
       "[870 rows x 32 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>clusters_description</th>\n",
       "      <th>year</th>\n",
       "      <th>month_1</th>\n",
       "      <th>month_2</th>\n",
       "      <th>month_3</th>\n",
       "      <th>month_4</th>\n",
       "      <th>month_5</th>\n",
       "      <th>month_6</th>\n",
       "      <th>month_7</th>\n",
       "      <th>month_8</th>\n",
       "      <th>month_9</th>\n",
       "      <th>month_10</th>\n",
       "      <th>month_11</th>\n",
       "      <th>month_12</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2021-01-02</th>\n",
       "      <td>0.4</td>\n",
       "      <td>88.8</td>\n",
       "      <td>0.001</td>\n",
       "      <td>100.0</td>\n",
       "      <td>4.17</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>27.7</td>\n",
       "      <td>13.1</td>\n",
       "      <td>271.1</td>\n",
       "      <td>1002.4</td>\n",
       "      <td>64.8</td>\n",
       "      <td>19.9</td>\n",
       "      <td>24.1</td>\n",
       "      <td>2.2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.50</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-03</th>\n",
       "      <td>-1.0</td>\n",
       "      <td>88.4</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.4</td>\n",
       "      <td>23.8</td>\n",
       "      <td>10.9</td>\n",
       "      <td>317.7</td>\n",
       "      <td>1005.6</td>\n",
       "      <td>88.4</td>\n",
       "      <td>7.8</td>\n",
       "      <td>13.4</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.55</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-04</th>\n",
       "      <td>0.7</td>\n",
       "      <td>91.0</td>\n",
       "      <td>0.002</td>\n",
       "      <td>100.0</td>\n",
       "      <td>4.17</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.4</td>\n",
       "      <td>24.1</td>\n",
       "      <td>10.1</td>\n",
       "      <td>303.6</td>\n",
       "      <td>1011.4</td>\n",
       "      <td>98.4</td>\n",
       "      <td>4.6</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.58</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-05</th>\n",
       "      <td>1.0</td>\n",
       "      <td>82.5</td>\n",
       "      <td>0.603</td>\n",
       "      <td>100.0</td>\n",
       "      <td>8.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>28.4</td>\n",
       "      <td>11.9</td>\n",
       "      <td>345.5</td>\n",
       "      <td>1015.8</td>\n",
       "      <td>83.0</td>\n",
       "      <td>19.2</td>\n",
       "      <td>14.8</td>\n",
       "      <td>1.3</td>\n",
       "      <td>1.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.62</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-06</th>\n",
       "      <td>1.6</td>\n",
       "      <td>86.0</td>\n",
       "      <td>1.985</td>\n",
       "      <td>100.0</td>\n",
       "      <td>4.17</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>36.7</td>\n",
       "      <td>16.9</td>\n",
       "      <td>32.4</td>\n",
       "      <td>1017.4</td>\n",
       "      <td>90.3</td>\n",
       "      <td>15.6</td>\n",
       "      <td>25.7</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.65</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-17</th>\n",
       "      <td>8.1</td>\n",
       "      <td>69.3</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>21.5</td>\n",
       "      <td>16.0</td>\n",
       "      <td>307.8</td>\n",
       "      <td>1020.7</td>\n",
       "      <td>65.4</td>\n",
       "      <td>18.3</td>\n",
       "      <td>152.2</td>\n",
       "      <td>13.2</td>\n",
       "      <td>8.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.81</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2023.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-18</th>\n",
       "      <td>5.8</td>\n",
       "      <td>60.6</td>\n",
       "      <td>2.989</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>41.3</td>\n",
       "      <td>22.9</td>\n",
       "      <td>353.1</td>\n",
       "      <td>1019.9</td>\n",
       "      <td>57.3</td>\n",
       "      <td>38.2</td>\n",
       "      <td>134.8</td>\n",
       "      <td>11.6</td>\n",
       "      <td>5.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.85</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-19</th>\n",
       "      <td>5.0</td>\n",
       "      <td>59.5</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>34.2</td>\n",
       "      <td>18.1</td>\n",
       "      <td>329.3</td>\n",
       "      <td>1024.9</td>\n",
       "      <td>25.6</td>\n",
       "      <td>27.6</td>\n",
       "      <td>203.8</td>\n",
       "      <td>17.7</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.88</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2023.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-20</th>\n",
       "      <td>7.4</td>\n",
       "      <td>66.7</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.5</td>\n",
       "      <td>17.7</td>\n",
       "      <td>16.7</td>\n",
       "      <td>1028.2</td>\n",
       "      <td>38.6</td>\n",
       "      <td>23.2</td>\n",
       "      <td>147.4</td>\n",
       "      <td>12.7</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.92</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-21</th>\n",
       "      <td>7.1</td>\n",
       "      <td>61.6</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>24.1</td>\n",
       "      <td>16.0</td>\n",
       "      <td>92.8</td>\n",
       "      <td>1028.0</td>\n",
       "      <td>52.3</td>\n",
       "      <td>26.6</td>\n",
       "      <td>161.9</td>\n",
       "      <td>13.9</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.96</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2023.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>870 rows × 32 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 167,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 167
  },
  {
   "cell_type": "code",
   "id": "8023405b-edca-48d9-8790-a58d7171bcf9",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:32:54.655716Z",
     "start_time": "2024-08-05T19:32:54.439093Z"
    }
   },
   "source": [
    "model_sarimax_baseline = StatsmodelsSARIMAX(\n",
    "    endog=df_train_short['temp'],\n",
    "    exog=df_train_short.drop('temp',axis=1).astype(float),\n",
    "    order=(1, 1, 1),  \n",
    "    seasonal_order=(1, 1, 1, 12)  \n",
    ")"
   ],
   "outputs": [],
   "execution_count": 168
  },
  {
   "cell_type": "code",
   "id": "42f54d87-1085-4e5c-82e8-d12e387aea15",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:38:11.856602Z",
     "start_time": "2024-08-05T19:32:54.660239Z"
    }
   },
   "source": [
    "sarimax_base_results = model_sarimax_baseline.fit()"
   ],
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " This problem is unconstrained.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RUNNING THE L-BFGS-B CODE\n",
      "\n",
      "           * * *\n",
      "\n",
      "Machine precision = 2.220D-16\n",
      " N =           37     M =           10\n",
      "\n",
      "At X0         0 variables are exactly at the bounds\n",
      "\n",
      "At iterate    0    f=  2.13399D+00    |proj g|=  2.09103D-01\n",
      "\n",
      "At iterate    5    f=  2.13244D+00    |proj g|=  2.41244D-01\n",
      "\n",
      "At iterate   10    f=  2.10854D+00    |proj g|=  1.57501D+00\n",
      "\n",
      "At iterate   15    f=  2.08835D+00    |proj g|=  1.73390D-01\n",
      "\n",
      "At iterate   20    f=  2.07622D+00    |proj g|=  1.48098D-01\n",
      "\n",
      "At iterate   25    f=  2.07074D+00    |proj g|=  2.70785D-01\n",
      "\n",
      "At iterate   30    f=  2.06937D+00    |proj g|=  3.78280D-01\n",
      "\n",
      "At iterate   35    f=  2.06799D+00    |proj g|=  2.49354D-01\n",
      "\n",
      "At iterate   40    f=  2.06706D+00    |proj g|=  2.90821D-01\n",
      "\n",
      "At iterate   45    f=  2.06467D+00    |proj g|=  5.20535D-01\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/statsmodels/base/model.py:607: ConvergenceWarning: Maximum Likelihood optimization failed to converge. Check mle_retvals\n",
      "  warnings.warn(\"Maximum Likelihood optimization failed to \"\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   50    f=  2.06233D+00    |proj g|=  1.48462D-01\n",
      "\n",
      "           * * *\n",
      "\n",
      "Tit   = total number of iterations\n",
      "Tnf   = total number of function evaluations\n",
      "Tnint = total number of segments explored during Cauchy searches\n",
      "Skip  = number of BFGS updates skipped\n",
      "Nact  = number of active bounds at final generalized Cauchy point\n",
      "Projg = norm of the final projected gradient\n",
      "F     = final function value\n",
      "\n",
      "           * * *\n",
      "\n",
      "   N    Tit     Tnf  Tnint  Skip  Nact     Projg        F\n",
      "   37     50     58      1     0     0   1.485D-01   2.062D+00\n",
      "  F =   2.0623289598609009     \n",
      "\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT                 \n"
     ]
    }
   ],
   "execution_count": 169
  },
  {
   "cell_type": "code",
   "id": "50046a7b-53b1-4c29-9b55-75891c3214ba",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:38:11.958007Z",
     "start_time": "2024-08-05T19:38:11.859213Z"
    }
   },
   "source": [
    "forecast_sarimax = sarimax_base_results.get_forecast(steps=len(df_test), exog=df_test.drop('temp',axis=1).astype(float))"
   ],
   "outputs": [],
   "execution_count": 170
  },
  {
   "cell_type": "code",
   "id": "c976a6cb-0696-4042-b267-61c961ee3bc5",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:38:11.972931Z",
     "start_time": "2024-08-05T19:38:11.962236Z"
    }
   },
   "source": [
    "forecast_sarimax.predicted_mean"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2023-05-22    15.683903\n",
       "2023-05-23    15.437144\n",
       "2023-05-24    16.204034\n",
       "2023-05-25    15.958146\n",
       "2023-05-26    14.690258\n",
       "                ...    \n",
       "2024-05-16    60.371239\n",
       "2024-05-17    60.781792\n",
       "2024-05-18    60.610568\n",
       "2024-05-19    60.060079\n",
       "2024-05-20    59.834532\n",
       "Freq: D, Name: predicted_mean, Length: 365, dtype: float64"
      ]
     },
     "execution_count": 171,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 171
  },
  {
   "cell_type": "code",
   "id": "4ff278a2-cda5-47a5-8325-4b87d270ef52",
   "metadata": {
    "tags": [],
    "ExecuteTime": {
     "end_time": "2024-08-05T19:38:11.997944Z",
     "start_time": "2024-08-05T19:38:11.974809Z"
    }
   },
   "source": [
    "df_test_w_preds['preds_sarimax'] = forecast_sarimax.predicted_mean\n",
    "df_test_w_preds"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "            temp   dew  humidity  precip  precipprob  precipcover  snow  \\\n",
       "2023-05-22  15.1   6.9      64.3   0.000         0.0         0.00   0.0   \n",
       "2023-05-23  14.0   6.1      60.6   0.000         0.0         0.00   0.0   \n",
       "2023-05-24  15.8   6.7      61.2   0.000         0.0         0.00   0.0   \n",
       "2023-05-25  15.0   6.7      57.9   0.000         0.0         0.00   0.0   \n",
       "2023-05-26  14.2   6.9      63.5   0.000         0.0         0.00   0.0   \n",
       "...          ...   ...       ...     ...         ...          ...   ...   \n",
       "2024-05-16  14.2  11.0      73.4   0.000         0.0         0.00   0.0   \n",
       "2024-05-17  16.4  11.7      77.8   3.598       100.0        33.33   0.0   \n",
       "2024-05-18  15.8  10.5      69.7   0.797       100.0         8.33   0.0   \n",
       "2024-05-19  16.6  12.4      89.1  10.126       100.0        20.83   0.0   \n",
       "2024-05-20  15.1  10.3      70.2   0.000         0.0         0.00   0.0   \n",
       "\n",
       "            snowdepth  windgust  windspeed  winddir  sealevelpressure  \\\n",
       "2023-05-22        0.0      26.1       17.5     61.3            1027.2   \n",
       "2023-05-23        0.0      36.4       21.3     40.6            1025.3   \n",
       "2023-05-24        0.0      34.7       20.0     30.7            1021.7   \n",
       "2023-05-25        0.0      41.5       23.9     12.1            1021.2   \n",
       "2023-05-26        0.0      26.1       17.3     36.0            1026.5   \n",
       "...               ...       ...        ...      ...               ...   \n",
       "2024-05-16        0.0      35.2       21.0    183.4            1007.1   \n",
       "2024-05-17        0.0      30.5       21.0    149.7            1001.1   \n",
       "2024-05-18        0.0      25.0       15.2    147.1            1004.2   \n",
       "2024-05-19        0.0      18.4       10.1    213.9            1005.2   \n",
       "2024-05-20        0.0      17.4        9.4    194.8            1009.3   \n",
       "\n",
       "            cloudcover  visibility  solarradiation  solarenergy  uvindex  \\\n",
       "2023-05-22        55.6        27.2            99.0          8.7      4.0   \n",
       "2023-05-23        40.0        27.5           192.2         16.3      9.0   \n",
       "2023-05-24        43.9        35.0           156.4         13.6      7.0   \n",
       "2023-05-25        62.5        37.2            80.0          7.0      3.0   \n",
       "2023-05-26        27.0        29.2           147.4         12.5      7.0   \n",
       "...                ...         ...             ...          ...      ...   \n",
       "2024-05-16        86.1        14.9            71.5          6.2      2.0   \n",
       "2024-05-17        85.6        15.4            76.1          6.5      4.0   \n",
       "2024-05-18        52.3        19.4           118.8         10.3      9.0   \n",
       "2024-05-19        58.3        15.8            74.5          6.5      3.0   \n",
       "2024-05-20        41.4        21.7           177.8         15.5     10.0   \n",
       "\n",
       "            severerisk  moonphase  clusters_description  year  month_1  \\\n",
       "2023-05-22        10.0       0.00                   1.0  2023    False   \n",
       "2023-05-23        10.0       0.03                   1.0  2023    False   \n",
       "2023-05-24        10.0       0.06                   1.0  2023    False   \n",
       "2023-05-25        10.0       0.09                   1.0  2023    False   \n",
       "2023-05-26        10.0       0.12                   2.0  2023    False   \n",
       "...                ...        ...                   ...   ...      ...   \n",
       "2024-05-16        10.0       0.17                   1.0  2024    False   \n",
       "2024-05-17        10.0       0.20                   1.0  2024    False   \n",
       "2024-05-18        10.0       0.25                   0.0  2024    False   \n",
       "2024-05-19        10.0       0.27                   1.0  2024    False   \n",
       "2024-05-20        10.0       0.30                   1.0  2024    False   \n",
       "\n",
       "            month_2  month_3  month_4  month_5  month_6  month_7  month_8  \\\n",
       "2023-05-22    False    False    False     True    False    False    False   \n",
       "2023-05-23    False    False    False     True    False    False    False   \n",
       "2023-05-24    False    False    False     True    False    False    False   \n",
       "2023-05-25    False    False    False     True    False    False    False   \n",
       "2023-05-26    False    False    False     True    False    False    False   \n",
       "...             ...      ...      ...      ...      ...      ...      ...   \n",
       "2024-05-16    False    False    False     True    False    False    False   \n",
       "2024-05-17    False    False    False     True    False    False    False   \n",
       "2024-05-18    False    False    False     True    False    False    False   \n",
       "2024-05-19    False    False    False     True    False    False    False   \n",
       "2024-05-20    False    False    False     True    False    False    False   \n",
       "\n",
       "            month_9  month_10  month_11  month_12      preds   preds_gs  \\\n",
       "2023-05-22    False     False     False     False  14.836311  13.335446   \n",
       "2023-05-23    False     False     False     False  17.028198  15.511145   \n",
       "2023-05-24    False     False     False     False  15.288651  15.613107   \n",
       "2023-05-25    False     False     False     False  14.315332  13.680475   \n",
       "2023-05-26    False     False     False     False  14.030735  14.305593   \n",
       "...             ...       ...       ...       ...        ...        ...   \n",
       "2024-05-16    False     False     False     False  14.486135  16.180431   \n",
       "2024-05-17    False     False     False     False  16.443136  16.079826   \n",
       "2024-05-18    False     False     False     False  14.224728  16.050465   \n",
       "2024-05-19    False     False     False     False  17.508904  15.869523   \n",
       "2024-05-20    False     False     False     False  14.192161  15.756632   \n",
       "\n",
       "            sktime_naive  preds_autoarima  preds_sarimax  \n",
       "2023-05-22     12.189839        13.984044      15.683903  \n",
       "2023-05-23     12.189839        13.895126      15.437144  \n",
       "2023-05-24     12.189839        13.759057      16.204034  \n",
       "2023-05-25     12.189839        13.725513      15.958146  \n",
       "2023-05-26     12.189839        13.632718      14.690258  \n",
       "...                  ...              ...            ...  \n",
       "2024-05-16     12.189839        13.488740      60.371239  \n",
       "2024-05-17     12.189839        13.489218      60.781792  \n",
       "2024-05-18     12.189839        13.488745      60.610568  \n",
       "2024-05-19     12.189839        13.489212      60.060079  \n",
       "2024-05-20     12.189839        13.488751      59.834532  \n",
       "\n",
       "[365 rows x 38 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>clusters_description</th>\n",
       "      <th>year</th>\n",
       "      <th>month_1</th>\n",
       "      <th>month_2</th>\n",
       "      <th>month_3</th>\n",
       "      <th>month_4</th>\n",
       "      <th>month_5</th>\n",
       "      <th>month_6</th>\n",
       "      <th>month_7</th>\n",
       "      <th>month_8</th>\n",
       "      <th>month_9</th>\n",
       "      <th>month_10</th>\n",
       "      <th>month_11</th>\n",
       "      <th>month_12</th>\n",
       "      <th>preds</th>\n",
       "      <th>preds_gs</th>\n",
       "      <th>sktime_naive</th>\n",
       "      <th>preds_autoarima</th>\n",
       "      <th>preds_sarimax</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2023-05-22</th>\n",
       "      <td>15.1</td>\n",
       "      <td>6.9</td>\n",
       "      <td>64.3</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.1</td>\n",
       "      <td>17.5</td>\n",
       "      <td>61.3</td>\n",
       "      <td>1027.2</td>\n",
       "      <td>55.6</td>\n",
       "      <td>27.2</td>\n",
       "      <td>99.0</td>\n",
       "      <td>8.7</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.836311</td>\n",
       "      <td>13.335446</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.984044</td>\n",
       "      <td>15.683903</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-23</th>\n",
       "      <td>14.0</td>\n",
       "      <td>6.1</td>\n",
       "      <td>60.6</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>36.4</td>\n",
       "      <td>21.3</td>\n",
       "      <td>40.6</td>\n",
       "      <td>1025.3</td>\n",
       "      <td>40.0</td>\n",
       "      <td>27.5</td>\n",
       "      <td>192.2</td>\n",
       "      <td>16.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>17.028198</td>\n",
       "      <td>15.511145</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.895126</td>\n",
       "      <td>15.437144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-24</th>\n",
       "      <td>15.8</td>\n",
       "      <td>6.7</td>\n",
       "      <td>61.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>34.7</td>\n",
       "      <td>20.0</td>\n",
       "      <td>30.7</td>\n",
       "      <td>1021.7</td>\n",
       "      <td>43.9</td>\n",
       "      <td>35.0</td>\n",
       "      <td>156.4</td>\n",
       "      <td>13.6</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>15.288651</td>\n",
       "      <td>15.613107</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.759057</td>\n",
       "      <td>16.204034</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-25</th>\n",
       "      <td>15.0</td>\n",
       "      <td>6.7</td>\n",
       "      <td>57.9</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>41.5</td>\n",
       "      <td>23.9</td>\n",
       "      <td>12.1</td>\n",
       "      <td>1021.2</td>\n",
       "      <td>62.5</td>\n",
       "      <td>37.2</td>\n",
       "      <td>80.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.09</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.315332</td>\n",
       "      <td>13.680475</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.725513</td>\n",
       "      <td>15.958146</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-26</th>\n",
       "      <td>14.2</td>\n",
       "      <td>6.9</td>\n",
       "      <td>63.5</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.1</td>\n",
       "      <td>17.3</td>\n",
       "      <td>36.0</td>\n",
       "      <td>1026.5</td>\n",
       "      <td>27.0</td>\n",
       "      <td>29.2</td>\n",
       "      <td>147.4</td>\n",
       "      <td>12.5</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.12</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.030735</td>\n",
       "      <td>14.305593</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.632718</td>\n",
       "      <td>14.690258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-16</th>\n",
       "      <td>14.2</td>\n",
       "      <td>11.0</td>\n",
       "      <td>73.4</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>35.2</td>\n",
       "      <td>21.0</td>\n",
       "      <td>183.4</td>\n",
       "      <td>1007.1</td>\n",
       "      <td>86.1</td>\n",
       "      <td>14.9</td>\n",
       "      <td>71.5</td>\n",
       "      <td>6.2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.17</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.486135</td>\n",
       "      <td>16.180431</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.488740</td>\n",
       "      <td>60.371239</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-17</th>\n",
       "      <td>16.4</td>\n",
       "      <td>11.7</td>\n",
       "      <td>77.8</td>\n",
       "      <td>3.598</td>\n",
       "      <td>100.0</td>\n",
       "      <td>33.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.5</td>\n",
       "      <td>21.0</td>\n",
       "      <td>149.7</td>\n",
       "      <td>1001.1</td>\n",
       "      <td>85.6</td>\n",
       "      <td>15.4</td>\n",
       "      <td>76.1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.20</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>16.443136</td>\n",
       "      <td>16.079826</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.489218</td>\n",
       "      <td>60.781792</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-18</th>\n",
       "      <td>15.8</td>\n",
       "      <td>10.5</td>\n",
       "      <td>69.7</td>\n",
       "      <td>0.797</td>\n",
       "      <td>100.0</td>\n",
       "      <td>8.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>15.2</td>\n",
       "      <td>147.1</td>\n",
       "      <td>1004.2</td>\n",
       "      <td>52.3</td>\n",
       "      <td>19.4</td>\n",
       "      <td>118.8</td>\n",
       "      <td>10.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.224728</td>\n",
       "      <td>16.050465</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.488745</td>\n",
       "      <td>60.610568</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-19</th>\n",
       "      <td>16.6</td>\n",
       "      <td>12.4</td>\n",
       "      <td>89.1</td>\n",
       "      <td>10.126</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.4</td>\n",
       "      <td>10.1</td>\n",
       "      <td>213.9</td>\n",
       "      <td>1005.2</td>\n",
       "      <td>58.3</td>\n",
       "      <td>15.8</td>\n",
       "      <td>74.5</td>\n",
       "      <td>6.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.27</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>17.508904</td>\n",
       "      <td>15.869523</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.489212</td>\n",
       "      <td>60.060079</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-20</th>\n",
       "      <td>15.1</td>\n",
       "      <td>10.3</td>\n",
       "      <td>70.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>9.4</td>\n",
       "      <td>194.8</td>\n",
       "      <td>1009.3</td>\n",
       "      <td>41.4</td>\n",
       "      <td>21.7</td>\n",
       "      <td>177.8</td>\n",
       "      <td>15.5</td>\n",
       "      <td>10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.30</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.192161</td>\n",
       "      <td>15.756632</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.488751</td>\n",
       "      <td>59.834532</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>365 rows × 38 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 172,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 172
  },
  {
   "cell_type": "markdown",
   "id": "ee7a336b",
   "metadata": {},
   "source": [
    "## LSTM baseline"
   ]
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:38:28.246596Z",
     "start_time": "2024-08-05T19:38:28.232334Z"
    }
   },
   "cell_type": "code",
   "source": [
    "scaler = MinMaxScaler(feature_range=(0, 1))\n",
    "values = scaler.fit_transform(df_london[['temp']])"
   ],
   "id": "d01b5db5e931992e",
   "outputs": [],
   "execution_count": 173
  },
  {
   "cell_type": "code",
   "id": "2c755058",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:38:28.570066Z",
     "start_time": "2024-08-05T19:38:28.565627Z"
    }
   },
   "source": [
    "#https://machinelearningmastery.com/how-to-develop-lstm-models-for-time-series-forecasting/ \n",
    "\n",
    "def split_sequence(sequence, n_steps):\n",
    "    xs, ys = [], []\n",
    "    for i in range(len(sequence) - n_steps):\n",
    "        x = sequence[i:i + n_steps]\n",
    "        y = sequence[i + n_steps]\n",
    "        xs.append(x)\n",
    "        ys.append(y)\n",
    "    return np.array(xs), np.array(ys)"
   ],
   "outputs": [],
   "execution_count": 174
  },
  {
   "cell_type": "code",
   "id": "9b315b52",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:38:28.871324Z",
     "start_time": "2024-08-05T19:38:28.863878Z"
    }
   },
   "source": [
    "from numpy import array\n",
    "n_steps = 30\n",
    "X_train, y_train= split_sequence(values, n_steps)\n",
    "X_test, y_test = split_sequence(values, n_steps)"
   ],
   "outputs": [],
   "execution_count": 175
  },
  {
   "cell_type": "code",
   "id": "665ff6e6",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:38:29.196411Z",
     "start_time": "2024-08-05T19:38:29.194797Z"
    }
   },
   "source": [
    "#number of steps will be the lagged features of 3"
   ],
   "outputs": [],
   "execution_count": 176
  },
  {
   "cell_type": "code",
   "id": "4c62dbcd",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:38:29.584090Z",
     "start_time": "2024-08-05T19:38:29.582074Z"
    }
   },
   "source": [
    "X_train = X_train.reshape((X_train.shape[0], X_train.shape[1], 1))\n",
    "X_test = X_test.reshape((X_test.shape[0], X_test.shape[1], 1))"
   ],
   "outputs": [],
   "execution_count": 177
  },
  {
   "cell_type": "code",
   "id": "f67538fa",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:38:30.000665Z",
     "start_time": "2024-08-05T19:38:29.997589Z"
    }
   },
   "source": [
    "y_test #this is the series we're trying to predict, try to create a 3D feature set "
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.25970149],\n",
       "       [0.31940299],\n",
       "       [0.32238806],\n",
       "       ...,\n",
       "       [0.56716418],\n",
       "       [0.59104478],\n",
       "       [0.54626866]])"
      ]
     },
     "execution_count": 178,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 178
  },
  {
   "cell_type": "code",
   "id": "0fa8604e",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:38:30.357319Z",
     "start_time": "2024-08-05T19:38:30.355464Z"
    }
   },
   "source": [
    "from keras.models import Sequential\n",
    "from keras.layers import LSTM\n",
    "from keras.layers import Dense, Dropout\n",
    "from keras.optimizers import Adam"
   ],
   "outputs": [],
   "execution_count": 179
  },
  {
   "cell_type": "code",
   "id": "fded098d",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:38:30.907224Z",
     "start_time": "2024-08-05T19:38:30.905355Z"
    }
   },
   "source": [
    "# Reshape data for LSTM (samples, time steps, features)\n",
    "X_train = X_train.reshape((X_train.shape[0], X_train.shape[1], 1))\n",
    "X_test = X_test.reshape((X_test.shape[0], X_test.shape[1], 1))"
   ],
   "outputs": [],
   "execution_count": 180
  },
  {
   "cell_type": "code",
   "id": "d362a93b",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:38:31.409804Z",
     "start_time": "2024-08-05T19:38:31.364703Z"
    }
   },
   "source": [
    "model_baseline = Sequential()\n",
    "model_baseline.add(LSTM(50, return_sequences=True, input_shape=(n_steps, 1)))\n",
    "model_baseline.add(LSTM(50))\n",
    "model_baseline.add(Dense(1))\n",
    "model_baseline.compile(optimizer='adam', loss='mean_squared_error')"
   ],
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/keras/src/layers/rnn/rnn.py:204: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n",
      "  super().__init__(**kwargs)\n"
     ]
    }
   ],
   "execution_count": 181
  },
  {
   "cell_type": "code",
   "id": "2049afac",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:38:49.267184Z",
     "start_time": "2024-08-05T19:38:37.044018Z"
    }
   },
   "source": [
    "model_baseline.fit(X_train, y_train, epochs=10, batch_size=32, validation_data=(X_test, y_test))"
   ],
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/10\n",
      "\u001B[1m118/118\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m2s\u001B[0m 9ms/step - loss: 0.0394 - val_loss: 0.0066\n",
      "Epoch 2/10\n",
      "\u001B[1m118/118\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m1s\u001B[0m 9ms/step - loss: 0.0067 - val_loss: 0.0063\n",
      "Epoch 3/10\n",
      "\u001B[1m118/118\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m1s\u001B[0m 9ms/step - loss: 0.0061 - val_loss: 0.0055\n",
      "Epoch 4/10\n",
      "\u001B[1m118/118\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m1s\u001B[0m 9ms/step - loss: 0.0050 - val_loss: 0.0049\n",
      "Epoch 5/10\n",
      "\u001B[1m118/118\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m1s\u001B[0m 10ms/step - loss: 0.0048 - val_loss: 0.0043\n",
      "Epoch 6/10\n",
      "\u001B[1m118/118\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m1s\u001B[0m 9ms/step - loss: 0.0042 - val_loss: 0.0036\n",
      "Epoch 7/10\n",
      "\u001B[1m118/118\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m1s\u001B[0m 9ms/step - loss: 0.0036 - val_loss: 0.0033\n",
      "Epoch 8/10\n",
      "\u001B[1m118/118\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m1s\u001B[0m 9ms/step - loss: 0.0033 - val_loss: 0.0033\n",
      "Epoch 9/10\n",
      "\u001B[1m118/118\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m1s\u001B[0m 9ms/step - loss: 0.0031 - val_loss: 0.0031\n",
      "Epoch 10/10\n",
      "\u001B[1m118/118\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m1s\u001B[0m 9ms/step - loss: 0.0031 - val_loss: 0.0029\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.src.callbacks.history.History at 0x388e92830>"
      ]
     },
     "execution_count": 182,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 182
  },
  {
   "cell_type": "code",
   "id": "78f398f7",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:38:49.271860Z",
     "start_time": "2024-08-05T19:38:49.268886Z"
    }
   },
   "source": [
    "def predict_future(model, data, n_steps, predict_n_days):\n",
    "    prediction_list = data[-n_steps:].tolist()\n",
    "    prediction_list = [item[0] for item in prediction_list]\n",
    "    \n",
    "    for _ in range(predict_n_days):\n",
    "        x = np.array(prediction_list[-n_steps:]).reshape((1, n_steps, 1))\n",
    "        out = model.predict(x)[0][0]\n",
    "        prediction_list.append(out)\n",
    "\n",
    "    # Transform the predictions back to the original scale\n",
    "    prediction_list = scaler.inverse_transform(np.array(prediction_list).reshape(-1, 1))\n",
    "    return prediction_list"
   ],
   "outputs": [],
   "execution_count": 183
  },
  {
   "cell_type": "code",
   "id": "761fe167-3ef8-4f8f-a8a4-9a64c1476c9b",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:38:49.274080Z",
     "start_time": "2024-08-05T19:38:49.272484Z"
    }
   },
   "source": "predict_n_days = 365\n",
   "outputs": [],
   "execution_count": 184
  },
  {
   "cell_type": "code",
   "id": "70085505",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:38:56.976524Z",
     "start_time": "2024-08-05T19:38:49.275245Z"
    }
   },
   "source": [
    "yhat_baseline = predict_future(model_baseline, values, n_steps, predict_n_days)"
   ],
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 75ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 41ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 20ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 14ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 22ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 33ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 12ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 12ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 15ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 12ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 13ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 13ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 18ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 12ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 12ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 19ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 6ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n"
     ]
    }
   ],
   "execution_count": 185
  },
  {
   "cell_type": "code",
   "id": "b0eb5105",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:38:56.982774Z",
     "start_time": "2024-08-05T19:38:56.977591Z"
    }
   },
   "source": [
    "yhat_baseline[n_steps:]"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[14.55240725],\n",
       "       [14.49491866],\n",
       "       [14.46017911],\n",
       "       [14.40845914],\n",
       "       [14.37285699],\n",
       "       [14.34762   ],\n",
       "       [14.32510059],\n",
       "       [14.30190428],\n",
       "       [14.27545126],\n",
       "       [14.24298601],\n",
       "       [14.20327853],\n",
       "       [14.15666028],\n",
       "       [14.10535364],\n",
       "       [14.0517747 ],\n",
       "       [13.99524854],\n",
       "       [13.9361905 ],\n",
       "       [13.87565287],\n",
       "       [13.81286089],\n",
       "       [13.74886687],\n",
       "       [13.68340324],\n",
       "       [13.61710097],\n",
       "       [13.55155947],\n",
       "       [13.48546985],\n",
       "       [13.4213091 ],\n",
       "       [13.35919403],\n",
       "       [13.29802342],\n",
       "       [13.23900432],\n",
       "       [13.18049339],\n",
       "       [13.12259347],\n",
       "       [13.06487625],\n",
       "       [13.00824926],\n",
       "       [12.95286025],\n",
       "       [12.89833685],\n",
       "       [12.84438551],\n",
       "       [12.79088044],\n",
       "       [12.73772981],\n",
       "       [12.68489066],\n",
       "       [12.63232906],\n",
       "       [12.58004502],\n",
       "       [12.5280495 ],\n",
       "       [12.47636748],\n",
       "       [12.42501591],\n",
       "       [12.37402177],\n",
       "       [12.323414  ],\n",
       "       [12.27320758],\n",
       "       [12.22341848],\n",
       "       [12.17405968],\n",
       "       [12.12513916],\n",
       "       [12.07665494],\n",
       "       [12.028617  ],\n",
       "       [11.98102033],\n",
       "       [11.93386895],\n",
       "       [11.88715785],\n",
       "       [11.84087904],\n",
       "       [11.79502754],\n",
       "       [11.74960235],\n",
       "       [11.70459947],\n",
       "       [11.66000893],\n",
       "       [11.61582372],\n",
       "       [11.57204485],\n",
       "       [11.52866434],\n",
       "       [11.48568218],\n",
       "       [11.44309737],\n",
       "       [11.40090193],\n",
       "       [11.35910884],\n",
       "       [11.31769912],\n",
       "       [11.27667278],\n",
       "       [11.23603781],\n",
       "       [11.19578122],\n",
       "       [11.15590701],\n",
       "       [11.11641817],\n",
       "       [11.07731171],\n",
       "       [11.03858164],\n",
       "       [11.00022696],\n",
       "       [10.96224568],\n",
       "       [10.92463579],\n",
       "       [10.88739829],\n",
       "       [10.8505282 ],\n",
       "       [10.81402351],\n",
       "       [10.77788323],\n",
       "       [10.74210237],\n",
       "       [10.70668093],\n",
       "       [10.6716159 ],\n",
       "       [10.63690231],\n",
       "       [10.60254114],\n",
       "       [10.5685324 ],\n",
       "       [10.53487009],\n",
       "       [10.50154923],\n",
       "       [10.46857082],\n",
       "       [10.43593784],\n",
       "       [10.40363832],\n",
       "       [10.37167326],\n",
       "       [10.34004166],\n",
       "       [10.30874151],\n",
       "       [10.27777183],\n",
       "       [10.24712962],\n",
       "       [10.21680789],\n",
       "       [10.18680963],\n",
       "       [10.15713285],\n",
       "       [10.12777156],\n",
       "       [10.09872276],\n",
       "       [10.06998945],\n",
       "       [10.04156563],\n",
       "       [10.01344732],\n",
       "       [ 9.98563551],\n",
       "       [ 9.9581272 ],\n",
       "       [ 9.93091742],\n",
       "       [ 9.90400714],\n",
       "       [ 9.87739039],\n",
       "       [ 9.85107115],\n",
       "       [ 9.82504244],\n",
       "       [ 9.79930127],\n",
       "       [ 9.77385062],\n",
       "       [ 9.74867952],\n",
       "       [ 9.72379296],\n",
       "       [ 9.69918494],\n",
       "       [ 9.67485547],\n",
       "       [ 9.65079657],\n",
       "       [ 9.62701321],\n",
       "       [ 9.60349742],\n",
       "       [ 9.58025219],\n",
       "       [ 9.55727053],\n",
       "       [ 9.53454945],\n",
       "       [ 9.51208994],\n",
       "       [ 9.48988901],\n",
       "       [ 9.46794766],\n",
       "       [ 9.4462629 ],\n",
       "       [ 9.42482174],\n",
       "       [ 9.40363416],\n",
       "       [ 9.38269319],\n",
       "       [ 9.36199482],\n",
       "       [ 9.34154105],\n",
       "       [ 9.3213289 ],\n",
       "       [ 9.30135235],\n",
       "       [ 9.28161443],\n",
       "       [ 9.26210513],\n",
       "       [ 9.24282945],\n",
       "       [ 9.22378239],\n",
       "       [ 9.20496297],\n",
       "       [ 9.18636619],\n",
       "       [ 9.16798905],\n",
       "       [ 9.14983854],\n",
       "       [ 9.13190368],\n",
       "       [ 9.11418747],\n",
       "       [ 9.09668391],\n",
       "       [ 9.07939101],\n",
       "       [ 9.06230676],\n",
       "       [ 9.04543118],\n",
       "       [ 9.02875927],\n",
       "       [ 9.01229303],\n",
       "       [ 8.99602446],\n",
       "       [ 8.97995857],\n",
       "       [ 8.96409035],\n",
       "       [ 8.94841582],\n",
       "       [ 8.93293098],\n",
       "       [ 8.91763982],\n",
       "       [ 8.90253836],\n",
       "       [ 8.8876216 ],\n",
       "       [ 8.87288954],\n",
       "       [ 8.85834118],\n",
       "       [ 8.84397552],\n",
       "       [ 8.82978957],\n",
       "       [ 8.81577434],\n",
       "       [ 8.80193782],\n",
       "       [ 8.78827802],\n",
       "       [ 8.77478594],\n",
       "       [ 8.76146658],\n",
       "       [ 8.74831295],\n",
       "       [ 8.73532306],\n",
       "       [ 8.7224999 ],\n",
       "       [ 8.70984146],\n",
       "       [ 8.69733878],\n",
       "       [ 8.68499583],\n",
       "       [ 8.67281363],\n",
       "       [ 8.66078317],\n",
       "       [ 8.64890647],\n",
       "       [ 8.63718252],\n",
       "       [ 8.62560533],\n",
       "       [ 8.6141799 ],\n",
       "       [ 8.60289923],\n",
       "       [ 8.59176332],\n",
       "       [ 8.58077218],\n",
       "       [ 8.56992281],\n",
       "       [ 8.55921021],\n",
       "       [ 8.54863639],\n",
       "       [ 8.53819935],\n",
       "       [ 8.5278941 ],\n",
       "       [ 8.51772562],\n",
       "       [ 8.50768893],\n",
       "       [ 8.49778602],\n",
       "       [ 8.48800791],\n",
       "       [ 8.47835858],\n",
       "       [ 8.46883306],\n",
       "       [ 8.45943134],\n",
       "       [ 8.45015441],\n",
       "       [ 8.44099829],\n",
       "       [ 8.43196297],\n",
       "       [ 8.42304746],\n",
       "       [ 8.41424676],\n",
       "       [ 8.40556187],\n",
       "       [ 8.39699279],\n",
       "       [ 8.38853453],\n",
       "       [ 8.38019009],\n",
       "       [ 8.37194848],\n",
       "       [ 8.36382269],\n",
       "       [ 8.35580172],\n",
       "       [ 8.34788858],\n",
       "       [ 8.34008026],\n",
       "       [ 8.33237678],\n",
       "       [ 8.32477713],\n",
       "       [ 8.31727432],\n",
       "       [ 8.30987135],\n",
       "       [ 8.30256822],\n",
       "       [ 8.29536292],\n",
       "       [ 8.28825148],\n",
       "       [ 8.28123588],\n",
       "       [ 8.27430813],\n",
       "       [ 8.26747723],\n",
       "       [ 8.26074018],\n",
       "       [ 8.25409498],\n",
       "       [ 8.24753464],\n",
       "       [ 8.24106415],\n",
       "       [ 8.23467952],\n",
       "       [ 8.22837976],\n",
       "       [ 8.22216685],\n",
       "       [ 8.21603881],\n",
       "       [ 8.20998864],\n",
       "       [ 8.20402134],\n",
       "       [ 8.1981359 ],\n",
       "       [ 8.19233033],\n",
       "       [ 8.18660464],\n",
       "       [ 8.18095082],\n",
       "       [ 8.17537389],\n",
       "       [ 8.16987682],\n",
       "       [ 8.16445163],\n",
       "       [ 8.15910332],\n",
       "       [ 8.1538269 ],\n",
       "       [ 8.14862135],\n",
       "       [ 8.1434827 ],\n",
       "       [ 8.13841693],\n",
       "       [ 8.13342005],\n",
       "       [ 8.12849106],\n",
       "       [ 8.12362796],\n",
       "       [ 8.11882976],\n",
       "       [ 8.11410144],\n",
       "       [ 8.10943702],\n",
       "       [ 8.1048335 ],\n",
       "       [ 8.10029288],\n",
       "       [ 8.09581216],\n",
       "       [ 8.09139334],\n",
       "       [ 8.08703642],\n",
       "       [ 8.08274339],\n",
       "       [ 8.07850229],\n",
       "       [ 8.07432407],\n",
       "       [ 8.07020277],\n",
       "       [ 8.06613438],\n",
       "       [ 8.0621249 ],\n",
       "       [ 8.05817132],\n",
       "       [ 8.05426966],\n",
       "       [ 8.05042291],\n",
       "       [ 8.04662808],\n",
       "       [ 8.04288715],\n",
       "       [ 8.03919615],\n",
       "       [ 8.03555806],\n",
       "       [ 8.0319649 ],\n",
       "       [ 8.02842565],\n",
       "       [ 8.02493333],\n",
       "       [ 8.02149092],\n",
       "       [ 8.01809344],\n",
       "       [ 8.01474388],\n",
       "       [ 8.01144025],\n",
       "       [ 8.00818554],\n",
       "       [ 8.00497376],\n",
       "       [ 8.00180391],\n",
       "       [ 7.99867899],\n",
       "       [ 7.99559799],\n",
       "       [ 7.99255793],\n",
       "       [ 7.9895608 ],\n",
       "       [ 7.9866046 ],\n",
       "       [ 7.98369134],\n",
       "       [ 7.980819  ],\n",
       "       [ 7.97798561],\n",
       "       [ 7.97519514],\n",
       "       [ 7.97243563],\n",
       "       [ 7.96971605],\n",
       "       [ 7.9670384 ],\n",
       "       [ 7.96439669],\n",
       "       [ 7.96179192],\n",
       "       [ 7.9592201 ],\n",
       "       [ 7.95668721],\n",
       "       [ 7.95418628],\n",
       "       [ 7.95172228],\n",
       "       [ 7.94929123],\n",
       "       [ 7.94689612],\n",
       "       [ 7.94453696],\n",
       "       [ 7.94220475],\n",
       "       [ 7.93990848],\n",
       "       [ 7.93764516],\n",
       "       [ 7.93541079],\n",
       "       [ 7.93320936],\n",
       "       [ 7.93103689],\n",
       "       [ 7.92889437],\n",
       "       [ 7.92678181],\n",
       "       [ 7.92470119],\n",
       "       [ 7.92264752],\n",
       "       [ 7.92062281],\n",
       "       [ 7.91862306],\n",
       "       [ 7.91665726],\n",
       "       [ 7.91471741],\n",
       "       [ 7.91280552],\n",
       "       [ 7.91091559],\n",
       "       [ 7.90905461],\n",
       "       [ 7.90721959],\n",
       "       [ 7.90540953],\n",
       "       [ 7.90362443],\n",
       "       [ 7.90186829],\n",
       "       [ 7.90013211],\n",
       "       [ 7.89842189],\n",
       "       [ 7.89673563],\n",
       "       [ 7.89507532],\n",
       "       [ 7.89343499],\n",
       "       [ 7.89181662],\n",
       "       [ 7.89022321],\n",
       "       [ 7.88864976],\n",
       "       [ 7.88710128],\n",
       "       [ 7.88557276],\n",
       "       [ 7.88406921],\n",
       "       [ 7.88258262],\n",
       "       [ 7.881118  ],\n",
       "       [ 7.87967435],\n",
       "       [ 7.87825466],\n",
       "       [ 7.87685094],\n",
       "       [ 7.87546918],\n",
       "       [ 7.8741044 ],\n",
       "       [ 7.87275759],\n",
       "       [ 7.87142974],\n",
       "       [ 7.87012187],\n",
       "       [ 7.86883097],\n",
       "       [ 7.86756003],\n",
       "       [ 7.86630906],\n",
       "       [ 7.86507407],\n",
       "       [ 7.86385605],\n",
       "       [ 7.86265301],\n",
       "       [ 7.86146993],\n",
       "       [ 7.86030382],\n",
       "       [ 7.85915269],\n",
       "       [ 7.85801554],\n",
       "       [ 7.85689736],\n",
       "       [ 7.85579415],\n",
       "       [ 7.85470592],\n",
       "       [ 7.85363366],\n",
       "       [ 7.85257837],\n",
       "       [ 7.85153407],\n",
       "       [ 7.85050674],\n",
       "       [ 7.84949239],\n",
       "       [ 7.84849501],\n",
       "       [ 7.84750961],\n",
       "       [ 7.84653919],\n",
       "       [ 7.84558274],\n",
       "       [ 7.84464027],\n",
       "       [ 7.84370978],\n",
       "       [ 7.84279228],\n",
       "       [ 7.84188675],\n",
       "       [ 7.84099819],\n",
       "       [ 7.84011662]])"
      ]
     },
     "execution_count": 186,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 186
  },
  {
   "cell_type": "code",
   "id": "afda69d7",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:38:56.986008Z",
     "start_time": "2024-08-05T19:38:56.983814Z"
    }
   },
   "source": [
    "len(yhat_baseline[n_steps:])"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "365"
      ]
     },
     "execution_count": 187,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 187
  },
  {
   "cell_type": "code",
   "id": "0db999cb",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:38:57.009629Z",
     "start_time": "2024-08-05T19:38:56.986668Z"
    }
   },
   "source": [
    "df_test_w_preds['lstm_base'] = yhat_baseline[n_steps:]\n",
    "df_test_w_preds"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "            temp   dew  humidity  precip  precipprob  precipcover  snow  \\\n",
       "2023-05-22  15.1   6.9      64.3   0.000         0.0         0.00   0.0   \n",
       "2023-05-23  14.0   6.1      60.6   0.000         0.0         0.00   0.0   \n",
       "2023-05-24  15.8   6.7      61.2   0.000         0.0         0.00   0.0   \n",
       "2023-05-25  15.0   6.7      57.9   0.000         0.0         0.00   0.0   \n",
       "2023-05-26  14.2   6.9      63.5   0.000         0.0         0.00   0.0   \n",
       "...          ...   ...       ...     ...         ...          ...   ...   \n",
       "2024-05-16  14.2  11.0      73.4   0.000         0.0         0.00   0.0   \n",
       "2024-05-17  16.4  11.7      77.8   3.598       100.0        33.33   0.0   \n",
       "2024-05-18  15.8  10.5      69.7   0.797       100.0         8.33   0.0   \n",
       "2024-05-19  16.6  12.4      89.1  10.126       100.0        20.83   0.0   \n",
       "2024-05-20  15.1  10.3      70.2   0.000         0.0         0.00   0.0   \n",
       "\n",
       "            snowdepth  windgust  windspeed  winddir  sealevelpressure  \\\n",
       "2023-05-22        0.0      26.1       17.5     61.3            1027.2   \n",
       "2023-05-23        0.0      36.4       21.3     40.6            1025.3   \n",
       "2023-05-24        0.0      34.7       20.0     30.7            1021.7   \n",
       "2023-05-25        0.0      41.5       23.9     12.1            1021.2   \n",
       "2023-05-26        0.0      26.1       17.3     36.0            1026.5   \n",
       "...               ...       ...        ...      ...               ...   \n",
       "2024-05-16        0.0      35.2       21.0    183.4            1007.1   \n",
       "2024-05-17        0.0      30.5       21.0    149.7            1001.1   \n",
       "2024-05-18        0.0      25.0       15.2    147.1            1004.2   \n",
       "2024-05-19        0.0      18.4       10.1    213.9            1005.2   \n",
       "2024-05-20        0.0      17.4        9.4    194.8            1009.3   \n",
       "\n",
       "            cloudcover  visibility  solarradiation  solarenergy  uvindex  \\\n",
       "2023-05-22        55.6        27.2            99.0          8.7      4.0   \n",
       "2023-05-23        40.0        27.5           192.2         16.3      9.0   \n",
       "2023-05-24        43.9        35.0           156.4         13.6      7.0   \n",
       "2023-05-25        62.5        37.2            80.0          7.0      3.0   \n",
       "2023-05-26        27.0        29.2           147.4         12.5      7.0   \n",
       "...                ...         ...             ...          ...      ...   \n",
       "2024-05-16        86.1        14.9            71.5          6.2      2.0   \n",
       "2024-05-17        85.6        15.4            76.1          6.5      4.0   \n",
       "2024-05-18        52.3        19.4           118.8         10.3      9.0   \n",
       "2024-05-19        58.3        15.8            74.5          6.5      3.0   \n",
       "2024-05-20        41.4        21.7           177.8         15.5     10.0   \n",
       "\n",
       "            severerisk  moonphase  clusters_description  year  month_1  \\\n",
       "2023-05-22        10.0       0.00                   1.0  2023    False   \n",
       "2023-05-23        10.0       0.03                   1.0  2023    False   \n",
       "2023-05-24        10.0       0.06                   1.0  2023    False   \n",
       "2023-05-25        10.0       0.09                   1.0  2023    False   \n",
       "2023-05-26        10.0       0.12                   2.0  2023    False   \n",
       "...                ...        ...                   ...   ...      ...   \n",
       "2024-05-16        10.0       0.17                   1.0  2024    False   \n",
       "2024-05-17        10.0       0.20                   1.0  2024    False   \n",
       "2024-05-18        10.0       0.25                   0.0  2024    False   \n",
       "2024-05-19        10.0       0.27                   1.0  2024    False   \n",
       "2024-05-20        10.0       0.30                   1.0  2024    False   \n",
       "\n",
       "            month_2  month_3  month_4  month_5  month_6  month_7  month_8  \\\n",
       "2023-05-22    False    False    False     True    False    False    False   \n",
       "2023-05-23    False    False    False     True    False    False    False   \n",
       "2023-05-24    False    False    False     True    False    False    False   \n",
       "2023-05-25    False    False    False     True    False    False    False   \n",
       "2023-05-26    False    False    False     True    False    False    False   \n",
       "...             ...      ...      ...      ...      ...      ...      ...   \n",
       "2024-05-16    False    False    False     True    False    False    False   \n",
       "2024-05-17    False    False    False     True    False    False    False   \n",
       "2024-05-18    False    False    False     True    False    False    False   \n",
       "2024-05-19    False    False    False     True    False    False    False   \n",
       "2024-05-20    False    False    False     True    False    False    False   \n",
       "\n",
       "            month_9  month_10  month_11  month_12      preds   preds_gs  \\\n",
       "2023-05-22    False     False     False     False  14.836311  13.335446   \n",
       "2023-05-23    False     False     False     False  17.028198  15.511145   \n",
       "2023-05-24    False     False     False     False  15.288651  15.613107   \n",
       "2023-05-25    False     False     False     False  14.315332  13.680475   \n",
       "2023-05-26    False     False     False     False  14.030735  14.305593   \n",
       "...             ...       ...       ...       ...        ...        ...   \n",
       "2024-05-16    False     False     False     False  14.486135  16.180431   \n",
       "2024-05-17    False     False     False     False  16.443136  16.079826   \n",
       "2024-05-18    False     False     False     False  14.224728  16.050465   \n",
       "2024-05-19    False     False     False     False  17.508904  15.869523   \n",
       "2024-05-20    False     False     False     False  14.192161  15.756632   \n",
       "\n",
       "            sktime_naive  preds_autoarima  preds_sarimax  lstm_base  \n",
       "2023-05-22     12.189839        13.984044      15.683903  14.552407  \n",
       "2023-05-23     12.189839        13.895126      15.437144  14.494919  \n",
       "2023-05-24     12.189839        13.759057      16.204034  14.460179  \n",
       "2023-05-25     12.189839        13.725513      15.958146  14.408459  \n",
       "2023-05-26     12.189839        13.632718      14.690258  14.372857  \n",
       "...                  ...              ...            ...        ...  \n",
       "2024-05-16     12.189839        13.488740      60.371239   7.843710  \n",
       "2024-05-17     12.189839        13.489218      60.781792   7.842792  \n",
       "2024-05-18     12.189839        13.488745      60.610568   7.841887  \n",
       "2024-05-19     12.189839        13.489212      60.060079   7.840998  \n",
       "2024-05-20     12.189839        13.488751      59.834532   7.840117  \n",
       "\n",
       "[365 rows x 39 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>clusters_description</th>\n",
       "      <th>year</th>\n",
       "      <th>month_1</th>\n",
       "      <th>month_2</th>\n",
       "      <th>month_3</th>\n",
       "      <th>month_4</th>\n",
       "      <th>month_5</th>\n",
       "      <th>month_6</th>\n",
       "      <th>month_7</th>\n",
       "      <th>month_8</th>\n",
       "      <th>month_9</th>\n",
       "      <th>month_10</th>\n",
       "      <th>month_11</th>\n",
       "      <th>month_12</th>\n",
       "      <th>preds</th>\n",
       "      <th>preds_gs</th>\n",
       "      <th>sktime_naive</th>\n",
       "      <th>preds_autoarima</th>\n",
       "      <th>preds_sarimax</th>\n",
       "      <th>lstm_base</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2023-05-22</th>\n",
       "      <td>15.1</td>\n",
       "      <td>6.9</td>\n",
       "      <td>64.3</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.1</td>\n",
       "      <td>17.5</td>\n",
       "      <td>61.3</td>\n",
       "      <td>1027.2</td>\n",
       "      <td>55.6</td>\n",
       "      <td>27.2</td>\n",
       "      <td>99.0</td>\n",
       "      <td>8.7</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.836311</td>\n",
       "      <td>13.335446</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.984044</td>\n",
       "      <td>15.683903</td>\n",
       "      <td>14.552407</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-23</th>\n",
       "      <td>14.0</td>\n",
       "      <td>6.1</td>\n",
       "      <td>60.6</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>36.4</td>\n",
       "      <td>21.3</td>\n",
       "      <td>40.6</td>\n",
       "      <td>1025.3</td>\n",
       "      <td>40.0</td>\n",
       "      <td>27.5</td>\n",
       "      <td>192.2</td>\n",
       "      <td>16.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>17.028198</td>\n",
       "      <td>15.511145</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.895126</td>\n",
       "      <td>15.437144</td>\n",
       "      <td>14.494919</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-24</th>\n",
       "      <td>15.8</td>\n",
       "      <td>6.7</td>\n",
       "      <td>61.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>34.7</td>\n",
       "      <td>20.0</td>\n",
       "      <td>30.7</td>\n",
       "      <td>1021.7</td>\n",
       "      <td>43.9</td>\n",
       "      <td>35.0</td>\n",
       "      <td>156.4</td>\n",
       "      <td>13.6</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>15.288651</td>\n",
       "      <td>15.613107</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.759057</td>\n",
       "      <td>16.204034</td>\n",
       "      <td>14.460179</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-25</th>\n",
       "      <td>15.0</td>\n",
       "      <td>6.7</td>\n",
       "      <td>57.9</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>41.5</td>\n",
       "      <td>23.9</td>\n",
       "      <td>12.1</td>\n",
       "      <td>1021.2</td>\n",
       "      <td>62.5</td>\n",
       "      <td>37.2</td>\n",
       "      <td>80.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.09</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.315332</td>\n",
       "      <td>13.680475</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.725513</td>\n",
       "      <td>15.958146</td>\n",
       "      <td>14.408459</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-26</th>\n",
       "      <td>14.2</td>\n",
       "      <td>6.9</td>\n",
       "      <td>63.5</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.1</td>\n",
       "      <td>17.3</td>\n",
       "      <td>36.0</td>\n",
       "      <td>1026.5</td>\n",
       "      <td>27.0</td>\n",
       "      <td>29.2</td>\n",
       "      <td>147.4</td>\n",
       "      <td>12.5</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.12</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.030735</td>\n",
       "      <td>14.305593</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.632718</td>\n",
       "      <td>14.690258</td>\n",
       "      <td>14.372857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-16</th>\n",
       "      <td>14.2</td>\n",
       "      <td>11.0</td>\n",
       "      <td>73.4</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>35.2</td>\n",
       "      <td>21.0</td>\n",
       "      <td>183.4</td>\n",
       "      <td>1007.1</td>\n",
       "      <td>86.1</td>\n",
       "      <td>14.9</td>\n",
       "      <td>71.5</td>\n",
       "      <td>6.2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.17</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.486135</td>\n",
       "      <td>16.180431</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.488740</td>\n",
       "      <td>60.371239</td>\n",
       "      <td>7.843710</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-17</th>\n",
       "      <td>16.4</td>\n",
       "      <td>11.7</td>\n",
       "      <td>77.8</td>\n",
       "      <td>3.598</td>\n",
       "      <td>100.0</td>\n",
       "      <td>33.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.5</td>\n",
       "      <td>21.0</td>\n",
       "      <td>149.7</td>\n",
       "      <td>1001.1</td>\n",
       "      <td>85.6</td>\n",
       "      <td>15.4</td>\n",
       "      <td>76.1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.20</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>16.443136</td>\n",
       "      <td>16.079826</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.489218</td>\n",
       "      <td>60.781792</td>\n",
       "      <td>7.842792</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-18</th>\n",
       "      <td>15.8</td>\n",
       "      <td>10.5</td>\n",
       "      <td>69.7</td>\n",
       "      <td>0.797</td>\n",
       "      <td>100.0</td>\n",
       "      <td>8.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>15.2</td>\n",
       "      <td>147.1</td>\n",
       "      <td>1004.2</td>\n",
       "      <td>52.3</td>\n",
       "      <td>19.4</td>\n",
       "      <td>118.8</td>\n",
       "      <td>10.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.224728</td>\n",
       "      <td>16.050465</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.488745</td>\n",
       "      <td>60.610568</td>\n",
       "      <td>7.841887</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-19</th>\n",
       "      <td>16.6</td>\n",
       "      <td>12.4</td>\n",
       "      <td>89.1</td>\n",
       "      <td>10.126</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.4</td>\n",
       "      <td>10.1</td>\n",
       "      <td>213.9</td>\n",
       "      <td>1005.2</td>\n",
       "      <td>58.3</td>\n",
       "      <td>15.8</td>\n",
       "      <td>74.5</td>\n",
       "      <td>6.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.27</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>17.508904</td>\n",
       "      <td>15.869523</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.489212</td>\n",
       "      <td>60.060079</td>\n",
       "      <td>7.840998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-20</th>\n",
       "      <td>15.1</td>\n",
       "      <td>10.3</td>\n",
       "      <td>70.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>9.4</td>\n",
       "      <td>194.8</td>\n",
       "      <td>1009.3</td>\n",
       "      <td>41.4</td>\n",
       "      <td>21.7</td>\n",
       "      <td>177.8</td>\n",
       "      <td>15.5</td>\n",
       "      <td>10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.30</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.192161</td>\n",
       "      <td>15.756632</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.488751</td>\n",
       "      <td>59.834532</td>\n",
       "      <td>7.840117</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>365 rows × 39 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 188,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 188
  },
  {
   "cell_type": "code",
   "id": "7c0f8a02",
   "metadata": {},
   "source": [
    "# the model is very weak and it's predicting the same 200+ temperature. it needs improving with additiona layers"
   ],
   "outputs": [],
   "execution_count": null
  },
  {
   "metadata": {},
   "cell_type": "markdown",
   "source": "### Improved layers - LSTM",
   "id": "11cdad6b03814de3"
  },
  {
   "cell_type": "code",
   "id": "8268e12b",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:39:12.693583Z",
     "start_time": "2024-08-05T19:39:03.651492Z"
    }
   },
   "source": [
    "model_lstm_two = Sequential()\n",
    "model_lstm_two.add(LSTM(100, return_sequences=True, input_shape=(n_steps, 1)))\n",
    "model_lstm_two.add(Dropout(0.2))\n",
    "\n",
    "model_lstm_two.add(LSTM(100, return_sequences=False))\n",
    "model_lstm_two.add(Dropout(0.2))\n",
    "\n",
    "model_lstm_two.add(Dense(50, activation='relu'))\n",
    "\n",
    "model_lstm_two.add(Dense(1))\n",
    "\n",
    "optimizer = Adam(learning_rate=0.001)\n",
    "model_lstm_two.compile(optimizer=optimizer, loss='mean_squared_error')\n",
    "\n",
    "history = model_lstm_two.fit(X_train, y_train, epochs=3, batch_size=32, validation_data=(X_test, y_test))\n"
   ],
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/3\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/viktoriaivan/repos/data-llm-experiments/.venv/lib/python3.10/site-packages/keras/src/layers/rnn/rnn.py:204: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n",
      "  super().__init__(**kwargs)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001B[1m118/118\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m4s\u001B[0m 23ms/step - loss: 0.0287 - val_loss: 0.0066\n",
      "Epoch 2/3\n",
      "\u001B[1m118/118\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m3s\u001B[0m 21ms/step - loss: 0.0079 - val_loss: 0.0061\n",
      "Epoch 3/3\n",
      "\u001B[1m118/118\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m3s\u001B[0m 23ms/step - loss: 0.0065 - val_loss: 0.0058\n"
     ]
    }
   ],
   "execution_count": 189
  },
  {
   "cell_type": "code",
   "id": "5b93514c",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:39:20.448465Z",
     "start_time": "2024-08-05T19:39:12.695201Z"
    }
   },
   "source": [
    "yhat_lstm_two = predict_future(model_lstm_two, values, n_steps, predict_n_days)"
   ],
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 80ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 12ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 21ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 18ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 23ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 12ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 16ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 18ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 35ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 12ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 12ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n"
     ]
    }
   ],
   "execution_count": 190
  },
  {
   "cell_type": "code",
   "id": "40a7803a",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:39:20.467415Z",
     "start_time": "2024-08-05T19:39:20.449626Z"
    }
   },
   "source": [
    "df_test_w_preds['lstm_two_layers'] = yhat_lstm_two[n_steps:]\n",
    "df_test_w_preds"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "            temp   dew  humidity  precip  precipprob  precipcover  snow  \\\n",
       "2023-05-22  15.1   6.9      64.3   0.000         0.0         0.00   0.0   \n",
       "2023-05-23  14.0   6.1      60.6   0.000         0.0         0.00   0.0   \n",
       "2023-05-24  15.8   6.7      61.2   0.000         0.0         0.00   0.0   \n",
       "2023-05-25  15.0   6.7      57.9   0.000         0.0         0.00   0.0   \n",
       "2023-05-26  14.2   6.9      63.5   0.000         0.0         0.00   0.0   \n",
       "...          ...   ...       ...     ...         ...          ...   ...   \n",
       "2024-05-16  14.2  11.0      73.4   0.000         0.0         0.00   0.0   \n",
       "2024-05-17  16.4  11.7      77.8   3.598       100.0        33.33   0.0   \n",
       "2024-05-18  15.8  10.5      69.7   0.797       100.0         8.33   0.0   \n",
       "2024-05-19  16.6  12.4      89.1  10.126       100.0        20.83   0.0   \n",
       "2024-05-20  15.1  10.3      70.2   0.000         0.0         0.00   0.0   \n",
       "\n",
       "            snowdepth  windgust  windspeed  winddir  sealevelpressure  \\\n",
       "2023-05-22        0.0      26.1       17.5     61.3            1027.2   \n",
       "2023-05-23        0.0      36.4       21.3     40.6            1025.3   \n",
       "2023-05-24        0.0      34.7       20.0     30.7            1021.7   \n",
       "2023-05-25        0.0      41.5       23.9     12.1            1021.2   \n",
       "2023-05-26        0.0      26.1       17.3     36.0            1026.5   \n",
       "...               ...       ...        ...      ...               ...   \n",
       "2024-05-16        0.0      35.2       21.0    183.4            1007.1   \n",
       "2024-05-17        0.0      30.5       21.0    149.7            1001.1   \n",
       "2024-05-18        0.0      25.0       15.2    147.1            1004.2   \n",
       "2024-05-19        0.0      18.4       10.1    213.9            1005.2   \n",
       "2024-05-20        0.0      17.4        9.4    194.8            1009.3   \n",
       "\n",
       "            cloudcover  visibility  solarradiation  solarenergy  uvindex  \\\n",
       "2023-05-22        55.6        27.2            99.0          8.7      4.0   \n",
       "2023-05-23        40.0        27.5           192.2         16.3      9.0   \n",
       "2023-05-24        43.9        35.0           156.4         13.6      7.0   \n",
       "2023-05-25        62.5        37.2            80.0          7.0      3.0   \n",
       "2023-05-26        27.0        29.2           147.4         12.5      7.0   \n",
       "...                ...         ...             ...          ...      ...   \n",
       "2024-05-16        86.1        14.9            71.5          6.2      2.0   \n",
       "2024-05-17        85.6        15.4            76.1          6.5      4.0   \n",
       "2024-05-18        52.3        19.4           118.8         10.3      9.0   \n",
       "2024-05-19        58.3        15.8            74.5          6.5      3.0   \n",
       "2024-05-20        41.4        21.7           177.8         15.5     10.0   \n",
       "\n",
       "            severerisk  moonphase  clusters_description  year  month_1  \\\n",
       "2023-05-22        10.0       0.00                   1.0  2023    False   \n",
       "2023-05-23        10.0       0.03                   1.0  2023    False   \n",
       "2023-05-24        10.0       0.06                   1.0  2023    False   \n",
       "2023-05-25        10.0       0.09                   1.0  2023    False   \n",
       "2023-05-26        10.0       0.12                   2.0  2023    False   \n",
       "...                ...        ...                   ...   ...      ...   \n",
       "2024-05-16        10.0       0.17                   1.0  2024    False   \n",
       "2024-05-17        10.0       0.20                   1.0  2024    False   \n",
       "2024-05-18        10.0       0.25                   0.0  2024    False   \n",
       "2024-05-19        10.0       0.27                   1.0  2024    False   \n",
       "2024-05-20        10.0       0.30                   1.0  2024    False   \n",
       "\n",
       "            month_2  month_3  month_4  month_5  month_6  month_7  month_8  \\\n",
       "2023-05-22    False    False    False     True    False    False    False   \n",
       "2023-05-23    False    False    False     True    False    False    False   \n",
       "2023-05-24    False    False    False     True    False    False    False   \n",
       "2023-05-25    False    False    False     True    False    False    False   \n",
       "2023-05-26    False    False    False     True    False    False    False   \n",
       "...             ...      ...      ...      ...      ...      ...      ...   \n",
       "2024-05-16    False    False    False     True    False    False    False   \n",
       "2024-05-17    False    False    False     True    False    False    False   \n",
       "2024-05-18    False    False    False     True    False    False    False   \n",
       "2024-05-19    False    False    False     True    False    False    False   \n",
       "2024-05-20    False    False    False     True    False    False    False   \n",
       "\n",
       "            month_9  month_10  month_11  month_12      preds   preds_gs  \\\n",
       "2023-05-22    False     False     False     False  14.836311  13.335446   \n",
       "2023-05-23    False     False     False     False  17.028198  15.511145   \n",
       "2023-05-24    False     False     False     False  15.288651  15.613107   \n",
       "2023-05-25    False     False     False     False  14.315332  13.680475   \n",
       "2023-05-26    False     False     False     False  14.030735  14.305593   \n",
       "...             ...       ...       ...       ...        ...        ...   \n",
       "2024-05-16    False     False     False     False  14.486135  16.180431   \n",
       "2024-05-17    False     False     False     False  16.443136  16.079826   \n",
       "2024-05-18    False     False     False     False  14.224728  16.050465   \n",
       "2024-05-19    False     False     False     False  17.508904  15.869523   \n",
       "2024-05-20    False     False     False     False  14.192161  15.756632   \n",
       "\n",
       "            sktime_naive  preds_autoarima  preds_sarimax  lstm_base  \\\n",
       "2023-05-22     12.189839        13.984044      15.683903  14.552407   \n",
       "2023-05-23     12.189839        13.895126      15.437144  14.494919   \n",
       "2023-05-24     12.189839        13.759057      16.204034  14.460179   \n",
       "2023-05-25     12.189839        13.725513      15.958146  14.408459   \n",
       "2023-05-26     12.189839        13.632718      14.690258  14.372857   \n",
       "...                  ...              ...            ...        ...   \n",
       "2024-05-16     12.189839        13.488740      60.371239   7.843710   \n",
       "2024-05-17     12.189839        13.489218      60.781792   7.842792   \n",
       "2024-05-18     12.189839        13.488745      60.610568   7.841887   \n",
       "2024-05-19     12.189839        13.489212      60.060079   7.840998   \n",
       "2024-05-20     12.189839        13.488751      59.834532   7.840117   \n",
       "\n",
       "            lstm_two_layers  \n",
       "2023-05-22        16.209153  \n",
       "2023-05-23        16.235333  \n",
       "2023-05-24        16.295916  \n",
       "2023-05-25        16.373370  \n",
       "2023-05-26        16.459053  \n",
       "...                     ...  \n",
       "2024-05-16        27.257883  \n",
       "2024-05-17        27.264838  \n",
       "2024-05-18        27.271746  \n",
       "2024-05-19        27.278609  \n",
       "2024-05-20        27.285418  \n",
       "\n",
       "[365 rows x 40 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>clusters_description</th>\n",
       "      <th>year</th>\n",
       "      <th>month_1</th>\n",
       "      <th>month_2</th>\n",
       "      <th>month_3</th>\n",
       "      <th>month_4</th>\n",
       "      <th>month_5</th>\n",
       "      <th>month_6</th>\n",
       "      <th>month_7</th>\n",
       "      <th>month_8</th>\n",
       "      <th>month_9</th>\n",
       "      <th>month_10</th>\n",
       "      <th>month_11</th>\n",
       "      <th>month_12</th>\n",
       "      <th>preds</th>\n",
       "      <th>preds_gs</th>\n",
       "      <th>sktime_naive</th>\n",
       "      <th>preds_autoarima</th>\n",
       "      <th>preds_sarimax</th>\n",
       "      <th>lstm_base</th>\n",
       "      <th>lstm_two_layers</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2023-05-22</th>\n",
       "      <td>15.1</td>\n",
       "      <td>6.9</td>\n",
       "      <td>64.3</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.1</td>\n",
       "      <td>17.5</td>\n",
       "      <td>61.3</td>\n",
       "      <td>1027.2</td>\n",
       "      <td>55.6</td>\n",
       "      <td>27.2</td>\n",
       "      <td>99.0</td>\n",
       "      <td>8.7</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.836311</td>\n",
       "      <td>13.335446</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.984044</td>\n",
       "      <td>15.683903</td>\n",
       "      <td>14.552407</td>\n",
       "      <td>16.209153</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-23</th>\n",
       "      <td>14.0</td>\n",
       "      <td>6.1</td>\n",
       "      <td>60.6</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>36.4</td>\n",
       "      <td>21.3</td>\n",
       "      <td>40.6</td>\n",
       "      <td>1025.3</td>\n",
       "      <td>40.0</td>\n",
       "      <td>27.5</td>\n",
       "      <td>192.2</td>\n",
       "      <td>16.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>17.028198</td>\n",
       "      <td>15.511145</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.895126</td>\n",
       "      <td>15.437144</td>\n",
       "      <td>14.494919</td>\n",
       "      <td>16.235333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-24</th>\n",
       "      <td>15.8</td>\n",
       "      <td>6.7</td>\n",
       "      <td>61.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>34.7</td>\n",
       "      <td>20.0</td>\n",
       "      <td>30.7</td>\n",
       "      <td>1021.7</td>\n",
       "      <td>43.9</td>\n",
       "      <td>35.0</td>\n",
       "      <td>156.4</td>\n",
       "      <td>13.6</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>15.288651</td>\n",
       "      <td>15.613107</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.759057</td>\n",
       "      <td>16.204034</td>\n",
       "      <td>14.460179</td>\n",
       "      <td>16.295916</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-25</th>\n",
       "      <td>15.0</td>\n",
       "      <td>6.7</td>\n",
       "      <td>57.9</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>41.5</td>\n",
       "      <td>23.9</td>\n",
       "      <td>12.1</td>\n",
       "      <td>1021.2</td>\n",
       "      <td>62.5</td>\n",
       "      <td>37.2</td>\n",
       "      <td>80.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.09</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.315332</td>\n",
       "      <td>13.680475</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.725513</td>\n",
       "      <td>15.958146</td>\n",
       "      <td>14.408459</td>\n",
       "      <td>16.373370</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-26</th>\n",
       "      <td>14.2</td>\n",
       "      <td>6.9</td>\n",
       "      <td>63.5</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.1</td>\n",
       "      <td>17.3</td>\n",
       "      <td>36.0</td>\n",
       "      <td>1026.5</td>\n",
       "      <td>27.0</td>\n",
       "      <td>29.2</td>\n",
       "      <td>147.4</td>\n",
       "      <td>12.5</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.12</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.030735</td>\n",
       "      <td>14.305593</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.632718</td>\n",
       "      <td>14.690258</td>\n",
       "      <td>14.372857</td>\n",
       "      <td>16.459053</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-16</th>\n",
       "      <td>14.2</td>\n",
       "      <td>11.0</td>\n",
       "      <td>73.4</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>35.2</td>\n",
       "      <td>21.0</td>\n",
       "      <td>183.4</td>\n",
       "      <td>1007.1</td>\n",
       "      <td>86.1</td>\n",
       "      <td>14.9</td>\n",
       "      <td>71.5</td>\n",
       "      <td>6.2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.17</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.486135</td>\n",
       "      <td>16.180431</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.488740</td>\n",
       "      <td>60.371239</td>\n",
       "      <td>7.843710</td>\n",
       "      <td>27.257883</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-17</th>\n",
       "      <td>16.4</td>\n",
       "      <td>11.7</td>\n",
       "      <td>77.8</td>\n",
       "      <td>3.598</td>\n",
       "      <td>100.0</td>\n",
       "      <td>33.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.5</td>\n",
       "      <td>21.0</td>\n",
       "      <td>149.7</td>\n",
       "      <td>1001.1</td>\n",
       "      <td>85.6</td>\n",
       "      <td>15.4</td>\n",
       "      <td>76.1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.20</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>16.443136</td>\n",
       "      <td>16.079826</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.489218</td>\n",
       "      <td>60.781792</td>\n",
       "      <td>7.842792</td>\n",
       "      <td>27.264838</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-18</th>\n",
       "      <td>15.8</td>\n",
       "      <td>10.5</td>\n",
       "      <td>69.7</td>\n",
       "      <td>0.797</td>\n",
       "      <td>100.0</td>\n",
       "      <td>8.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>15.2</td>\n",
       "      <td>147.1</td>\n",
       "      <td>1004.2</td>\n",
       "      <td>52.3</td>\n",
       "      <td>19.4</td>\n",
       "      <td>118.8</td>\n",
       "      <td>10.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.224728</td>\n",
       "      <td>16.050465</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.488745</td>\n",
       "      <td>60.610568</td>\n",
       "      <td>7.841887</td>\n",
       "      <td>27.271746</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-19</th>\n",
       "      <td>16.6</td>\n",
       "      <td>12.4</td>\n",
       "      <td>89.1</td>\n",
       "      <td>10.126</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.4</td>\n",
       "      <td>10.1</td>\n",
       "      <td>213.9</td>\n",
       "      <td>1005.2</td>\n",
       "      <td>58.3</td>\n",
       "      <td>15.8</td>\n",
       "      <td>74.5</td>\n",
       "      <td>6.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.27</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>17.508904</td>\n",
       "      <td>15.869523</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.489212</td>\n",
       "      <td>60.060079</td>\n",
       "      <td>7.840998</td>\n",
       "      <td>27.278609</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-20</th>\n",
       "      <td>15.1</td>\n",
       "      <td>10.3</td>\n",
       "      <td>70.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>9.4</td>\n",
       "      <td>194.8</td>\n",
       "      <td>1009.3</td>\n",
       "      <td>41.4</td>\n",
       "      <td>21.7</td>\n",
       "      <td>177.8</td>\n",
       "      <td>15.5</td>\n",
       "      <td>10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.30</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.192161</td>\n",
       "      <td>15.756632</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.488751</td>\n",
       "      <td>59.834532</td>\n",
       "      <td>7.840117</td>\n",
       "      <td>27.285418</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>365 rows × 40 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 191,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 191
  },
  {
   "cell_type": "code",
   "id": "c1c39366",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:39:20.598800Z",
     "start_time": "2024-08-05T19:39:20.468721Z"
    }
   },
   "source": [
    "plt.figure(figsize=(12, 6))\n",
    "plt.plot(history.history['loss'], label='Training Loss')\n",
    "plt.plot(history.history['val_loss'], label='Validation Loss')\n",
    "plt.legend()\n",
    "plt.show()"
   ],
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ],
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "execution_count": 192
  },
  {
   "metadata": {},
   "cell_type": "markdown",
   "source": "### Tuning batch size for LSTM",
   "id": "3abc7bcd6654981e"
  },
  {
   "cell_type": "code",
   "id": "58c3a4ae",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:43:18.428053Z",
     "start_time": "2024-08-05T19:41:11.358533Z"
    }
   },
   "source": "history_batchsize_1 = model_lstm_two.fit(X_train, y_train, epochs=3, batch_size=1, validation_data=(X_test, y_test))\n",
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/3\n",
      "\u001B[1m3763/3763\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m42s\u001B[0m 11ms/step - loss: 0.0074 - val_loss: 0.0033\n",
      "Epoch 2/3\n",
      "\u001B[1m3763/3763\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m41s\u001B[0m 11ms/step - loss: 0.0043 - val_loss: 0.0030\n",
      "Epoch 3/3\n",
      "\u001B[1m3763/3763\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m43s\u001B[0m 11ms/step - loss: 0.0039 - val_loss: 0.0031\n"
     ]
    }
   ],
   "execution_count": 193
  },
  {
   "cell_type": "code",
   "id": "f23f4750",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:44:51.879278Z",
     "start_time": "2024-08-05T19:44:43.671166Z"
    }
   },
   "source": "yhat_lstm_batch_1 = predict_future(model_lstm_two, values, n_steps, predict_n_days)\n",
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 12ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 13ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 12ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 12ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 12ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 13ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 14ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 12ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 23ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 13ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 12ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 12ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 30ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 13ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 14ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 13ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 7ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 12ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 10ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 9ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 8ms/step\n",
      "\u001B[1m1/1\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m0s\u001B[0m 11ms/step\n"
     ]
    }
   ],
   "execution_count": 195
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:44:51.884956Z",
     "start_time": "2024-08-05T19:44:51.880953Z"
    }
   },
   "cell_type": "code",
   "source": "df_test_w_preds['lstm_two_layers_batch_size_1'] = yhat_lstm_batch_1[n_steps:]\n",
   "id": "cc962c29cbef0307",
   "outputs": [],
   "execution_count": 196
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-08-05T19:44:57.452599Z",
     "start_time": "2024-08-05T19:44:57.438638Z"
    }
   },
   "cell_type": "code",
   "source": "df_test_w_preds",
   "id": "1ebcacde350e5b26",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "            temp   dew  humidity  precip  precipprob  precipcover  snow  \\\n",
       "2023-05-22  15.1   6.9      64.3   0.000         0.0         0.00   0.0   \n",
       "2023-05-23  14.0   6.1      60.6   0.000         0.0         0.00   0.0   \n",
       "2023-05-24  15.8   6.7      61.2   0.000         0.0         0.00   0.0   \n",
       "2023-05-25  15.0   6.7      57.9   0.000         0.0         0.00   0.0   \n",
       "2023-05-26  14.2   6.9      63.5   0.000         0.0         0.00   0.0   \n",
       "...          ...   ...       ...     ...         ...          ...   ...   \n",
       "2024-05-16  14.2  11.0      73.4   0.000         0.0         0.00   0.0   \n",
       "2024-05-17  16.4  11.7      77.8   3.598       100.0        33.33   0.0   \n",
       "2024-05-18  15.8  10.5      69.7   0.797       100.0         8.33   0.0   \n",
       "2024-05-19  16.6  12.4      89.1  10.126       100.0        20.83   0.0   \n",
       "2024-05-20  15.1  10.3      70.2   0.000         0.0         0.00   0.0   \n",
       "\n",
       "            snowdepth  windgust  windspeed  winddir  sealevelpressure  \\\n",
       "2023-05-22        0.0      26.1       17.5     61.3            1027.2   \n",
       "2023-05-23        0.0      36.4       21.3     40.6            1025.3   \n",
       "2023-05-24        0.0      34.7       20.0     30.7            1021.7   \n",
       "2023-05-25        0.0      41.5       23.9     12.1            1021.2   \n",
       "2023-05-26        0.0      26.1       17.3     36.0            1026.5   \n",
       "...               ...       ...        ...      ...               ...   \n",
       "2024-05-16        0.0      35.2       21.0    183.4            1007.1   \n",
       "2024-05-17        0.0      30.5       21.0    149.7            1001.1   \n",
       "2024-05-18        0.0      25.0       15.2    147.1            1004.2   \n",
       "2024-05-19        0.0      18.4       10.1    213.9            1005.2   \n",
       "2024-05-20        0.0      17.4        9.4    194.8            1009.3   \n",
       "\n",
       "            cloudcover  visibility  solarradiation  solarenergy  uvindex  \\\n",
       "2023-05-22        55.6        27.2            99.0          8.7      4.0   \n",
       "2023-05-23        40.0        27.5           192.2         16.3      9.0   \n",
       "2023-05-24        43.9        35.0           156.4         13.6      7.0   \n",
       "2023-05-25        62.5        37.2            80.0          7.0      3.0   \n",
       "2023-05-26        27.0        29.2           147.4         12.5      7.0   \n",
       "...                ...         ...             ...          ...      ...   \n",
       "2024-05-16        86.1        14.9            71.5          6.2      2.0   \n",
       "2024-05-17        85.6        15.4            76.1          6.5      4.0   \n",
       "2024-05-18        52.3        19.4           118.8         10.3      9.0   \n",
       "2024-05-19        58.3        15.8            74.5          6.5      3.0   \n",
       "2024-05-20        41.4        21.7           177.8         15.5     10.0   \n",
       "\n",
       "            severerisk  moonphase  clusters_description  year  month_1  \\\n",
       "2023-05-22        10.0       0.00                   1.0  2023    False   \n",
       "2023-05-23        10.0       0.03                   1.0  2023    False   \n",
       "2023-05-24        10.0       0.06                   1.0  2023    False   \n",
       "2023-05-25        10.0       0.09                   1.0  2023    False   \n",
       "2023-05-26        10.0       0.12                   2.0  2023    False   \n",
       "...                ...        ...                   ...   ...      ...   \n",
       "2024-05-16        10.0       0.17                   1.0  2024    False   \n",
       "2024-05-17        10.0       0.20                   1.0  2024    False   \n",
       "2024-05-18        10.0       0.25                   0.0  2024    False   \n",
       "2024-05-19        10.0       0.27                   1.0  2024    False   \n",
       "2024-05-20        10.0       0.30                   1.0  2024    False   \n",
       "\n",
       "            month_2  month_3  month_4  month_5  month_6  month_7  month_8  \\\n",
       "2023-05-22    False    False    False     True    False    False    False   \n",
       "2023-05-23    False    False    False     True    False    False    False   \n",
       "2023-05-24    False    False    False     True    False    False    False   \n",
       "2023-05-25    False    False    False     True    False    False    False   \n",
       "2023-05-26    False    False    False     True    False    False    False   \n",
       "...             ...      ...      ...      ...      ...      ...      ...   \n",
       "2024-05-16    False    False    False     True    False    False    False   \n",
       "2024-05-17    False    False    False     True    False    False    False   \n",
       "2024-05-18    False    False    False     True    False    False    False   \n",
       "2024-05-19    False    False    False     True    False    False    False   \n",
       "2024-05-20    False    False    False     True    False    False    False   \n",
       "\n",
       "            month_9  month_10  month_11  month_12      preds   preds_gs  \\\n",
       "2023-05-22    False     False     False     False  14.836311  13.335446   \n",
       "2023-05-23    False     False     False     False  17.028198  15.511145   \n",
       "2023-05-24    False     False     False     False  15.288651  15.613107   \n",
       "2023-05-25    False     False     False     False  14.315332  13.680475   \n",
       "2023-05-26    False     False     False     False  14.030735  14.305593   \n",
       "...             ...       ...       ...       ...        ...        ...   \n",
       "2024-05-16    False     False     False     False  14.486135  16.180431   \n",
       "2024-05-17    False     False     False     False  16.443136  16.079826   \n",
       "2024-05-18    False     False     False     False  14.224728  16.050465   \n",
       "2024-05-19    False     False     False     False  17.508904  15.869523   \n",
       "2024-05-20    False     False     False     False  14.192161  15.756632   \n",
       "\n",
       "            sktime_naive  preds_autoarima  preds_sarimax  lstm_base  \\\n",
       "2023-05-22     12.189839        13.984044      15.683903  14.552407   \n",
       "2023-05-23     12.189839        13.895126      15.437144  14.494919   \n",
       "2023-05-24     12.189839        13.759057      16.204034  14.460179   \n",
       "2023-05-25     12.189839        13.725513      15.958146  14.408459   \n",
       "2023-05-26     12.189839        13.632718      14.690258  14.372857   \n",
       "...                  ...              ...            ...        ...   \n",
       "2024-05-16     12.189839        13.488740      60.371239   7.843710   \n",
       "2024-05-17     12.189839        13.489218      60.781792   7.842792   \n",
       "2024-05-18     12.189839        13.488745      60.610568   7.841887   \n",
       "2024-05-19     12.189839        13.489212      60.060079   7.840998   \n",
       "2024-05-20     12.189839        13.488751      59.834532   7.840117   \n",
       "\n",
       "            lstm_two_layers  lstm_two_layers_batch_size_1  \n",
       "2023-05-22        16.209153                     15.540488  \n",
       "2023-05-23        16.235333                     16.238142  \n",
       "2023-05-24        16.295916                     16.644204  \n",
       "2023-05-25        16.373370                     16.965167  \n",
       "2023-05-26        16.459053                     17.253970  \n",
       "...                     ...                           ...  \n",
       "2024-05-16        27.257883                     21.621174  \n",
       "2024-05-17        27.264838                     21.621174  \n",
       "2024-05-18        27.271746                     21.621174  \n",
       "2024-05-19        27.278609                     21.621174  \n",
       "2024-05-20        27.285418                     21.621174  \n",
       "\n",
       "[365 rows x 41 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>precipprob</th>\n",
       "      <th>precipcover</th>\n",
       "      <th>snow</th>\n",
       "      <th>snowdepth</th>\n",
       "      <th>windgust</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>winddir</th>\n",
       "      <th>sealevelpressure</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>visibility</th>\n",
       "      <th>solarradiation</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>clusters_description</th>\n",
       "      <th>year</th>\n",
       "      <th>month_1</th>\n",
       "      <th>month_2</th>\n",
       "      <th>month_3</th>\n",
       "      <th>month_4</th>\n",
       "      <th>month_5</th>\n",
       "      <th>month_6</th>\n",
       "      <th>month_7</th>\n",
       "      <th>month_8</th>\n",
       "      <th>month_9</th>\n",
       "      <th>month_10</th>\n",
       "      <th>month_11</th>\n",
       "      <th>month_12</th>\n",
       "      <th>preds</th>\n",
       "      <th>preds_gs</th>\n",
       "      <th>sktime_naive</th>\n",
       "      <th>preds_autoarima</th>\n",
       "      <th>preds_sarimax</th>\n",
       "      <th>lstm_base</th>\n",
       "      <th>lstm_two_layers</th>\n",
       "      <th>lstm_two_layers_batch_size_1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2023-05-22</th>\n",
       "      <td>15.1</td>\n",
       "      <td>6.9</td>\n",
       "      <td>64.3</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.1</td>\n",
       "      <td>17.5</td>\n",
       "      <td>61.3</td>\n",
       "      <td>1027.2</td>\n",
       "      <td>55.6</td>\n",
       "      <td>27.2</td>\n",
       "      <td>99.0</td>\n",
       "      <td>8.7</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.836311</td>\n",
       "      <td>13.335446</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.984044</td>\n",
       "      <td>15.683903</td>\n",
       "      <td>14.552407</td>\n",
       "      <td>16.209153</td>\n",
       "      <td>15.540488</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-23</th>\n",
       "      <td>14.0</td>\n",
       "      <td>6.1</td>\n",
       "      <td>60.6</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>36.4</td>\n",
       "      <td>21.3</td>\n",
       "      <td>40.6</td>\n",
       "      <td>1025.3</td>\n",
       "      <td>40.0</td>\n",
       "      <td>27.5</td>\n",
       "      <td>192.2</td>\n",
       "      <td>16.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>17.028198</td>\n",
       "      <td>15.511145</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.895126</td>\n",
       "      <td>15.437144</td>\n",
       "      <td>14.494919</td>\n",
       "      <td>16.235333</td>\n",
       "      <td>16.238142</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-24</th>\n",
       "      <td>15.8</td>\n",
       "      <td>6.7</td>\n",
       "      <td>61.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>34.7</td>\n",
       "      <td>20.0</td>\n",
       "      <td>30.7</td>\n",
       "      <td>1021.7</td>\n",
       "      <td>43.9</td>\n",
       "      <td>35.0</td>\n",
       "      <td>156.4</td>\n",
       "      <td>13.6</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>15.288651</td>\n",
       "      <td>15.613107</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.759057</td>\n",
       "      <td>16.204034</td>\n",
       "      <td>14.460179</td>\n",
       "      <td>16.295916</td>\n",
       "      <td>16.644204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-25</th>\n",
       "      <td>15.0</td>\n",
       "      <td>6.7</td>\n",
       "      <td>57.9</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>41.5</td>\n",
       "      <td>23.9</td>\n",
       "      <td>12.1</td>\n",
       "      <td>1021.2</td>\n",
       "      <td>62.5</td>\n",
       "      <td>37.2</td>\n",
       "      <td>80.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.09</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.315332</td>\n",
       "      <td>13.680475</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.725513</td>\n",
       "      <td>15.958146</td>\n",
       "      <td>14.408459</td>\n",
       "      <td>16.373370</td>\n",
       "      <td>16.965167</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05-26</th>\n",
       "      <td>14.2</td>\n",
       "      <td>6.9</td>\n",
       "      <td>63.5</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.1</td>\n",
       "      <td>17.3</td>\n",
       "      <td>36.0</td>\n",
       "      <td>1026.5</td>\n",
       "      <td>27.0</td>\n",
       "      <td>29.2</td>\n",
       "      <td>147.4</td>\n",
       "      <td>12.5</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.12</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.030735</td>\n",
       "      <td>14.305593</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.632718</td>\n",
       "      <td>14.690258</td>\n",
       "      <td>14.372857</td>\n",
       "      <td>16.459053</td>\n",
       "      <td>17.253970</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-16</th>\n",
       "      <td>14.2</td>\n",
       "      <td>11.0</td>\n",
       "      <td>73.4</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>35.2</td>\n",
       "      <td>21.0</td>\n",
       "      <td>183.4</td>\n",
       "      <td>1007.1</td>\n",
       "      <td>86.1</td>\n",
       "      <td>14.9</td>\n",
       "      <td>71.5</td>\n",
       "      <td>6.2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.17</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.486135</td>\n",
       "      <td>16.180431</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.488740</td>\n",
       "      <td>60.371239</td>\n",
       "      <td>7.843710</td>\n",
       "      <td>27.257883</td>\n",
       "      <td>21.621174</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-17</th>\n",
       "      <td>16.4</td>\n",
       "      <td>11.7</td>\n",
       "      <td>77.8</td>\n",
       "      <td>3.598</td>\n",
       "      <td>100.0</td>\n",
       "      <td>33.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.5</td>\n",
       "      <td>21.0</td>\n",
       "      <td>149.7</td>\n",
       "      <td>1001.1</td>\n",
       "      <td>85.6</td>\n",
       "      <td>15.4</td>\n",
       "      <td>76.1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.20</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>16.443136</td>\n",
       "      <td>16.079826</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.489218</td>\n",
       "      <td>60.781792</td>\n",
       "      <td>7.842792</td>\n",
       "      <td>27.264838</td>\n",
       "      <td>21.621174</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-18</th>\n",
       "      <td>15.8</td>\n",
       "      <td>10.5</td>\n",
       "      <td>69.7</td>\n",
       "      <td>0.797</td>\n",
       "      <td>100.0</td>\n",
       "      <td>8.33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>15.2</td>\n",
       "      <td>147.1</td>\n",
       "      <td>1004.2</td>\n",
       "      <td>52.3</td>\n",
       "      <td>19.4</td>\n",
       "      <td>118.8</td>\n",
       "      <td>10.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.224728</td>\n",
       "      <td>16.050465</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.488745</td>\n",
       "      <td>60.610568</td>\n",
       "      <td>7.841887</td>\n",
       "      <td>27.271746</td>\n",
       "      <td>21.621174</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-19</th>\n",
       "      <td>16.6</td>\n",
       "      <td>12.4</td>\n",
       "      <td>89.1</td>\n",
       "      <td>10.126</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.4</td>\n",
       "      <td>10.1</td>\n",
       "      <td>213.9</td>\n",
       "      <td>1005.2</td>\n",
       "      <td>58.3</td>\n",
       "      <td>15.8</td>\n",
       "      <td>74.5</td>\n",
       "      <td>6.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.27</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>17.508904</td>\n",
       "      <td>15.869523</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.489212</td>\n",
       "      <td>60.060079</td>\n",
       "      <td>7.840998</td>\n",
       "      <td>27.278609</td>\n",
       "      <td>21.621174</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-20</th>\n",
       "      <td>15.1</td>\n",
       "      <td>10.3</td>\n",
       "      <td>70.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.4</td>\n",
       "      <td>9.4</td>\n",
       "      <td>194.8</td>\n",
       "      <td>1009.3</td>\n",
       "      <td>41.4</td>\n",
       "      <td>21.7</td>\n",
       "      <td>177.8</td>\n",
       "      <td>15.5</td>\n",
       "      <td>10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.30</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2024</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>14.192161</td>\n",
       "      <td>15.756632</td>\n",
       "      <td>12.189839</td>\n",
       "      <td>13.488751</td>\n",
       "      <td>59.834532</td>\n",
       "      <td>7.840117</td>\n",
       "      <td>27.285418</td>\n",
       "      <td>21.621174</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>365 rows × 41 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 197,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 197
  },
  {
   "cell_type": "markdown",
   "id": "81740ec4-4bfc-4111-9c71-0db72c424550",
   "metadata": {},
   "source": [
    "## Download of updated dataframe"
   ]
  },
  {
   "cell_type": "code",
   "id": "ee0c5b6e-780b-47f6-81ff-d7dd23ad8fea",
   "metadata": {
    "tags": []
   },
   "source": [
    "# folder_path = r'C:\\Users\\nicol\\OneDrive\\Master\\Goldsmiths\\Thesis\\weather-prediction\\data'\n",
    "# file_name = 'london_weather_2014-2024_updated.csv'\n",
    "# full_path = os.path.join(folder_path, file_name)\n",
    "\n",
    "# # save the DataFrame to the specified path\n",
    "# df_london.to_csv(full_path)"
   ],
   "outputs": [],
   "execution_count": null
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
